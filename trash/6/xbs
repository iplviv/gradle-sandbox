ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var target = "<a>ex<b>pec</b>ted</a>";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.decodeHtml(target);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsGetEvent(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper=this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile=this.getMock(component,"getEvent",function(){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual=true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function(){},
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesEventTypeToGetEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function (targetEventType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventType;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function(){},
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected="expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsSetParamsOnEvent(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual=true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesListViewEventTypeToSetParamsOnEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function (targetParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual = targetParams.type;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected="expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesTargetToSetParamsOnEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function (targetParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual = targetParams.context.source;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToSetParamsOnEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function (targetParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual = targetParams.context.event;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesHelperToSetParamsOnEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function (targetParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual = targetParams.context.helper;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = helper;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesDataToSetParamsOnEvent(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        setParams:function (targetParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                            actual = targetParams.data;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsGetEventTargets(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper=this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets=this.getHelperMock(component,"getEventTargets",function(){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual=true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent=this.getHelperMock(component,"fireEvent",function(){});
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function(){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToGetEventTargets(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets = this.getHelperMock(component, "getEventTargets", function (targetComponent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected=component;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesDomEventTargetToGetEventTargets(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets = this.getHelperMock(component, "getEventTargets", function (targetComponent,targetEventTarget) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventTarget;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                        helper.fireEvents(component,"",{target:expected});
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsGetEventType(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function () {});
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToGetEventType(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function (targetComponent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function () {});
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesTargetColumnToGetEventType(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets = this.getHelperMock(component, "getEventTargets", function (targetComponent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function (targetComponent,targetColumn) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetColumn;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function () {});
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function(){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsFireEventForCell(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent,targetElement,targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual=targetType;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "Cell";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEventForCell(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesTargetColumnToFireEventForCell(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets = this.getHelperMock(component, "getEventTargets", function (targetComponent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if(!actual)actual=targetElement;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEventForCell(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetEventName;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "oncellEventType";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesDomEventToFireEventForCell(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType,targetDomEvent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetDomEvent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesEventParamsToFireEventForCell(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType, targetDomEvent, targetEventParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetEventParams;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType, targetDomEvent, targetEventParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if(targetEventName.indexOf("onrow")==0)actual = true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function FiresTableEventForCell(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType, targetDomEvent, targetEventParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (targetEventName.indexOf("oncell") == -1 && targetEventName.indexOf("onrow") == -1 && targetEventName.indexOf("on")==0)actual = true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual=targetType;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    return "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesTargetColumnToFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventTargets = this.getHelperMock(component, "getEventTargets", function (targetComponent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    return "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetElement;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mockGetEventTargets(function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    return "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetEventName;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "onheaderEventType";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesDomEventToFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    return "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType, targetDomEvent) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetDomEvent;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function PassesEventParamsToFireEventForHeader(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    return "Header";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType, targetDomEvent, targetEventParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    if (!actual)actual = targetEventParams;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CallsFireEventForRow(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockGetEventType = this.getHelperMock(component, "getEventType", function () {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var mockFireEvent = this.getHelperMock(component, "fireEvent", function (targetComponent, targetElement, targetEventName, targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                    actual = targetType;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "Row";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:    testHelperFormatColumnName:{
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function ReturnsEmptyStringIfColumnNameIsNull(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper=this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected='';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual=helper.formatColumnName(null);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function ReturnsEmptyStringIfColumnNameIsUndefined(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = '';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatColumnName();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function SplitsWordsOnCapitalization(component){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected="Expected Name";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatColumnName("ExpectedName");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            function CapitalizesFirstWord(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "Expected Name";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatColumnName("expectedName");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:    testHelperFormatContent:{
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected="expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var targetItem = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                targetItem[expected]=expected;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatContent(null, targetItem, expected);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var targetItem = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                targetItem[expected] = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                targetItem[expected][expected] = expected;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatContent(null, targetItem, expected+'.'+expected);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var expected = "{\"expected\":\"expected\"}";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var targetItem = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                targetItem["expected"] = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                targetItem["expected"]["expected"] = "expected";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                var actual = helper.formatContent(null, targetItem, "expected");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:    getHelperMock:function (component, name, mock) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:        return this.getMock(this.getHelper(component), name, mock);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:    getMock:function (target, name, mock) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            var original = target[name];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                mock.mocked = original.bind(target);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                target[name] = mock;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                return during.apply(target, Array.prototype.slice.call(arguments, 1));
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            } catch (e) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            } finally {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:                target[name] = original;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:    recordException:function (delegate) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:            delegate();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewTest.js:        } catch (e) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    clickHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    dblclickHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    keydownHandler:function(component,domEvent,helper){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    keypressHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    keyupHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    mousedownHandler:function(component,domEvent,helper){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    mouseoutHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    mouseoverHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    mouseupHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    touchstartHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:        helper.fireEvents(component, "touchstart", domEvent);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    touchmoveHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewController.js:    touchendHandler:function (component, domEvent, helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:<ruau:component implements="ui:elementInterface" extensible="true" support="GA"            description="Deprecated. A column based listview with comprehensive event support.">
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:dependency resource="ui:listView*" />
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="id" type="String" default="default"                              description="The unique id of the listview instance."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="alternateRowClass" type="String" required="false"                description="Optional. The css class to use for alternating rows."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="blockSize" type="Integer" default="50"                           description="The size of the initial block of rows to render."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="columns" type="List"                                             description="Read-only. Gets the list of column components that are generated based on the supplied or generated column templates."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="dataColumns" type="List"                                         description="Read-only. Gets the list of column components corresponding to the fields describing data that are generated based on the supplied or generated column templates."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="dataTemplates" type="List"                                       description="Read-only. Gets the list of specified or generated column templates corresponding to the fields describing data."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="emptyMessage" type="String" default="No records to display."     description="The message to display when no items are specified."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="footer" type="Ruue.Component[]"                                 description="Optional. A facet wherein to specify tfoot level components. Care should be taken to match the columns described in dataColumns."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="items" type="List"                                               description="Gets or sets the list of items to display in the listView."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="rowClass" type="String"                                          description="Optional. The css class to use for rows."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:attribute name="rowTooltip" type="String"                                        description="The tooltip to display when hovering over rows. Accepts delayed attribute expansion of the form {#v.item}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncolumnsready" type="ui:listViewEvent"                      description="The event that fires when all column templates have been processed and the columns, dataColumns and dataTemplates attributes are all available."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onitemsready" type="ui:listViewEvent"                        description="The event that fires when all item rows have been processed, column types instantiated, data formatters run, and the corresponding component trees have been generated."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellclick" type="ui:listViewEvent"                         description="The event that fires when a data cell is clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheaderclick" type="ui:listViewEvent"                       description="The event that fires when a header cell is clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowclick" type="ui:listViewEvent"                          description="The event that fires when a row is clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onclick" type="ui:listViewEvent"                             description="The event that fires when the table is clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncelldblclick" type="ui:listViewEvent"                      description="The event that fires when a data cell is double clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheaderdblclick" type="ui:listViewEvent"                    description="The event that fires when a header cell is double clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowdblclick" type="ui:listViewEvent"                       description="The event that fires when a row is double clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="ondblclick" type="ui:listViewEvent"                          description="The event that fires when the table is double clicked."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellmousedown" type="ui:listViewEvent"                     description="The event that fires when a data cell mousedown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadermousedown" type="ui:listViewEvent"                   description="The event that fires when a header cell mousedown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowmousedown" type="ui:listViewEvent"                      description="The event that fires when a row mousedown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onmousedown" type="ui:listViewEvent"                         description="The event that fires when a table mousedown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellmouseup" type="ui:listViewEvent"                       description="The event that fires when a data cell mouseup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadermouseup" type="ui:listViewEvent"                     description="The event that fires when a header cell mouseup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowmouseup" type="ui:listViewEvent"                        description="The event that fires when a row mouseup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onmouseup" type="ui:listViewEvent"                           description="The event that fires when a table mouseup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellmouseover" type="ui:listViewEvent"                     description="The event that fires when a data cell mouseover occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadermouseover" type="ui:listViewEvent"                   description="The event that fires when a header cell mouseover occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowmouseover" type="ui:listViewEvent"                      description="The event that fires when a row mouseover occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onmouseover" type="ui:listViewEvent"                         description="The event that fires when a table mouseover occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellmouseout" type="ui:listViewEvent"                      description="The event that fires when a data cell mouseout occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadermouseout" type="ui:listViewEvent"                    description="The event that fires when a header cell mouseout occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowmouseout" type="ui:listViewEvent"                       description="The event that fires when a row mouseout occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onmouseout" type="ui:listViewEvent"                          description="The event that fires when a table mouseout occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellkeydown" type="ui:listViewEvent"                       description="The event that fires when a data cell keydown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheaderkeydown" type="ui:listViewEvent"                     description="The event that fires when a header cell keydown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowkeydown" type="ui:listViewEvent"                        description="The event that fires when a row keydown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onkeydown" type="ui:listViewEvent"                           description="The event that fires when a table keydown occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellkeyup" type="ui:listViewEvent"                         description="The event that fires when a data cell keyup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheaderkeyup" type="ui:listViewEvent"                       description="The event that fires when a header cell keyup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowkeyup" type="ui:listViewEvent"                          description="The event that fires when a row keyup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onkeyup" type="ui:listViewEvent"                             description="The event that fires when a table keyup occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncellkeypress" type="ui:listViewEvent"                      description="The event that fires when a data cell keypress occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheaderkeypress" type="ui:listViewEvent"                    description="The event that fires when a header cell keypress occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowkeypress" type="ui:listViewEvent"                       description="The event that fires when a row keypress occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onkeypress" type="ui:listViewEvent"                          description="The event that fires when a table keypress occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncelltouchstart" type="ui:listViewEvent"                    description="The event that fires when a data cell touchstart occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadertouchstart" type="ui:listViewEvent"                  description="The event that fires when a header cell touchstart occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowtouchstart" type="ui:listViewEvent"                     description="The event that fires when a row touchstart occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="ontouchstart" type="ui:listViewEvent"                        description="The event that fires when a table touchstart occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncelltouchmove" type="ui:listViewEvent"                     description="The event that fires when a data cell touchmove occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadertouchmove" type="ui:listViewEvent"                   description="The event that fires when a header cell touchmove occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowtouchmove" type="ui:listViewEvent"                      description="The event that fires when a row touchmove occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="ontouchmove" type="ui:listViewEvent"                         description="The event that fires when a table touchmove occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="oncelltouchend" type="ui:listViewEvent"                      description="The event that fires when a data cell touchend occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onheadertouchend" type="ui:listViewEvent"                    description="The event that fires when a header cell touchend occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="onrowtouchend" type="ui:listViewEvent"                       description="The event that fires when a row touchend occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:registerEvent name="ontouchend" type="ui:listViewEvent"                          description="The event that fires when a table touchend occurs."/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:handler name="change" value="{!v.body}" action="{!c.buildList}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:handler name="change" value="{!v.emptyText}" action="{!c.buildList}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:handler name="change" value="{!v.id}" action="{!c.buildList}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:handler name="change" value="{!v.items}" action="{!c.buildList}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <ruau:handler name="change" value="{!v.class}" action="{!c.buildList}"/>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    <table ruau:id="listView:table"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           id="{!'ui:listView:'+(v.id!='default'?v.id:globalId)}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           class="{!'listView '+v.class}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onclick="{!c.clickHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           ondblclick="{!c.dblclickHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onkeydown="{!c.keydownHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onkeyup="{!c.keyupHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onkeypress="{!c.keypressHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onmousedown="{!c.mousedownHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onmouseup="{!c.mousedownHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onmouseover="{!c.mouseoverHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           onmouseout="{!c.mouseoutHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           ontouchstart="{!c.touchstartHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           ontouchmove="{!c.touchmoveHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:           ontouchend="{!c.touchendHandler}"
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:        <thead ruau:id="listView:header" class="listViewHeader"></thead>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:        <tfoot ruau:id="listView:footer" class="listViewFooter">{!v.footer}</tfoot>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:        <tbody ruau:id="listView:body" tabIndex="0" class="listViewBody"></tbody>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:    </table>
ruau/ruau-mokponents/src/main/components/ui/listView/listView.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listView/listViewRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	addEvents : function(component, events) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var dispatcher = component.getEventDispatcher();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for ( var x in events) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// TODO: AURA: HACK: Need a way to copy events properly.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (events.hasOwnProperty(x))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					dispatcher[x] = events[x];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	buildColumns : function(component, templates, listHeader) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!templates)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			templates = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var allColumns = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var attributes = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var columns = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var columnCount = 0;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var columnTemplateRows = templates.columnTemplates || [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var columnTemplates = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var dataColumns = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var headerRows = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var rowClass = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var skipMap = {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			headers : null,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var template = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Loop through identified rows of column headers
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		for (var row = 0; row < columnTemplateRows.length; row++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			columnTemplates = columnTemplateRows[row];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			columnCount = columnTemplates.length;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			rowClass = this.getRowClass(component, row);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Loop over columns for the current header row. These are columns
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// that might be rowSpanned into cross-index positions
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var column = 0; column < columnCount; column++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// We need to work with the concrete component to get all of the
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// concrete attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				template = columnTemplates[column].getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Take an unwrapped copy of template attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				attributes = this.getAttributes(template);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Remove irrelevant attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				for ( var x in skipMap) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					skipMap[x] = attributes[x];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					delete attributes[x];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Make modifications befitting header columns
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				attributes.body = attributes.title;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// content of the title for the header tooltip
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (!skipMap.tooltip)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.tooltip = this.getTextContent(attributes.title);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// If the tooltip is a delayed expression, use the text
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// content of the title for the header tooltip
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (this.getExpression(skipMap.tooltip))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						attributes.tooltip = this.getTextContent(attributes.title);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// Otherwise, use the value that was specified for both
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// headers and data cells
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						attributes.tooltip = skipMap.tooltip;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				attributes.column = {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					template : template
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				attributes.formatters = this.resolveObjects(attributes.formatters);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Allow data columns to span the remainder of the rows
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (template.isDataColumn) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.rowSpan = columnTemplateRows.length - row;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Remove column scope from complex headers
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (skipMap.headers && skipMap.headers.indexOf(' ') > -1) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.scope = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Generate actual column header cell and preserve the reference
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// for the flattened v.columns and v.dataColumns attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				columns[column] = this.generateComponent("ui:listViewColumnHeader", attributes);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				allColumns.push(columns[column]);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (template.isDataColumn) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					dataColumns.push(columns[column]);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Restore attributes for use in row fields and preserve
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// unwrapped attributes on template
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				for ( var x in skipMap) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes[x] = skipMap[x];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				template.attributes = attributes;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Copy template events now to prevent iterating in the build
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				template.events = this.getEvents(template);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var headerRow = this.generateComponent("ui:listViewRow", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				"class" : rowClass
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			headerRows.push(headerRow);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Add the columns to the header, save the processed columns and fire
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// the column ready event
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		listHeader.set("v.body", headerRows);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		component.set("v.columns", allColumns);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		component.set("v.dataColumns", dataColumns);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		component.set("v.dataTemplates", templates.dataTemplates);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.fireEvent(component, component, "oncolumnsready", "ListHeader");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var templates = this.getColumnTemplates(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Or create them from the first row of data
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!templates)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			templates = this.generateColumns(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Build THEAD component tree with only listViewColumnHeader types
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.buildColumns(component, templates, component.find("listView:header"));
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Build TBODY component tree with column types and formatters
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.buildRows(component, templates, component.find("listView:body"));
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	buildRows : function(component, templates, listBody) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!templates) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			templates = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var blockSize = component.get("v.blockSize");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var buildRowBlock = buildRowBlock.bind(this);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var containerSet = false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var dataTemplates = templates.dataTemplates || [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var dataTemplateCount = dataTemplates.length;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var index = 0;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var items = component.get("v.items");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var itemCount = items ? items.length : 0;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var listId = component.get("v.id");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var rows = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var rowTooltip = component.get("v.rowTooltip");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Draw Empty Message
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			buildEmptyMessage(this);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// DEBUG: Performance Marker
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			$A.Perf.mark("startBlockRender" + component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Start component chain to build items
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		function buildEmptyMessage(helper) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var emptyMessage = helper.generateComponent("ruau:unescapedHtml", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				value : component.get("v.emptyMessage")
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var emptyCell = helper.generateComponent("ruau:html", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				body : [ emptyMessage ],
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				tag : "TD",
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				HTMLAttributes : $A.expressionService.create(component, {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					"class" : "emptyMessage",
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					colSpan : dataTemplateCount || 1
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var row = helper.generateComponent("ui:listViewRow", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				"class" : helper.getRowClass(component, 0)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			helper.fireEvent(component, component, "onitemsready", "EmptyList");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var item = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var rowClass = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if (index && !containerSet) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Set a rough container height estimate based on the first row
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// of data
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var firstRow = rows[0] && rows[0].getElement();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				containerSet = true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var i = 0; i < blockSize && index < itemCount; i++, index++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				rowClass = this.getRowClass(component, index);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var columns = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				for (var c = 0; c < dataTemplateCount; c++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// We need to work with the concrete component to set all of
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// the concrete attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					var template = dataTemplates[c].getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (!template)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// Take the unwrapped attributes we stored while building
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// columns and modify them for row field
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					var attributes = template.attributes;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					var tooltip = attributes.tooltip;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (attributes.title == template.title)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						delete attributes.title;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					delete attributes.id;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.column = {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						template : template
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.index = index;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.item = item;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (template.isInstanceOf("ui:listViewColumnHeader")) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						// Set row-level headers to the proper scope
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						attributes.scope = "row";
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						// Or remove scope altogether
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						delete attributes.scope;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						if (!attributes.headers || attributes.headers.indexOf(' ') < 0) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:							// And simple (single) headers
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:							delete attributes.headers;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// Run all specified formatters on field and set the content
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// and tooltip of the cell
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					var content = this.formatContent(template, item, attributes.fieldName, items, index, attributes.formatters);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (!attributes.tooltip && !rowTooltip)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						attributes.tooltip = this.getTextContent(content);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.body = content;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                    attributes.markup = content;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// Generate the concrete column type from the template
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					var typeName = template.getDef().getDescriptor().getQualifiedName();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                    var setUrl=false;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                    if(typeName=="markup://ui:listViewColumnEmail"){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                        if(!attributes["url"]||attributes["url"]==="mailto:"){
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                            attributes["url"]=attributes["body"];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                            attributes["body"]=null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					columns[c] = this.generateComponent(typeName, attributes, template.events);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:                        attributes["url"]='';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					// Reset the tooltip in case we changed it.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					attributes.tooltip = tooltip;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var row = this.generateComponent("ui:listViewRow", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					"class" : rowClass,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// If there are more rows, queue next chunk
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				this.setImmediate(buildRowBlock);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// DEBUG: Performance Marker
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			$A.Perf.endMark("BlockRender" + component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// If the final item/block has been drawn, reset container height to
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// allow proper overflow and fire the items ready event
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					listBody.getElement().style.height = 'auto';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				this.fireEvent(component, component, "onitemsready", "PopulatedList");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// DEBUG: Performance Marker
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				$A.Perf.endMark("FullRender" + component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Create a floating node as our translation container
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!this.translator)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			this.translator = document.createElement("div");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var translator = this.translator;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		translator.innerHTML = htmlString;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var textContent = translator.textContent || translator.innerText;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Remove the node reference after the current UI thread has finished.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			clearTimeout(this.decodeTimer);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			this.translator = null
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	fireEvent : function(component, target, eventType, listViewEventType, rawEvent, data) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var listViewEvent = component.getEvent(eventType);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		listViewEvent.setParams({
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				source : target,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				event : rawEvent || null,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			data : data || {}
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	fireEvents : function(component, type, domEvent, eventParams) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!eventParams)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			eventParams = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var targets = this.getEventTargets(component, domEvent && domEvent.target);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var targetType = this.getEventType(component, targets.column);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		switch (targetType) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		case "Cell":
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		case "Header":
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			this.fireEvent(component, targets.column, [ "on", targetType.toLowerCase(), type ].join(''), targetType, domEvent, eventParams);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Intentional fall-through to also fire row events for cells and
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// headers. Thus, no break statement.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		case "Row":
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			this.fireEvent(component, targets.row, "onrow" + type, targetType, domEvent, eventParams);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			break;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.fireEvent(component, targets.section, "on" + type, targetType, domEvent, eventParams);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	formatColumnName : function(columnName) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!columnName)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (columnName.length == 1)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			return columnName.toUpperCase();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return columnName.charAt(0).toUpperCase() + columnName.substr(1).replace(/\B([A-Z])/g, " $1");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	formatContent : function(columnTemplate, dataItem, fieldName, items, index, formatters) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var content = dataItem[fieldName];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			content = this.resolveObject(dataItem, fieldName);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (formatters) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Loop over formatters in order, modifying the content each time
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var i = 0; i < formatters.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				content = formatters[i](content, dataItem, fieldName, items, index);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// If we have still have an object, return its string representation
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	generateColumns : function(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var columns = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var items = component.get("v.items");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var item = items[0];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var column in item) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Only generate columns for first level properties that are not
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (!item.hasOwnProperty(column) || typeof (item[column]) == "function")
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var template = this.generateComponent("ui:listViewColumn", {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					fieldName : column,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					title : $A.expressionService.create(component, this.formatColumnName(column))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				columns.push(template);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			columnTemplates : [ columns ],
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			dataTemplates : columns
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	generateComponent : function(type, attributes, events) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var component = $A.componentService.newComponentDeprecated({
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				descriptor : (type.indexOf('://') == -1 ? "markup://" : '') + type
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			attributes : {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				values : attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.parseExpressions(component, attributes);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.addEvents(component, events);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var attributeMap = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var attributeDelegate = this.getAttribute.bind(this, component, attributeMap);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		component.getDef().getAttributeDefs().each(attributeDelegate);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return attributeMap;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getAttribute : function(component, attributeMap, value) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var attribute = value.getDescriptor().getName();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var attributeValue = component.get("v." + attribute);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		attributeMap[attribute] = attributeValue;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getColumnTemplates : function(component, listId, columnTemplates, dataTemplates, colSpans, headers, depth, nextId) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Create recursion pointer constructs for first level call
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!columnTemplates)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			columnTemplates = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!colSpans)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			colSpans = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!dataTemplates)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			dataTemplates = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!headers)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			headers = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			component.set("v.headers", headers.join(' '));
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var table = component.find("listView:table");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			listId = table.get("v.HTMLAttributes.id");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var id = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var column = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var listViewColumns = component.find({
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			instancesOf : "ui:listViewColumn"
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// Iterate over child templates at the current depth
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if (!columnTemplates[depth])
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				columnTemplates[depth] = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var childColumns = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var currentHeaders = headers.length;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var i = 0; i < listViewColumns.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// We have to work with the concrete component to get access to
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// all attributes
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Reset accessibility headers
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				headers.length = currentHeaders;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Reset column spans
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Generate header ids and add them to columns and accessibility
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// headers
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				id = [ listId, "header", depth, nextId++ ].join(':');
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				headers.push(id);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// Look for nested column templates recursively, then add our
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				this.getColumnTemplates(column, listId, columnTemplates, dataTemplates, childColumns, headers, depth + 1, nextId);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				columnTemplates[depth].push(column);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				// And update the column span with the current count of the
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				colSpans.length += childColumns.length;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			component.set("v.colSpan", colSpans.length);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// No child columns, so add this column to the list of data columns,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			// mark it, and count it for parent column spans
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			dataTemplates.push(component);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			component.isDataColumn = true;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			colSpans.length++;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return columnTemplates.length ? {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			columnTemplates : columnTemplates,
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			dataTemplates : dataTemplates
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// TODO: AURA: HACK: Need a way to copy events properly.
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var eventMap = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var events = component.getDef().getAllEvents();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var dispatcher = component.getEventDispatcher();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		for (var i = 0; i < events.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			eventMap[events[i]] = dispatcher[events[i]];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return eventMap;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getEventTargets : function(component, target) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var listViewElement = component.getElement();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var targets = {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Get HTML target elements from the bottom up
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		targets.column = this.getTarget(target, listViewElement, {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// prevent events from firing on the empty message
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if ($A.util.hasClass(targets.column, "emptyMessage"))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			targets.column = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		targets.row = this.getTarget(targets.column, listViewElement, {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		targets.section = this.getTarget(targets.row, listViewElement, {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Convert them to ruau components from the top down
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (targets.section) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			targets.section = $A.componentService.getRenderingComponentForElement(targets.section) || null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (targets.section && targets.row) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			targets.row = targets.section.get("v.body")[targets.row.sectionRowIndex] || null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (targets.section && targets.row && targets.column) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			targets.column = targets.row.get("v.body")[targets.column.cellIndex] || null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return targets;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getEventType : function(component, target) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var typeMap = {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			TH : "Header",
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			THEAD : "Head",
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (target && target.getElement)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			target = target.getElement();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var type = target && target.tagName;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		type = typeMap[type] || type;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getExpression : function(value) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var isExpression = value && ruau.util.isString(value) && value.indexOf("{#") == 0 && value.lastIndexOf("}") == value.length - 1;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			return value.substring(2, value.length - 1);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getParams : function(component) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var params = {};
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var paramDefs = component.getDef().getAttributeDefs();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		for ( var def in paramDefs) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if (paramDefs.hasOwnProperty(def))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				params[def] = component.getParam(def);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return params;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getRowClass : function(component, index) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var rowClass = component.get("v.rowClass") || '';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var rowClassAlternate = component.get("v.alternateRowClass") || rowClass;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return (index % 2) == 1 ? rowClassAlternate : rowClass;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getTarget : function(target, limit, matches) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		while (target && target != limit) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if (matches[target.tagName])
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				return target;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			target = target.parentNode;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	getTextContent : function(facet) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		// Crude recursive attempt to build literal strings from the lowest
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var text = '';
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (facet) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if ($A.util.isString(facet))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				text = this.decodeHtml(facet);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var body = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if ($A.util.isArray(facet))
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					body = facet;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					body = facet.get && facet.get("v.body");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					for (var i = 0; i < body.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					text += this.decodeHtml(facet.get && facet.get("v.value") || facet || '');
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	parseExpressions : function(component, attributes) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (!component || !attributes)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		for ( var field in attributes) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			if (attributes.hasOwnProperty(field)) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var value = attributes[field];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				var expression = this.getExpression(value);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					value = component.get(expression);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					if (value) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:						component.set("v." + field, value);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	resolveObject : function(base, qualifiedPath) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var target = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (qualifiedPath && qualifiedPath.split) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var paths = qualifiedPath.split('.');
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var target = base;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			while (target && paths.length) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				target = target[paths.shift()];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		return target;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	resolveObjects : function(qualifiedPaths) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var objects = [];
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		if (qualifiedPaths) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			var target = null;
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			qualifiedPaths = qualifiedPaths.split(",");
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			for (var i = 0; i < qualifiedPaths.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				target = this.resolveObject(window, qualifiedPaths[i]);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				if (typeof (target) == "function") {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:					objects.push(target);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:	setImmediate : function(callback) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		var global = Function("return this")();
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.setImmediate = (global.requestAnimationFrame || global.webkitRequestAnimationFrame || global.mozRequestAnimationFrame
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:				|| global.oRequestAnimationFrame || global.msRequestAnimationFrame || function(callback) {
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:			setTimeout(callback, 13)
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		}).bind(global);
ruau/ruau-mokponents/src/main/components/ui/listView/listViewHelper.js:		this.setImmediate(callback);
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:     * Handle pageSelected event from carousel
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:    onPageSelected: function(cmp, evt, helper) {	
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:        helper.onPageSelected(cmp, evt);        
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:     * Handle clicking event from the indicator
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:    clickHandler: function (cmp, evt, helper) {    	
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:        var compEvent = cmp.getEvent("pagerClicked");        
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:        compEvent.setParams(evt.getParams());
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:     * Handle key event from the indicator
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:    keyHandler: function (cmp, evt, helper) {    	
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:        var compEvent = cmp.getEvent("pagerKeyed");        
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorController.js:        compEvent.setParams(evt.getParams());
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorRenderer.js:		if (cmp.isDirty("v.pageComponents")) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:<ruau:component  extensible="true"  description="A container for ui:carouselPageIndicatorItem components. This component is not displayed if the carousel uses a continuous flow.">
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <!--TODO: need to pass in only pageCount once ruau:iteration component supports integer iteration -->
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:attribute name="pageComponents" type="Ruue.Component[]" description="The page components in the carousel"/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:attribute name="currentPage" type="Integer" description="The current page of the pager." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:attribute name="navigationTabs" type="Boolean" default="false" description="Enables navigation tabs" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:registerevent name="pagerClicked" type="ui:pagerClicked" description="The event fired when the page indicator is clicked." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:registerevent name="pagerKeyed" type="ui:pagerKeyed" description="The event fired when the page indicator is keyed." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the carousel page is selected." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ruau:handler name="pageSelected" action="{!c.onPageSelected}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    <ul class="{! 'carousel-nav-items' + (v.navigationTabs ? ' tabs' : '')}" role="presentation">
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    	<ruau:renderIf isTrue="{!v.pageComponents.length > 1}">		
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:		    <ruau:iteration items="{!v.pageComponents}" var="page" indexVar="index">	    	
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:	    		<!-- pageIndex starts with 1 -->	    		
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:	        	<ui:carouselPageIndicatorItem ruau:id="indicatorItems" priv_pageComponent="{!page}" pageIndex="{!index + 1}" pagerKeyed="{!c.keyHandler}" pagerClicked="{!c.clickHandler}" navigationTab="{!v.navigationTabs}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:	    	</ruau:iteration>         
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:    	</ruau:renderIf>         
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:	onPageSelected: function (cmp, evt) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        var currentPage = cmp.get("v.currentPage"),
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	pages = cmp.get("v.pageComponents"),
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	//page index starts at 1
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	targetPage =  evt.getParam("pageIndex") - 1,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	pageItems = cmp.find('indicatorItems');
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        if (pages && pages.length == 1) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	//fire event to target indicator item
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	e = pageItems.get("e.pageSelected");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:			e.setParams(evt.getParams())
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:			cmp.set('v.currentPage', targetPage);
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        else if (pages && pages.length > 1 && targetPage < pages.length && targetPage >= 0) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:    		if (typeof currentPage != 'undefined') {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:    			//fire event to previous selected indicator item
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:    			e = pageItems[currentPage].get("e.pageSelected");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:    			e.setParams(evt.getParams())
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	//fire event to target indicator item
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	e = pageItems[targetPage].get("e.pageSelected");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:			e.setParams(evt.getParams())
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicatorHelper.js:        	cmp.set('v.currentPage', targetPage);
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	margin: 0;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	padding: 0;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	display: inline-block;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	margin: 0 3px;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS li a {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	border-radius: 8px;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	background: #1e2b37;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	display: inline-block;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS li a.carousel-nav-item-selected {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	background: #2d95d6;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS .visually-hidden {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	position: absolute !important;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS.tabs {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	margin: 0;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	padding: 0;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS.tabs li {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	margin: 5px 0;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	max-width: 33.333%;
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:.THIS.tabs li a {
ruau/ruau-mokponents/src/main/components/ui/carouselPageIndicator/carouselPageIndicator.css:	height: auto;
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:<ruau:event type="COMPONENT" description="Event for ui:tabset component.">
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="index" type="Integer" description="The index position of the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="name" type="String" description="The internal name of the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="focus" type="Boolean" description="Whether to focus the tabset item or not."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="tab" type="Object" description="The tab object."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="oldTab" type="Object" description="The tab that was just deactivated."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="active" type="Boolean" description="Indicates the tab is active or not."/>
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:    <ruau:attribute name="callback" type="Object" description="A callback function." />
ruau/ruau-mokponents/src/main/components/ui/tabsetEvent/tabsetEvent.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:<ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	<ruau:description>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:			A <code>ui:outputCheckbox</code> component represents a checkbox that is rendered as an HTML <code>img</code> tag.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:			This component can be used with <code>ui:inputCheckbox</code>, which enables users to select or deselect the checkbox. 
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:			To select or deselect the checkbox, set the <code>value</code> attribute to <code>true</code> or <code>false</code>.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:			To display a checkbox, you can use an attribute value and bind it to the <code>ui:outputCheckbox</code> component.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:		<pre>&lt;ruau:attribute name="myBool" type="Boolean" default="true"/>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:&lt;ui:outputCheckbox value="{!v.myBool}" label="outputCheckbox"/></pre>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	<p>The previous example renders the following HTML.</p>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	<pre>&lt;img class="checked uiImage uiOutputCheckbox" alt="checkbox checked" src="path/to/checkbox"></pre>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	</ruau:description>	
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:	</ruau:example>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.ruaudoc:</ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" access="GLOBAL" description="Displays a checkbox in a checked or unchecked state.">
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    <ruau:attribute name="value" type="Boolean" required="true" access="GLOBAL" description="Specifies whether the checkbox is checked."/>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    <ruau:attribute name="altChecked" type="String" default="checkbox checked" access="GLOBAL" description="The alternate text description when the checkbox is checked. Default value is &#8220;checkbox checked&#8221;."/>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    <ruau:attribute name="altUnchecked" type="String" default="checkbox unchecked" access="GLOBAL" description="The alternate text description when the checkbox is unchecked. Default value is &#8220;checkbox unchecked&#8221;."/>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    <ui:image class="{!v.value == true ? v.class + ' checked' : v.class + ' unchecked'}"
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:    	ruau:id="img1" alt="{!v.value == true ? v.altChecked : v.altUnchecked}"/>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        attributes : {value : true},
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        	var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "checked"), "missing class: checked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        attributes : {value : false},
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "unchecked"), "missing class: unchecked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        attributes : {value : false},
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        	var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "unchecked"), "missing class: unchecked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            component.set("v.value",true);
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "checked"), "missing class: checked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:        attributes : {value : true},
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "checked"), "missing class: checked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            component.set("v.value",false);
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            var expectedElem = component.find("img1").getElement();
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "unchecked"), "missing class: unchecked");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckboxTest.js:            ruau.test.assertTrue($A.util.hasClass(expectedElem, "uiOutputCheckbox"), "missing class: uiOutputCheckbox");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css:    background: transparent url(/ruauFW/resources/ruau/images/smallcheck-checked.png) no-repeat;
ruau/ruau-mokponents/src/main/components/ui/outputCheckbox/outputCheckbox.css:    background: transparent url(/ruauFW/resources/ruau/images/smallcheck.png) no-repeat;
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:<ruau:event type="COMPONENT" support="BETA" description="Indicates that the scroller has been refreshed.">
ruau/ruau-mokponents/src/main/components/ui/scrollerRefreshed/scrollerRefreshed.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:<ruau:interface support="beta">
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    <ruau:attribute name="highlighted" type="Boolean" default="false" description="Indicate this component is highlighted or not."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    <ruau:attribute name="keyword" type="String" description="The keyword to match."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:    <ruau:attribute name="visible" type="Boolean" default="true" description="Controls the visibility of the component."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteOptionTemplate/autocompleteOptionTemplate.intf:</ruau:interface>
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:<ruau:event type="COMPONENT">
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    <ruau:attribute name="panelId" type="Integer"/>
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:    <ruau:attribute name="panelType" type="String"/>
ruau/ruau-mokponents/src/main/components/ui/panelDoneRendering/panelDoneRendering.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:	handleClick: function (cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:		var el = helper.getInputElement(cmp),
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:			domEvt = evt.getParam("domEvent"),
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:		// Dispatch clicks within the action as clicks on the action itself.
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:		if (domEvt.target !== el) {
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:			domEvt.stopPropagation();
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:			el.dispatchEvent(click);
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:	handleValueChange: function (cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:		var el = helper.getInputElement(cmp),
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:			value = evt.getParam('value');
ruau/ruau-mokponents/src/main/components/ui/action/actionController.js:		$A.util.setDataAttribute(el, 'action-value', value);
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:<ruau:component extensible="true" support="PROTO" abstract="true" description="An abstract component that provides bubbling of events.">
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:	<ruau:attribute name="name" type="String" description="The name for the action-name data attribute value specified on the DOM element."/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:	<ruau:attribute name="label" type="String" description="The text label for the component."/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:	<ruau:attribute name="labelClass" type="String" description="The class for the label on the component."/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:	<ruau:attribute name="index" type="Integer" description="The index for the item-index data attribute value specified on the DOM element."/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:	<ruau:attribute name="value" type="Object" description="Use this to bind some value to the action. Must be serializable {String, Number, Boolean}."/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:    <ruau:handler name="change" value="{!v.value}" action="{!c.handleValueChange}"/>
ruau/ruau-mokponents/src/main/components/ui/action/action.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js:	 * Hotfix workaround for getting the input element from the body.
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js:	 * Assumes only 1 input element in this action.
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js:        var el = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js:        if (el.tagName.toLowerCase() != 'input') {
ruau/ruau-mokponents/src/main/components/ui/action/actionHelper.js:        	el = el.getElementsByTagName('input')[0] ||  el.getElementsByTagName('button')[0] || el;
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:    afterRender: function (cmp, helper) {
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:        var el = helper.getInputElement(cmp);
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:        $A.util.setDataAttribute(el, 'action-global-id', cmp.getGlobalId());
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:        $A.util.setDataAttribute(el, 'action-name', cmp.get('v.name')); 
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:        $A.util.setDataAttribute(el, 'action-value', cmp.get('v.value')); 
ruau/ruau-mokponents/src/main/components/ui/action/actionRenderer.js:        $A.util.setDataAttribute(el, 'item-index', cmp.get('v.index')); 
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/button/button.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/button/button.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    display:inline-block;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:        display:inline;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:        overflow:visible !important; /* must override .uiBlock overflow:hidden declaration */
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton .label{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    display:block;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    .uiButton .label{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:        overflow:visible !important; /* must override .uiBlock .bLeft overflow:hidden declaration */
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    margin: 2px 3px;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    padding: 4px 6px;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    text-decoration:none;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    text-align:center;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    border-radius:4px;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    border-top:1px solid rgba(255,255,255,.45);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#DDDFE1;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#F8F8F9), to(#DDDFE1));
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:-webkit-linear-gradient(#F8F8F9,#DDDFE1);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:-moz-linear-gradient(#F8F8F9,#DDDFE1);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:linear-gradient(#F8F8F9,#DDDFE1);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    -webkit-box-shadow:0 1px 3px rgba(0, 0, 0, 0.7),0 1px 0 rgba(0, 0, 0, 0.3);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    box-shadow:0 1px 3px rgba(0, 0, 0, 0.7),0 1px 0 rgba(0, 0, 0, 0.3) ;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    text-shadow:0 1px 1px #FFF;	
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    .uiButton.default{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:hover,
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:focus{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#757D8A;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#757D8A -webkit-gradient(linear, 0% 0%, 0% 100%, from(#7F8792), to(#535B68));
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#757D8A -webkit-linear-gradient(#7F8792,#535B68);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#757D8A -moz-linear-gradient(#7F8792,#535B68);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#757D8A linear-gradient(#7F8792,#535B68);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    text-shadow:0 -1px 1px rgba(0, 0, 0, 0.5);
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default .label{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    white-space:nowrap;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:hover .label,
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:focus .label{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:disabled{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    cursor:default;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    background:#B9B9B9;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    -webkit-box-shadow:none;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    box-shadow:none;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:    text-shadow:none;
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:disabled .label{
ruau/ruau-mokponents/src/main/components/ui/button/button.css:.uiButton.default:disabled .label:hover{
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:    handleKeydown : function(cmp, event){
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        var keydownEvent = cmp.getEvent("keydown");
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        keydownEvent.setParams({"domEvent": event});
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        if ($A.util.getBooleanValue(cmp.get("v.stopPropagation"))) {
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:            if (event.stopPropagation) {
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:              event.stopPropagation();
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:            //IE8 and Lower
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:              event.cancelBubble = true;
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        if ($A.util.getBooleanValue(cmp.get("v.disabled"))) {
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:            event.preventDefault();
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:            return false;
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        var pressEvent = cmp.getEvent("press");
ruau/ruau-mokponents/src/main/components/ui/button/buttonController.js:        pressEvent.setParams({"domEvent": event});
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:<ruau:component extensible="true" support="GA" access="GLOBAL"
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    description="Represents a button element.">
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="theme" type="String" default="default" description="The default CSS style used to display the button."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="buttonTitle" type="String" access="GLOBAL" description="The text displayed in a tooltip when the mouse pointer hovers over the button."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="buttonType" type="String" default="button" access="GLOBAL" description="Specifies the type attribute in the HTML input element. Default value is &quot;button&quot;."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="class" type="String" default="" access="GLOBAL" description="A CSS style to be attached to the button. This style is added in addition to base styles output by the component."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="label" type="String" required="true" access="GLOBAL" description="The text displayed on the button. Corresponds to the value attribute of the rendered HTML input element."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="labelClass" type="String" default="" access="GLOBAL" description="A CSS style to be attached to the label. This style is added in addition to base styles output by the component."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="labelDisplay" type="Boolean" default="true" description="Specifies whether the label is displayed. If not, we add a hidden text for accessibility purpose."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="iconImgSrc" type="String" default="" description="The absolute or relative URL of the icon to display on the button. The image's alt attribute is set to the value of the button’s label attribute."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="iconClass" type="String" default="" description="A CSS style to be attached to the button's icon. This style is added in addition to base styles output by the component."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="disabled" type="Boolean" default="false" access="GLOBAL" description="Specifies whether this button should be displayed in a disabled state. Disabled buttons can't be clicked. Default value is &quot;false&quot;."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="accesskey" type="String" default="" access="GLOBAL" description="The keyboard access key that puts the button in focus. When the button is in focus, pressing Enter clicks the button."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="labelDir" type="String" default="ltr" description="The direction in which the label should be read. Possible values are &quot;rtl&quot; (right to left) and &quot;ltr&quot; (left to right). Default value is &quot;ltr&quot;."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="stopPropagation" type="Boolean" default="false" description="Prevents the click event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:attribute name="tabIndex" type="Integer" description="The tab index of the button element."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:registerevent name="keydown" type="ui:keydown" description="The controller method that runs when a key is pressed down on the button."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <ruau:registerevent name="press" type="ui:press" access="GLOBAL" description="The controller method that runs when the button is clicked. For example, press=&quot;{!c.showMsg}&quot; references the showMsg method in the controller."/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:    <button type="{!v.buttonType}" ruau:id="button" class="{!v.class +' '+v.theme+' uiBlock'}" onclick="{!c.press}" onkeydown="{!c.handleKeydown}" disabled="{!v.disabled}" accesskey="{!v.accesskey}" title="{!v.buttonTitle}" tabindex="{!v.tabIndex}">
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:        <ruau:if isTrue="{!v.iconImgSrc != '' || v.iconClass != ''}">
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:            <img src="{!v.iconImgSrc != '' ? v.iconImgSrc : '/ruauFW/resources/ruau/s.gif'}" class="{!v.iconClass+' icon bLeft'}" alt=""/>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:        </ruau:if>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:        <ruau:if isTrue="{!v.labelDisplay}">
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:            <span ruau:id="span" class="{!v.labelClass+' label bBody truncate'}" dir="{!v.labelDir}">{!v.label}</span>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:            <ruau:set attribute="else">
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:                <span ruau:id="hidden" class="assistiveText">{!v.label}</span>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:            </ruau:set>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:        </ruau:if>
ruau/ruau-mokponents/src/main/components/ui/button/button.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:<ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:	<ruau:description>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:			A <code>ui:button</code> component represents a button element that executes an action defined by a controller. Clicking the button triggers the client-side controller method set for the <code>press</code> event.
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:			The button can be created in several ways.
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<p>A text-only button has only the required <code>label</code> attribute set on it.</p>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<pre>&lt;ui:button label="Find"/></pre>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<p>An image-only button uses both the <code>label</code> and <code>labelClass</code> attributes with CSS.</p>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<pre>&lt;!-- Component markup -->
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:&lt;ui:button label="Find" labelClass="assistiveText" class="img" />
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:background: url(/path/to/img) no-repeat;
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<p>The <code>assistiveText</code> class hides the label from view but makes it available to assistive technologies. To create a button with both image and text, use the <code>label</code> attribute and add styles for the button.</p>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<pre>&lt;!-- Component markup -->
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:&lt;ui:button label="Find" />
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:background: url(/path/to/img) no-repeat;
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<p>The previous markup for a button with text and image results in the following HTML.</p>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:		<pre>&lt;button class="default uiBlock uiButton" accesskey type="button">
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:&lt;span class="label bBody truncate" dir="ltr">Find&lt;/span>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:	</ruau:description>	
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    <ruau:example name="buttonExample" ref="uiExamples:buttonExample" label="Using ui:button">
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:        <p>This example shows a button that displays the input value you enter.</p>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:    </ruau:example>
ruau/ruau-mokponents/src/main/components/ui/button/button.ruaudoc:</ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    testLabel: {
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes : {label : 'shucks'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('shucks', $A.test.getText(component.find("span").getElement()), "Label not found");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes : {label : 'Ok'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            var element = component.getElement();
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertNotNull(element, "Unable to retrieve Dom element information for ui button");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertTrue($A.test.isInstanceOfButtonElement(element), "ui:button should be rendering a button element.");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    testDefaultPropertiesOfUiButton:{
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes : {label : 'Ok'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            var element = component.getElement();
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('button', component.get('v.buttonType'), "default value of buttonType attribute should be 'button'")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assert('button',element.getAttribute('type'), "By default ui:button should create a button element of type 'Button'");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertTrue(!component.get('v.buttonTitle'), "Button should not have a default value for title");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertFalse($A.util.getBooleanValue(component.get('v.disabled')), "Button should not be disabled by default");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertFalse(element.disabled, "By default dom element for ui:button should not be disabled");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('ltr', component.get('v.labelDir'), "Button label should be left to right by default");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals("", component.get('v.accesskey'), "Button should have no shortcut key by default");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals("", element.accessKey, "By default dom element for ui:button should have no shortcut key");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label : 'Ok', buttonTitle:'Button Title'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('Button Title',component.find("button").getElement().title, "Rendered button does not have a title");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label : 'Ok', buttonType: 'reset'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('reset', component.find("button").getElement().getAttribute("type"), "Button not rendered with specified type");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    // FF 3.6 doesn't default the type as FF 4+ and Google Chrome do, but FF 3.6 is not our end-target platform
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    _testInvalidButtonType:{
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{buttonType: 'fooBar'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('submit', component.find("button").getElement().type, "Button not rendered with default type when a bad type is specified")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    testLabelClass:{
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label:'Ok', labelClass: 'OkStyling'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertNotEquals(component.find("span").getElement().className.toString().indexOf('OkStyling'), -1,
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    "Button not rendered with specified labelStyle class")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label : 'Ok', iconImgSrc:'/ruauFW/resources/ruau/images/bug.png', iconClass:'Red'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            for(var i in component.find('button').getElement().children){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                var child = component.find('button').getElement().children[i];
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                if($A.test.isInstanceOfImageElement(child)){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    ruau.test.assertNotEquals(child.className.toString().indexOf('Red'), -1 ,
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                            "Button not rendered with specified iconClass")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    ruau.test.assertNotEquals(child.src.indexOf('/ruauFW/resources/ruau/images/bug.png'), -1,
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.fail("Could not attach an image icon to button");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            for(var i in component.find('button').getElement().children){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                var child = component.find('button').getElement().children[i];
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                if($A.test.isInstanceOfImageElement(child)){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    ruau.test.fail("There should be no image element for this button");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    testDisabled:{
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label : 'Ok', disabled:true},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertTrue(component.find("button").getElement().disabled, "Button was not rendered in disabled state");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label : 'Ok', accesskey:'A'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('A',component.find("button").getElement().accessKey, "Button not rendered with the specified accesskey");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:    testLabelDir:{
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label:"Click right Now!", labelDir:'rtl'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('rtl', component.find('span').getElement().dir, "Label not rendered with specified text direction.")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:        attributes:{label:"Like", disabled:false, hasIcon:true, iconImgSrc:'/ruauFW/resources/ruau/images/bug.png'},
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('Like', $A.test.getText(component.find("div").getElement()), "Label not correct");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertFalse(component.find("button").getElement().disabled, "Button was rendered in disabled state");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            component.set('v.disabled', true);
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            component.set('v.label', 'clear');
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            component.set('v.iconImgSrc', '/ruauFW/resources/ruau/images/clear.png');
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertEquals('clear', $A.test.getText(component.find("div").getElement()), "New label not rerendered");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            ruau.test.assertTrue(component.find("button").getElement().disabled, "Button was not rerendered in disabled state");
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            for(var i in component.find('button').getElement().children){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                var child = component.find('button').getElement().children[i];
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                if($A.test.isInstanceOfImageElement(child)){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    ruau.test.assertTrue(child.src.indexOf('/ruauFW/resources/ruau/images/clear.png')!==-1, "Button not rerendered with specified icon img")
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:            for(var i in component.find('button').getElement().children){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                var child = component.find('button').getElement().children[i];
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                if($A.test.isInstanceOfImageElement(child)){
ruau/ruau-mokponents/src/main/components/ui/button/buttonTest.js:                    ruau.test.fail("There should be no image element for the button");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testPositiveValue: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 1.145, format : '0000.0%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('0114.5%', $A.test.getText(component.find('span').getElement()), "Percentage not correct");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testNegativeValue: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : -0.14, format : '.000%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('-14.000%', $A.test.getText(component.find('span').getElement()), "Percentage not correct");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    //TODO W-984924 value must be set in markup. moved to js://uitest.outputCmps_EmptyStringValue for now.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    _testEmptyStringValue: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : ''},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "Expect to see an empty span.");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUnassignedFormat: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 0.01},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('1%', $A.test.getText(component.find('span').getElement()), "Expected default format to be used");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testInvalidFormat: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 30, format: ',,'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('Invalid format attribute', $A.test.getText(component.find('span').getElement()), "Expected error message");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 0.14566, format: '0.00%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('14.57%', $A.test.getText(component.find('span').getElement()), "Rounding not correct");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .05, format : '.0%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('5.0%', $A.test.getText(component.find('span').getElement()), "Percentage not correct");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that the scale is applied
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testScaleNegative: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 22.7, valueScale: -2},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testScalePositive: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 0.227, valueScale: 2},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('2,270%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the value changes it is rerendered with the new value
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateValue: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            component.set("v.value", 965.21);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('96,521%', $A.test.getText(component.find('span').getElement()), "Value not updated after changed");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the value changes with same it is rerendered with the same value
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateValueWithSame: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            component.set("v.value", 0.227);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not updated after changed");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the value doesnt change it is rerendered with the same value
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateValueNoChange: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('23%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the format changes it is rerendered using the new format
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateFormat: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227, format : '#0.#%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('22.7%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            component.set("v.format", "000.00 %");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('022.70 %', $A.test.getText(component.find('span').getElement()), "Value not updated after format changed");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the format changes it is rerendered using the old format
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateFormatWithSame: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227, format : '#0.#%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('22.7%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            component.set("v.format", "#0.#%");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('22.7%', $A.test.getText(component.find('span').getElement()), "Value not updated after format changed");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:     * Verify that when the format doesn't change it is rerendered using the same format
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    testUpdateFormatNoChange: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : .227, format : '#0.#%'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('22.7%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('22.7%', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:    _testNonNumericValue: {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:        attributes : {value : 'true'},
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentTest.js:            $A.test.assertEquals('The value attribute must be assigned a numeric value', $A.test.getText(component.find('span').getElement()), "Expected error message");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var span = this.superRender()[0];
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var f = cmp.get("v.format");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var num = cmp.get("v.value");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var formatted;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:            var scale = cmp.get("v.valueScale");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:            if (scale) {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                num *= Math.pow(10, scale);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                var nf;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    nf = $A.localizationService.getNumberFormat(f);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                } catch (e) {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    formatted = "Invalid format attribute";
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    formatted = nf.format(num);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                formatted = $A.localizationService.formatPercent(num);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:            span.textContent = span.innerText = formatted;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        return span;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var val = cmp.get("v.value");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var f = cmp.get("v.format");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var formatted = '';
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        if (($A.util.isNumber(val) || $A.util.isString(val)) && !$A.util.isEmpty(val)) {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:            var scale = cmp.get("v.valueScale");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:            if (scale) {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                val *= Math.pow(10, scale);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                var nf;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    nf = $A.localizationService.getNumberFormat(f);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                } catch (e) {
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    formatted = "Invalid format attribute";
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                    formatted = nf.format(val);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:                formatted = $A.localizationService.formatPercent(val);
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        var span = cmp.find("span");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercentRenderer.js:        span.getElement().textContent = span.getElement().innerText = formatted;
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" description="Displays the percentage in the default or specified format with the user's locale.">
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    <ruau:attribute name="value" type="Decimal" required="true" description="The percentage displayed when this component is rendered."/>
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    <ruau:attribute name="format" type="String" description="The format of the percent of type String."/>
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    <!-- the displayed result will be value * ten raised to the power of valueScale -->
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    <ruau:attribute name="valueScale" type="Integer" default="0" description="Displays the result output, multiplying the value attribute with (10^valueScale) * 100%."/>
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:    <span ruau:id='span' class="{!v.class}"/>
ruau/ruau-mokponents/src/main/components/ui/outputPercent/outputPercent.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:<ruau:event type="COMPONENT" extends="ui:command" description="Used to fetch and display additional list data.">
ruau/ruau-mokponents/src/main/components/ui/showMore/showMore.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLinkController.js:    clickHandler:function(component,domEvent,helper){
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:<ruau:component extends="ui:listViewColumnCell" extensible="true" support="GA" description="A link column template definition, describes a hyperlink reference in a table data cell.">
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    <ruau:attribute name="target" type="String" default="_self"    description="The name of the target window or frame which the link should navigate into."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    <ruau:attribute name="text" type="String" default=""           description="The text of the hyperlink. Defaults to the url provided, if not set."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    <ruau:attribute name="url" type="String" default=""            description="The url to link to. Defaults to the body of the component, if not set."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    <ruau:registerEvent name="onclick" type="ui:listViewEvent" description="The event that fires when the hyperlink is clicked." />
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    <a href="{!v.url||v.body}" target="{!v.target?v.target:null}" title="{!v.tooltip||v.url||v.body}" onclick="{!c.clickHandler}">
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:    </a>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnLink/listViewColumnLink.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:<ruau:interface support="GA" description="A standard interface describing basic element attribution.">
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    <ruau:attribute name="id" type="String" default=""         description="The dom id of the element."/>
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    <ruau:attribute name="class" type="String" default=""      description="The css class of the element."/>
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:    <ruau:attribute name="tooltip" type="String" default=""    description="The tooltip to display when hovering over the element."/>
ruau/ruau-mokponents/src/main/components/ui/elementInterface/elementInterface.intf:</ruau:interface>
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	activateTab:  function(cmp, index, focus) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		if ($A.util.isNumber(index) && cmp._tabItems[index]) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var tab = cmp._tabItems[index];
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			this.deactivateTab(cmp, tab);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			tab.get("e.activateTab").setParams({"active": true, "focus": focus}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * Close given tab item
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	closeTab: function(cmp, index) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var closed = false, tabItems = cmp._tabItems;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		if ($A.util.isNumber(index) && index >=0 && index < tabItems.length) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var item = tabItems.splice(index, 1);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * Add new tab item to the tabBar
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	addTab: function(cmp, index, tab) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var self = this, items = cmp._tabItems;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var docFrag = document.createDocumentFragment();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var tabValues = [tab];
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var pNode = cmp.find("tabItemsContainer").getElement();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			this.createAndRenderComponents(cmp, tabValues, docFrag, function(newItems){
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				    pNode.appendChild(docFrag);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:					var el = items[index].getElement();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:					var pn = el.parentNode;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:					pn.insertBefore(docFrag, el);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				items.splice.apply(items, [index, 0].concat(newItems));
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				//TODO: revisit to support adding array of tabs
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				if (newItems[0].get("v.active")) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				    self.activateTab(cmp, index);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * @private
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * Deactivate the active tab
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	deactivateTab: function(cmp, activeTab) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		if (cmp._activeTab === activeTab) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		if (cmp._activeTab && cmp._activeTab.isValid()) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var e = cmp._activeTab.get("e.activateTab");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			e.setParams({active: false}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		cmp._activeTab = activeTab;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var srcElement = domEvent.srcElement || domEvent.target, keyCode = domEvent.keyCode;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		if (srcElement.hasAttribute("aria-selected") && keyCode >= 37 && keyCode <=40) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var tabItems = cmp._tabItems, len = tabItems.length;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var index = this.getTabIndex(cmp, srcElement);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var oldTab = index;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	            //left or up arrow key
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	        	//right or down arrow key
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	        cmp.get('e.onTabActivated').setParams({"index": index, "oldTab": oldTab}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	        $A.util.squash(domEvent, true);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * @private
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	getTabIndex: function(cmp, element) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var index = -1, container = cmp.find("tabItemsContainer").getElement();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var el = element;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		while (el.parentNode) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			if (el.parentNode === container) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				index = $A.util.arrayIndexOf(container.children, el);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				break;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			el = el.parentNode;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * @private
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	renderTabItems: function(cmp) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		cmp._tabItems = [];
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var docFrag = document.createDocumentFragment();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		this.createAndRenderComponents(cmp, cmp.get("v.tabs"), docFrag, function(items) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			cmp._tabItems = items;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			cmp.find('tabItemsContainer').getElement().appendChild(docFrag);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	 * @private
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:	createAndRenderComponents: function (cmp, tabValues, parentEl, callback) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var items = [],
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			len = tabValues.length,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		var fn = function (newCmp) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			newCmp.addHandler("onActivate", cmp, "c.onTabActivated");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			newCmp.addHandler("onClose", cmp, "c.onTabClosed");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			$A.render(newCmp, parentEl);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			$A.afterRender(newCmp);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			if (counter === 0 && callback) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:				callback(items);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:		for (var i=0; i<len; i++) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			var config = tabValues.get?tabValues.get(i):tabValues[i];
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarHelper.js:			$A.componentService.newComponentAsync(this, fn, config, config.valueProvider);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	    var active = evt.getParam("active");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	    //workaround issue where Integer type is passed in as String
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	    var index = parseInt(evt.getParam("index"));
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	    if (active) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	        helper.activateTab(cmp, index, evt.getParam("focus"));
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	        var tab = cmp._tabItems[index];
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	        if (cmp._activeTab === tab) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	            //deactive current active tab
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	            tab.get("e.activateTab").setParams({"active": false}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	            cmp._activeTab = null;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	addTab: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		helper.addTab(cmp, evt.getParam("index"), evt.getParam("tab"));
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	 * This action is invoked from parent component to close a tabItem.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	closeTab: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		var succeed = helper.closeTab(cmp, evt.getParam("index"), evt.getParam("tab"));
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		var callback = evt.getParam("callback");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		if (typeof callback === "function") {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		    callback(succeed);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	 * This action is invoked when the tabItem is clicked
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	onTabActivated: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		var tab = evt.getSource(), 
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:			index = $A.util.arrayIndexOf(cmp._tabItems, tab),
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:			oldTab = cmp._activeTab && cmp._activeTab.isValid() ? cmp._activeTab : null,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:			e = cmp.get('e.onTabActivated');
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		e.setParams({"index": index, "oldTab": oldTab}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:	onTabClosed: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		var tabItems = cmp._tabItems, item = evt.getSource(),
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:			index = $A.util.arrayIndexOf(tabItems, item);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		helper.closeTab(cmp, index);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarController.js:		cmp.get("e.onTabClosed").setParams({"index": index}).fire();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css:.THIS .tabList {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css:    padding:0;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css:    margin:0;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css:.THIS .tabList .tabItem {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.css:    display: inline-block;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js:		var ret = this.superRender();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js:		helper.renderTabItems(cmp);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js://        var ret=this.superRerender();
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js://        helper.renderTabItems(cmp);
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js:		var items = cmp._tabItems;
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js:			for (var i = 0, len = items.length; i < len; i++) {			
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBarRenderer.js:		} finally {
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:<ruau:component description="A list wrapper for tabs in a ui:tabset component">
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:attribute name="tabs" type="List" description="List of tab configurations." />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:attribute name="class" type="String" description="CSS class" />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:registerevent name="setActive" type="ui:tabsetEvent" description="This event is fired from parent component to activate a tab item."/>
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:registerevent name="addTab" type="ui:tabsetEvent" description="This event is fired from parent component to add a tab item." />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:registerevent name="closeTab" type="ui:tabsetEvent" description="This event is fired from parent component to close a tab item." />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:registerevent name="onTabClosed" type="ui:tabsetEvent" description="This event is fired when the close icon is clicked." />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:registerevent name="onTabActivated" type="ui:tabsetEvent" description="This event is fired when the tab item is clicked." />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:handler name="setActive" action="{!c.setActive}" />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:handler name="addTab" action="{!c.addTab}" />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:handler name="closeTab" action="{!c.closeTab}" />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <ruau:dependency resource="markup://ui:tabItem" />
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:    <div class="{!v.class}" ruau:id="div" role="tablist">
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:	    <ul class="tabList" ruau:id="tabItemsContainer" role="presentation" onkeydown="{!c.onKeyDown}">
ruau/ruau-mokponents/src/main/components/ui/tabBar/tabBar.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:<ruau:component abstract="true" extends="ui:input" implements="ui:inputBaseOption" provider="java://org.ruauframework.component.ui.InputOptionProvider" support="GA" description="An abstract component for input options with type checkbox, radio, or selectOption.">
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    <!-- Support "checkbox", "radio" and "selectOption" -->
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:    <ruau:attribute name="type" type="String" default="selectOption" description="The input type. Default value is &#8220;selectOption&#8221;. Possible values: checkbox, radio, selectOption."/>
ruau/ruau-mokponents/src/main/components/ui/inputOption/inputOption.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:	changePage : function(component, targetPage, domEvent) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		targetPage = parseInt(targetPage, 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var pageCount = parseInt(component.get("v.pageCount"), 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (isNaN(targetPage) || targetPage <= 0 || isNaN(pageCount) || targetPage > pageCount) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			return false;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var pageSize = parseInt(component.get("v.pageSize"), 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		this.firePageChangeEvent(component, {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			page : targetPage,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			pageSize : pageSize
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		component.set("v.currentPage", targetPage);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:	changePageSize : function(component, targetPageSize, domEvent) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		targetPageSize = parseInt(targetPageSize, 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (isNaN(targetPageSize)) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			return false;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var pageSize = parseInt(component.get("v.pageSize"), 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (pageSize == targetPageSize) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			return false;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var targetPage = 1;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		this.firePageChangeEvent(component, {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			page : targetPage,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			pageSize : targetPageSize
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		component.set("v.currentPage", targetPage);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		component.set("v.pageSize", targetPageSize);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:	firePageChangeEvent : function(component, pageData, domEvent) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (domEvent && domEvent.preventDefault) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			domEvent.preventDefault();
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var pageEvent = component.getEvent("onPageChange");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		pageEvent.setParams({
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			currentPage : pageData && pageData.page || 1,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			pageSize : pageData && pageData.pageSize || 0
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:	updateCalculatedFields : function(component) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var pageSize = component.get("v.pageSize") || 0;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var totalItems = parseInt(component.get("v.totalItems"), 10);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (pageSize > 0) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			var pageCount = component.get("v.pageCount");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			var newPageCount = Math.ceil(totalItems / pageSize);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			if (!isNaN(newPageCount) && pageCount != newPageCount) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:				component.set("v.pageCount", newPageCount)
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			component.set("v.pageCount", 1);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			pageSize = totalItems;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (totalItems > 0) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			var endIndex = (component.get("v.currentPage") * pageSize) - 1;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			var startIndex = Math.max(0, endIndex - pageSize + 1);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			component.set("v.startIndex", startIndex);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:					Math.min(endIndex, totalItems - 1));
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			component.set("v.currentPage", 0, true);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			component.set("v.startIndex", -1);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		var updateDisplay = component.getDef().getHelper().updateDisplay;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:		if (updateDisplay) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerHelper.js:			updateDisplay.call(component, component);
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:<ruau:component implements="ui:visible, ui:pagingInterface" abstract="true" extensible="true" provider="java://org.ruauframework.component.ui.PagerProvider,js://ui.pager" support="GA" description="An abstract pager component, used to specify common behavior across implementations.">
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    <ruau:registerEvent name="onPageChange" type="ui:pagerEvent" description="The event that is fired when a concrete pager triggers a paging event."/>
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.updateCalculatedFields}"/>
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    <ruau:handler name="change" value="{!v.currentPage}" action="{!c.updateCalculatedFields}"/>
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    <ruau:handler name="change" value="{!v.pageSize}" action="{!c.updateCalculatedFields}"/>
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:    <ruau:handler name="change" value="{!v.totalItems}" action="{!c.updateCalculatedFields}"/>
ruau/ruau-mokponents/src/main/components/ui/pager/pager.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js:	updateCalculatedFields: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/pager/pagerController.js:		helper.updateCalculatedFields(component);
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        var type=component.get("v.type")||'';
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        var typeMap=getTypeMap();
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        var typeDescriptor=(type.indexOf(':')>-1)?type:typeMap[type];
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        var typeList=[]; // Ok to do this at call time because we are in a fatal error
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        for(var typeName in typeMap)typeList.push(typeName)
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        throw new Error("Unknown type attribute specified for ui:pager '"+type+"'. Remove the type attribute or use one of the following values: '"+typeList.join("', '")+"', or any namespaced component descriptor, e.g. ns:CustomPager.");
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:        function getTypeMap(){
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:            var callee=arguments.callee;
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:            if(!callee.typeMap){
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                callee.typeMap={
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                    "JumpToPage":   "ui:pagerJumpToPage",
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                    "NextPrevious": "ui:pagerNextPrevious",
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                    "PageInfo":     "ui:pagerPageInfo",
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                    "PageSize":     "ui:pagerPageSize",
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:                    "":             "ui:pagerNextPrevious"
ruau/ruau-mokponents/src/main/components/ui/pager/pagerProvider.js:            return callee.typeMap;
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:		var cmp = component.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    	var imageType = cmp.get('v.imageType'),
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    		altText = cmp.get('v.alt') || '',
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    		id = cmp.getLocalId() || cmp.getGlobalId() || '';
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    	if (imageType === 'informational' && altText.length == 0) {    		
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    		$A.warning('component: ' + id + ' "alt" attribute should not be empty for informational image');
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    	} else if (imageType === 'decorative' && altText.length > 0) {
ruau/ruau-mokponents/src/main/components/ui/image/imageController.js:    		$A.warning('component: ' + id + ': "alt" attribute should be empty for decorative image');
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:<ruau:component extensible="true" support="GA" description="An image that is rendered as an HTML &lt;img&gt; element. Use the alt attribute if imageType=&quot;informational&quot;.">
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:	<ruau:attribute name="title" type="String" description="Title for the image" />
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:	<ruau:attribute name="imageType" type="String" default="informational" description="The type of image. Accepted values: informational or decorative" />
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="src" type="String" default="/ruauFW/resources/ruau/s.gif" description="The absolute or relative URL of the image."/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="class" type="String" description="The CSS style used to display the image."/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="href" type="String" description="The URL that the image directs to when clicked."/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="linkClass" type="String" description="The CSS style used to display the URL link."/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="alt" type="String" default="" description="The alternate text description of the image. If imageType=&quot;informational&quot;, the alt attribute is required. Otherwise, it is not required if imageType=&quot;decorative&quot;."/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="target" type="String" default="_self" description="The target URL to display when the image is clicked. Default value is &#8220;_self&#8221;. Valid options: _blank, _parent, _top, _self"/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:attribute name="onerror" type="Ruue.Action" description="Action invoked when an error occurs while loading the image"/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}" />
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    <ruau:if isTrue="{!v.href != null &amp;&amp; v.href != ''}">
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:        <a class="{!v.linkClass}" href="{!v.href}" target="{!v.target}" ruau:id="link">
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:            <img src="{!v.src}" class="{!v.class}" alt="{!v.alt}" title="{!v.title}" onerror="{!v.onerror != undefined ? v.onerror : c.doNothing}"/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:        </a>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:        <ruau:set attribute="else">
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:            <img src="{!v.src}" class="{!v.class}" alt="{!v.alt}" title="{!v.title}" onerror="{!v.onerror != undefined ? v.onerror : c.doNothing}"/>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:        </ruau:set>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:    </ruau:if>
ruau/ruau-mokponents/src/main/components/ui/image/image.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:	 * Returns the img tag in this component.
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:	getImageElement : function(cmp) {
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:		var el = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:    	if (this.isAnchorImage(cmp)) {
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:	isAnchorImage : function(cmp) {
ruau/ruau-mokponents/src/main/components/ui/image/imageHelper.js:		var href = cmp.get("v.href");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testDefaultAttributes:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	failOnWarning: true,
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        ruauWarningsExpectedDuringInit : ["\"alt\" attribute should not be empty for informational image"], 	
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement), "Expected to see a image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.util.stringEndsWith(imgElement.src, '/ruauFW/resources/ruau/s.gif'), "Expected src to be '/ruauFW/resources/ruau/s.gif' by default");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertUndefinedOrNull(cmp.find('link'), 'By default there should be no link on the image.');
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testGetImageElementWithoutAnchor:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	    this.checkImageMatches(cmp, '/ruauFW/resources/ruau/ruaulogo.png');
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testGetImageElementWithAnchor:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', href: 'http://www.salesforce.com', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	    this.checkImageMatches(cmp, '/ruauFW/resources/ruau/ruaulogo.png');  	
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testImageOnly:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement), "Expected to see a image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.util.stringEndsWith(imgElement.src, '/ruauFW/resources/ruau/ruaulogo.png'), "Failed to display specified image source.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertUndefinedOrNull(cmp.find('link'), 'By default there should be no link on the image.');
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testImageWithLink:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', href: 'http://www.salesforce.com', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var linkElement = cmp.find('link').getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfAnchorElement(linkElement), "Expected to see a anchor element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.contains(linkElement.href,'http://www.salesforce.com'), linkElement.href + " Expected a link with specified address.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals('_self',linkElement.target, "Expected target to be _self by default.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals(1, linkElement.childElementCount || linkElement.children.length); //IE8 and below don't have childElementCount
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = linkElement.children[0];
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement), "Expected to see a image element embedded in the anchor tag.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.util.stringEndsWith(imgElement.src, '/ruauFW/resources/ruau/ruaulogo.png'), "Failed to display specified image source.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        attributes : {src: '/ruauFW/resources/ruau/images/bug.png', href: 'http://www.salesforce.com', linkClass:'logo', alt:'Company', target:'_top'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var linkElement = cmp.find('link').getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfAnchorElement(linkElement), "Expected to see a anchor element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.contains(linkElement.href,'http://www.salesforce.com'), linkElement.href + " Expected a link with specified address.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals('_top',linkElement.target, "Expected target to be _top.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertNotEquals(linkElement.className.indexOf('logo'), -1, "Expected link element to have specified class selector.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = linkElement.children[0];
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.util.stringEndsWith(imgElement.src, '/ruauFW/resources/ruau/images/bug.png'), "Failed to display specified image source.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals('Company', imgElement.alt, "Expected to see alt text on image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals(-1, imgElement.className.indexOf('logo'));
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testInformationImageTypeWithAltText:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {imageType:'informational', alt:'Company'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement), "Expected to see a image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals('Company', imgElement.alt, "Expected to see alt text on image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testInformationImageTypeWithoutAltText:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        failOnWarning: true,
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	ruauWarningsExpectedDuringInit : ["\"alt\" attribute should not be empty for informational image"],
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {imageType:'informational'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        	// This is testing component "init" which is already tested above (ruauWarningsExpectedDuringInit).
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testDecorativeImageTypeWithAltText:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	failOnWarning: true,
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	ruauWarningsExpectedDuringInit : ["\"alt\" attribute should be empty for decorative image"],
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {imageType:'decorative', alt:'Company'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            // This is testing component "init" which is already tested above (ruauWarningsExpectedDuringInit).
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testDecorativeImageTypeWithoutAltText:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:        test: function(cmp,action){
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement), "Expected to see a image element.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testGetImageElementWithoutAnchor:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		var imgEl = cmp.getDef().getHelper().getImageElement(cmp);
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		$A.test.assertTrue($A.test.isInstanceOfImageElement(imgEl));
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		$A.test.assertEquals(imgEl, document.getElementsByTagName("img")[0]);
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    testGetImageElementWithAnchor:{
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    	attributes : {src: '/ruauFW/resources/ruau/ruaulogo.png', href: 'http://www.salesforce.com', imageType:'decorative'},
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		var imgEl = cmp.getDef().getHelper().getImageElement(cmp);
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		$A.test.assertTrue($A.test.isInstanceOfImageElement(imgEl));
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:    		$A.test.assertEquals(imgEl, document.getElementsByTagName("img")[0]);
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            var imgElement = cmp.getElement();
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertTrue($A.test.isInstanceOfImageElement(imgElement))
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals("",imgElement.alt, "Expected a empty alt text for all image tags.");
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            cmp.set("v.alt",'Help Accessibility');
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            cmp.set("v.src",'http://www.google.com/intl/en_com/images/srpr/logo3w.png');
ruau/ruau-mokponents/src/main/components/ui/image/imageTest.js:            $A.test.assertEquals("Help Accessibility",imgElement.alt, "Expected alt text for the image element.");
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:<ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:	<ruau:description>
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:	</ruau:description>	
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:		<ruau:example name="buttonExample" ref="uitest:image_ErrorTest" label="Using ui:image">
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:    	<p>This example shows how broken and unbroken images are rendered when passing onerror ruau action to ui:image</p>
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:	</ruau:example>
ruau/ruau-mokponents/src/main/components/ui/image/image.ruaudoc:</ruau:documentation>
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/image/image.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/image/image.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/image/image.css:.uiImage{
ruau/ruau-mokponents/src/main/components/ui/image/image.css:.uiImage.empty {
ruau/ruau-mokponents/src/main/components/ui/image/image.css:    background-image: url(/ruauFW/resources/ruau/s.gif);
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:        var linkCmp = this.getAnchorElement(component);
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:        var elem = linkCmp ? linkCmp.getElement() : null;
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:        //Walk up the component ancestor to find the contained component by localId
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:        var localId = "link",
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:        var retCmp = null;
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:            retCmp = cmp.find(localId);
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLinkHelper.js:                break;
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:<ruau:component access="GLOBAL" support="GA" extensible="true" extends="ui:menuTrigger" description="A link that triggers a dropdown menu.">
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    <ruau:attribute access="GLOBAL" name="label" type="String" description="The text displayed on the component."/>
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    <a ruau:id="link" class="{!v.class}" title="{!v.title}">
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:        <ruau:if isTrue="{!v.body.length == 0}">
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:            {!v.label}
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:            <ruau:set attribute="else">
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:            </ruau:set>
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:        </ruau:if>
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:        <span class="assistiveText">{!v.title}</span>
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:    </a>
ruau/ruau-mokponents/src/main/components/ui/menuTriggerLink/menuTriggerLink.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for (var i = 0; i < iters.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var optionCmp = iters[i];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:     * Notify that the matching is done.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    fireMatchDoneEvent: function(component, items) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var size = 0;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for (var i = 0; i < items.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var evt = component.get("e.matchDone");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            evt.setParams({
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var element = event.target || event.srcElement;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var htmlCmp = $A.componentService.getRenderingComponentForElement(element);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        return htmlCmp.getComponentValueProvider().getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var next = -1;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var start = k >= iters.length - 1 ? 0 : k + 1;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for (var i = start; i < iters.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var optionCmp = iters[i];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (next < 0) { // If no visible is found below the current highlighted,  let's start from top.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            for (var j = 0; j < k; j++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var optionCmp = iters[j];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var helper = this;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var f = function(event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                // ignore gestures/swipes; only run the click handler if it's a click or tap
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var clickEndEvent;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    var touchIdFound = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    for (var i = 0; i < event.changedTouches.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                        clickEndEvent = event.changedTouches[i];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                        if (clickEndEvent.identifier === component._onStartId) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                            break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var startX = component._onStartX, startY = component._onStartY;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var endX = clickEndEvent.clientX, endY = clickEndEvent.clientY;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                if (Math.abs(endX - startX) > 0 || Math.abs(endY - startY) > 0) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var listElems = component.getElements();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var ignoreElements = component.get("v.elementsToIgnoreClicking");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var clickOutside = true;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    var ret = true;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    for (var i = 0; ret; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                        if (ret && helper.isHTMLElement(ret) && $A.util.contains(ret, event.target)) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                            clickOutside = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                            break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    var ret2 = true;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    for (var j = 0; ret2; j++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                        if (ret2 && helper.isHTMLElement(ret2) && $A.util.contains(ret2, event.target)) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                            clickOutside = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                            break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    // Collapse the menu
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component.set("v.visible", false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        // create the cache
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if ($A.util.isUndefined(this.getOnClickEventProp.cache)) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.getOnClickEventProp.cache = {};
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        // check the cache
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var cached = this.getOnClickEventProp.cache[prop];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (!$A.util.isUndefined(cached)) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            return cached;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        // fill the cache
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        this.getOnClickEventProp.cache["isTouchDevice"] = !$A.util.isUndefined(document.ontouchstart);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (this.getOnClickEventProp.cache["isTouchDevice"]) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.getOnClickEventProp.cache["onClickStartEvent"] = "touchstart";
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.getOnClickEventProp.cache["onClickEndEvent"] = "touchend";
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.getOnClickEventProp.cache["onClickStartEvent"] = "mousedown";
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.getOnClickEventProp.cache["onClickEndEvent"] = "mouseup";
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        return this.getOnClickEventProp.cache[prop];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    getOnClickStartFunction: function(component) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if ($A.util.isUndefined(component._onClickStartFunc)) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var helper = this;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var f = function(event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    var touch = event.changedTouches[0];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    // record the ID to ensure it's the same finger on a multi-touch device
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component._onStartId = touch.identifier;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component._onStartX = touch.clientX;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component._onStartY = touch.clientY;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component._onStartX = event.clientX;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    component._onStartY = event.clientY;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            component._onClickStartFunc = f;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        return component._onClickStartFunc;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var prev = iters.length;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var start = k <= 0 ? iters.length - 1 : k - 1;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for (var i = start; i >= 0; i--) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var optionCmp = iters[i];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (prev >= iters.length) { // If no visible is found above the current highlighted,  let's start from bottom.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            for (var j = iters.length - 1; j > k; j--) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var optionCmp = iters[j];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handleDataChange: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        concreteCmp.set("v.items", event.getParam("data"));
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        this.matchText(concreteCmp);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handleEsckeydown: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        component.set("v.visible", false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handleKeydown: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var keyCode = event.keyCode;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (event.keyCode === 39 || event.keyCode === 40) {  // right or down arrow key
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            event.preventDefault();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        } else if (event.keyCode === 37 || event.keyCode === 38) {  // left or up arrow key
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            event.preventDefault();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            event.stopPropagation();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.handleEsckeydown(component, event);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        } else if (event.keyCode === 9) {  // tab key: dismiss the list
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.handleTabkeydown(component, event);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handleListHighlight: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var activeIndex = -1;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var iterCmp = component.find("iter");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var iters = iterCmp.get("v.body");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var highlightedIndex = this.findHighlightedOptionIndex(iters);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var index = event.getParam("activeIndex");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                activeIndex = highlightedIndex < 0 ? this.getPrevVisibleOption(iters, iters.length)
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                activeIndex = highlightedIndex < 0 ? this.getNextVisibleOption(iters, -1)
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            if (activeIndex >= 0 && activeIndex < iters.length && activeIndex != highlightedIndex) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    iters[highlightedIndex].set("v.highlighted", false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var highlightedCmp = iters[activeIndex];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                this.updateAriaAttributes(component, highlightedCmp);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handlePressOnHighlighted: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var iterCmp = component.find("iter");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var iters = iterCmp.get("v.body");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var highlightedIndex = this.findHighlightedOptionIndex(iters);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var targetCmp = iters[highlightedIndex];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var selectEvt = component.get("e.selectListOption");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                selectEvt.setParams({
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    option: targetCmp
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    handleTabkeydown: function(component, event) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        component.set("v.visible", false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    hasVisibleOption : function(items) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var hasVisibleOption = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for (var i = 0; i < items.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                hasVisibleOption = true;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                break;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        return hasVisibleOption;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:     * Checks if the object is an HTML element.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:     * @param {Object} obj
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:     * @returns {Boolean} True if the object is an HTMLElement object, or false otherwise.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            return obj instanceof HTMLElement;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            return typeof obj === "object" && obj.nodeType === 1 && typeof obj.nodeName==="string";
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    matchFunc: function(component) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var keyword = component.get("v.keyword");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var propertyToMatch = component.get("v.propertyToMatch");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var items = component.get("v.items");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var regex;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            for (var j = 0; j < items.length; j++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var label = items[j][propertyToMatch];
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                var searchResult = regex.exec(label);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                if (searchResult && searchResult[0].length > 0) { // Has a match
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                    items[j].visible = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        } catch (e) { // if keyword is not a legal regular expression, don't show anything
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            for (var i = 0; i < items.length; i++) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                items[i].visible = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    matchFuncDone: function(component) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var items = component.get("v.items");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        this.fireMatchDoneEvent(component, items);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        this.showLoading(component, false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        //this.updateEmptyListContent(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var itemCmps=component.find("iter").get("v.body");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        for(var i=0;i<itemCmps.length;i++){
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            $A.util.toggleClass(itemCmps[i],"force");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    matchText: function(component) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var action = component.get("v.matchFunc");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (action) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            action.setCallback(this, function(result) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                this.matchFuncDone(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            $A.enqueueAction(action);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.matchFunc(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            this.matchFuncDone(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var showEmptyListContent = !$A.util.isEmpty(component.get("v.emptyListContent")) &&
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var hasVisibleOption = this.hasVisibleOption(items);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var list = component.find("list");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        $A.util.toggleClass(list, "visible", hasVisibleOption);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        component.set("v.visible", hasVisibleOption || showEmptyListContent);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    updateAriaAttributes: function(component, highlightedCmp) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var optionCmp = highlightedCmp.find("option");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var elem = optionCmp ? optionCmp.getElement() : null;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var updateAriaEvt = component.get("e.updateAriaAttributes");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (elem && updateAriaEvt) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            var obj = {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                "aria-activedescendant": elem.id
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            updateAriaEvt.setParams({
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:                attrs: obj
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            updateAriaEvt.fire();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    updateEmptyListContent: function (component) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var visible = component.getConcreteComponent().get("v.visible");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var items = component.getConcreteComponent().get("v.items");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        var hasVisibleOption = this.hasVisibleOption(items);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        $A.util.toggleClass(component, "showEmptyContent", visible && !hasVisibleOption);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:    showLoading:function (component, visible) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        $A.util.toggleClass(component, "loading", visible);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        // Originally, no loading indicator was shown. Making it only appear when specified in the facet.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:        if (!$A.util.isEmpty(component.get("v.loadingIndicator"))) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListHelper.js:            $A.util.toggleClass(component, "invisible", !visible);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:    afterRender : function(component, helper){
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:        helper.updateEmptyListContent(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            helper.updateEmptyListContent(component);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:        if (helper.getOnClickEventProp.cache && 
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            helper.getOnClickEventProp.cache.onClickStartEvent && 
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            component._onClickStartFunc) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            $A.util.removeOn(document.body, helper.getOnClickEventProp.cache.onClickStartEvent, component._onClickStartFunc, false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:        if (helper.getOnClickEventProp.cache &&
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            helper.getOnClickEventProp.cache.onClickEndEvent && 
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListRenderer.js:            $A.util.removeOn(document.body, helper.getOnClickEventProp.cache.onClickEndEvent, component._onClickEndFunc, false);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    position: absolute;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    border-radius: 4px;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    background-color: #FFF;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    box-shadow: 0 0 8px rgba(0, 0, 0, .25);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    display: none;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    overflow-y: auto;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    display: block;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    margin: 0px; 
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.css:    padding: 0px;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var dataProvider = component.get("v.dataProvider[0]");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        if(dataProvider && dataProvider.getModel()) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            component.set("v.items", dataProvider.get("m.items"));
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:    handleClick: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var targetCmp = helper.getEventSourceComponent(component, event);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var selectEvt = component.get("e.selectListOption");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        selectEvt.setParams({
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            option: targetCmp
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:    handleListHighlight: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        helper.handleListHighlight(component, event);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:    handlePressOnHighlighted: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        helper.handlePressOnHighlighted(component, event);
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:    matchText: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        helper.matchText(component, event.getParam("keyword"));
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:    visibleChange: function(component, event, helper) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var obj = {};
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var visible = component.get("v.visible");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        if (visible === false) { // auto complete list is hidden.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            var list = component.find("list");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            $A.util.removeClass(list, "visible");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            // Remove loading indicator
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            obj["aria-activedescendant"] = "",
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            obj["aria-expanded"] = false;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            // De-register list expand/collapse events
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            $A.util.removeOn(document.body, helper.getOnClickEventProp("onClickStartEvent"), helper.getOnClickStartFunction(component));
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        } else { // Register list expand/collapse events
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            obj["aria-expanded"] = true;
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            $A.util.on(document.body, helper.getOnClickEventProp("onClickStartEvent"), helper.getOnClickStartFunction(component));
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        // Update accessibility attributes
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        var updateAriaEvt = component.get("e.updateAriaAttributes");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:        if (updateAriaEvt) {
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            updateAriaEvt.setParams({
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:                attrs: obj
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteListController.js:            updateAriaEvt.fire();
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:<ruau:component
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    extends="ui:abstractList"
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    description="This component is used in ui:autocomplete to provide a list of options to the input component.To customize the list option behavior, use the selectListOption, listHighlight, and updateAriaAttributes events.">
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:attribute name="elementsToIgnoreClicking" type="Object" description="The DOM elements to ignore when we handle clicking outside."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:attribute name="keyword" type="String" description="The keyword used to match list options."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:attribute name="propertyToMatch" type="String" default="label" description="The property name in the data object which is used to match typing in the input field."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:attribute name="matchFunc" type="Ruue.Action" description="Overrides default list item update behavior to allow custom text matching."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="matchDone" type="ui:matchDone" description="The event fired when the matching is done."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="listHighlight" type="ui:listHighlight" description="The event fired when a list option is highlighted."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="matchText" type="ui:matchText" description="The event fired when a text match occurs."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="pressOnHighlighted" type="ui:press" description="The event fired when a highlighted option is pressed."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="selectListOption" type="ui:selectListOption" description="The event fired when a list option is selected."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:registerEvent name="updateAriaAttributes" type="ui:updateAriaAttributes" description="The event fired when a new option is highlighted."/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:handler name="change" value="{!v.visible}" action="{!c.visibleChange}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:handler name="listHighlight" action="{!c.handleListHighlight}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:handler name="matchText" action="{!c.matchText}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ruau:handler name="pressOnHighlighted" action="{!c.handlePressOnHighlighted}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:    <ul ruau:id="list" class="{!v.class}" role="presentation" onclick="{!c.handleClick}">
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:        <ruau:iteration ruau:id="iter" items="{!v.items}" var="{!v.itemVar}" body="{!v.itemTemplate}"/>
ruau/ruau-mokponents/src/main/components/ui/autocompleteList/autocompleteList.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	fireSelectedItemsChange: function (cmp, data) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		cmp.getEvent('onselecteditemschange').setParams({
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:			data: data
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} concrete component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		if (concrete._dataProviders[0]) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:			concrete._dataProviders[0].getEvent('provide').fire();
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * All initialization logic must apply to all child components.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * If any init logic may be overrideable, put it in a different function.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	initialize: function (cmp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		this.initializeDataProviders(cmp);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	initializeDataProviders: function(cmp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        var concrete = cmp.getConcreteComponent(),
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        	dataProviders = cmp.get("v.dataProvider");
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        concrete._dataProviders = [];
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        for (var n = 0; n < dataProviders.length; n++) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        	var dp = dataProviders[n];
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    		dp.addHandler("onchange", cmp, "c.handleDataChange");
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    		concrete._dataProviders.push(dp);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        cmp.set("v.dataProvider", dataProviders);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:        if (concrete._dataProviders.length > 0) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * Handles refresh. By default, provide is fired against the dataProvider.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} concrete component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	handleRefresh: function (concrete) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} AbstractDataGrid component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    deriveItemShape: function (cmp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    	$A.error('Unimplemented function in abstractDataGridHelper');
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} concrete component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    handleDataChange: function (concrete, data) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    	concrete.set('v.items', data);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} concrete component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    handleDataChange: function (concrete, data) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:    	concrete.set('v.items', data);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} AbstractDataGrid component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	handleModeChange: function (cmp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		$A.error('Unimplemented function in abstractDataGridHelper');
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} concrete component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	handleSortByChange: function (concrete) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		$A.error('Unimplemented function in abstractDataGridHelper');
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Component} AbstractDataGrid component
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	 * @param {Object} params from ui:dataGridInsert
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:	handleAddRemove: function (cmp, params) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridHelper.js:		$A.error('Unimplemented function in abstractDataGridHelper');
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:<ruau:component abstract="true" extensible="true" implements="ui:visible" support="PROTO" description="An abstract component that provides a basic layout for the ui:dataGrid component.">
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<!-- Public attributes -->
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="items" type="List" description="Arbitrary list of objects to iterate over. Object type to avoid expensive wrapping."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="itemShape" type="Object" description="Template object with null fields to describe item shape. If not set, then concrete should derive shape from columns facet."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="mode" type="String" default="VIEW" description="{ VIEW, VIEW_ONLY, EDIT, EDIT_ONLY }"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="state" type="String" default="idle" description="{ idle, loading, error }"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="sortable" type="Boolean" default="true" description="Toggle sorting by columns (via column header)."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="createable" type="Boolean" default="false" description="Describes whether the implementation should enable a creation pattern."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:    <ruau:attribute name="selectAll" type="Boolean" default="false" description="All selected."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="selectedItems" type="List" description="A list of selected items."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="sortBy" type="String" description="Comma-separated list of columns predicated by a '-' for descending."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<!-- Facets for advanced configuration -->
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="dataProvider" type="Ruue.Component[]" description="Facet for ui:dataProvider - responsible for fetching data."/>	
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="dataWriter" type="Ruue.Component[]" description="Facet for ui:dataWriter - responsible for writing data. Implementation TBD."/>	
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="columns" type="Ruue.Component[]" description="Configuration for columns."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="summaryRow" type="Ruue.ComponentDefRef[]" description="Configuration for summary rows."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:attribute name="actionDelegate" type="Ruue.Component[]" description="Row action delegate."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:registerEvent name="refresh" type="ui:refresh" description="Provides fresh data from the dataProvider."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:registerEvent name="addRemove" type="ui:addRemove" description="Command event for grid to insert or delete items as rows."/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:handler name="change" value="{!v.mode}" action="{!c.handleModeChange}"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:handler name="change" value="{!v.sortBy}" action="{!c.handleSortByChange}"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:handler name="refresh" action="{!c.handleRefresh}"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:	<ruau:handler name="addRemove" action="{!c.handleAddRemove}"/>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGrid.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.initialize(cmp);
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:	handleDataChange: function (cmp, evt, hlp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		var concrete = cmp.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.handleDataChange(concrete, evt.getParam('data'));
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:	handleModeChange: function (cmp, evt, hlp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:			$A.log('Can not put view only grid into EDIT mode.');
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.handleModeChange(cmp); 	
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:	handleSortByChange: function (cmp, evt, hlp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		var concrete = cmp.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.handleSortByChange(concrete); 
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:	handleRefresh: function (cmp, evt, hlp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		var concrete = cmp.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.handleRefresh(concrete); 	
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:	handleAddRemove: function (cmp, evt, hlp) {
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		var concrete = cmp.getConcreteComponent();
ruau/ruau-mokponents/src/main/components/ui/abstractDataGrid/abstractDataGridController.js:		hlp.handleAddRemove(cmp, evt.getParams()); 	
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the menu collapses.">
ruau/ruau-mokponents/src/main/components/ui/menuCollapse/menuCollapse.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/rowPress/rowPress.evt:<ruau:event type="COMPONENT" support="BETA" description="Indicates that a row has been clicked and held down."/>
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:<ruau:event type="APPLICATION" description="Register an async component to asyncComponentManager">
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:    <ruau:attribute name="asyncComponent" required="true" type="Ruue.Component"/>
ruau/ruau-mokponents/src/main/components/ui/asyncComponentRegister/asyncComponentRegister.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = "eventName";
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    actual = eventName;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(){}, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function TypeSetOnEventParams(component){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = "columnType";
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(params){ actual = params.type }, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName", expected);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function ContextSourceSetOnEventParams(component){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = component;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var data = {};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var domEvent = {};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(params){ actual = params.context.source}, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName", "type", domEvent, data);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function ContextEventSetOnEventParams(component){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = { domEvent: true };
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var data = {};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var domEvent = expected;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(params){ actual = params.context.event }, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName", "type", domEvent, data);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function ContextHelperSetOnEventParams(component){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = expected;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var data = {};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var domEvent = { domEvent: true };
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(params){ actual = params.context.helper }, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName", "type", domEvent, data);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function DataSetOnEventParams(component){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var expected = {};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var data = expected;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var domEvent = { domEvent: true };
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(params){ actual = params.data}, fire:function(){}};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName", "type", domEvent, data);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var helper = this.getHelper(component);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var mockWhile = this.getMock(component, "getEvent", function(eventName){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    return { setParams:function(){}, fire:function(){ actual = true; }};
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                var actual = null;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                    helper.fireEvent(component, "eventName");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                ruau.test.assertTrue(actual);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateCheckboxColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedCheckboxColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateEmailColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedEmailColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateHeaderColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedHeaderColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateHtmlColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedHtmlColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateIndexColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedIndexColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateLinkColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedLinkColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateTextColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function CreateNamespacedTextColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function DefaultColumnIsTextColumn(component){},
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            function InvalidColumnTypeThrowsError(component){}
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:    getHelperMock:function (component, name, mock) {
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:        return this.getMock(this.getHelper(component), name, mock);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:    getMock:function (target, name, mock) {
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            var original = target[name];
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                mock.mocked = original.bind(target);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                target[name] = mock;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                return during.apply(target, Array.prototype.slice.call(arguments, 1));
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            } catch (e) {
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:            } finally {
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnTest.js:                target[name] = original;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:<ruau:component implements="ui:elementInterface,ui:listViewColumnInterface" abstract="true" extensible="true" provider="java://org.ruauframework.component.ui.ListViewColumnProvider,js://ui.listViewColumn" support="GA" description="An abstract column template component, used to specify column display information in ui:listView.">
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    <ruau:attribute name="column" type="Object"                description="Read only. Gets the template used to define this column field."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    <ruau:attribute name="index" type="Integer"                description="Read only. Gets the index of the item being used to populate this column field."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    <ruau:attribute name="item" type="Object"                  description="Read only. Gets the item being used to populate this column field."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    <ruau:attribute name="scope" type="String" default="col"   description="Gets or sets the scope of this column field."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:    <ruau:attribute name="type" type="String"                  description="The concrete type of the column. Accepted values are 'Checkbox', 'Email', 'Header', 'Html', 'Index', 'Link', 'Text', or any namespaced component descriptor, e.g. ns:CustomColumn."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumn.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js:    fireEvent:function(component,name,type,rawEvent,data){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js:        var listViewEvent = component.getEvent(name);
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js:        listViewEvent.setParams({
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js:                event:rawEvent,
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnHelper.js:            data:data||{}
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        var type=component.get("v.type")||'';
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        var typeMap=getTypeMap();
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        var typeDescriptor=(type.indexOf(':')>-1)?type:typeMap[type];
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        var typeList=[]; // Ok to do this at call time because we are in a fatal error
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        for(var typeName in typeMap)typeList.push(typeName)
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        throw new Error("Unknown type attribute specified for ui:listViewColumn '"+type+"'. Remove the type attribute, or use one of the following values: '"+typeList.join("', '")+"', or any namespaced component descriptor, e.g. ns:CustomColumn.");
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:        function getTypeMap(){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:            var callee=arguments.callee;
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:            if(!callee.typeMap){
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:                callee.typeMap={
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:                    "Email":    "ui:listViewColumnEmail",
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:                    "Header":   "ui:listViewColumnHeader",
ruau/ruau-mokponents/src/main/components/ui/listViewColumn/listViewColumnProvider.js:            return callee.typeMap;
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:		helper.setDefaultAttributes(cmp);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:		helper.updateSize(cmp);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:		// call super rerender only if necessary, to avoid triggering unnecessary rerendering for contained child components
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:			helper.updateSize(cmp);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedRenderer.js:		if (cmp.isDirty("v.class") || cmp.isDirty("v.priv_snap")) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		//populate pageId with component's globalId
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		cmp.set('v.priv_pageId', cmp.getGlobalId());
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:	onPageSelected : function (cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		helper.selectPage(cmp, evt);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:	onPageUpdate: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		helper.updatePage(cmp, evt.getParam("pageComponent"));
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:	onPageShow: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		helper.showPage(cmp, evt.getParam('pageIndex'));
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:	onPageHide: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		helper.hidePage(cmp, evt.getParam('pageIndex'));
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:	onUpdateSize: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:		var size = evt.getParam('pageSize');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedController.js:			helper.updateSize(cmp, size.width, size.height);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:<ruau:component extends="ui:interactive" support="DEPRECATED" extensible="true" description="A scrollable page in a ui:carousel component.">
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="title" type="String" description="Title of the page" />    
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="isCacheable" default="true" type="Boolean" description="Indicates whether the page content is cacheable on client or not." />    
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="isDefault" default="false" type="Boolean" description="Determines if this is the default page to display." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="pageModel" type="Object" description="The model that is used to create components dynamically." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="pageIndex" type="Integer" description="The index of this page." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="isSelected" type="Boolean" default="false" description="Indicates whether the page is selected or not." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="parent" type="Ruue.Component[]" description="The page container." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_width" type="Integer" description="PRIVATE - Width of the page in pixels. This value is inherited from the ui:carousel 'width' attribute." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_height" type="Integer" description="PRIVATE - Height of the page in pixels. This value is inherited from the ui:carousel 'height' attribute." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_pageStyle" type="String" description="PRIVATE" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_pageId" type="String" description="PRIVATE" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_visible" type="Boolean" description="Indicates page is visible or not." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_continuousFlow" type="Boolean" description="Indicates carousel can flow continuously or not." />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="priv_snap" type="String" description="PRIVATE - Scroller snap option."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the carousel page is selected."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:registerevent name="update" type="ui:carouselPageEvent" description="The event fired when the carousel page is updated."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:registerevent name="show" type="ui:carouselPageEvent" description="The event fired when the carousel page is displayed."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:registerevent name="hide" type="ui:carouselPageEvent" description="The event fired when the carousel page is hidden."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:registerevent name="updateSize" type="ui:carouselPageEvent" description="The event fired when the carousel page is resized."/>
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="pageSelected" action="{!c.onPageSelected}" /> 
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="update" action="{!c.onPageUpdate}" /> 
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="show" action="{!c.onPageShow}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="hide" action="{!c.onPageHide}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="updateSize" action="{!c.onUpdateSize}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.onInit}" />
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <ruau:attribute name="showPage" type="Ruue.Action" />    
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <!-- id attribute is linked to the aria-control attribute in page indicator -->
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:    <section class="{!v.class + ' carousel-page ' + v.priv_snap}" id="{!v.priv_pageId}" ruau:id="pageContainer" style="{!v.priv_pageStyle}"  role="tabpanel">						 						 							
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecated.cmp:</ruau:component>    
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	updateSize: function(cmp, width, height) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var w=width || cmp.get('v.priv_width'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	selectPage: function(cmp, evt) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var selectedPage = evt.getParam('pageIndex'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			curPage = cmp.get('v.pageIndex'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			selectedItemCss = 'carousel-page-selected';
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		if (selectedPage === curPage) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			$A.util.addClass(cmp.getElement(), selectedItemCss);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			this.showPage(cmp, selectedPage);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.set('v.isSelected', false);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			$A.util.removeClass(cmp.getElement(), selectedItemCss);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	 * Update page content
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	updatePage: function(cmp, pageBody) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var pageContainer = cmp.find('pageContainer');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		pageContainer.set("v.body", pageBody ? pageBody : []);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	 * Set page is visible or not when displayed
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var isVisible = cmp.get('v.priv_visible'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			strClass = cmp.get('v.class') || '';
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.set('v.class', strClass + ' hidden');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			var snap = cmp.get('v.priv_snap');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			if (snap && snap.indexOf('.') != -1) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:				cmp.set('v.priv_snap', snap.substring(snap.indexOf('.') + 1));
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	showPage: function(cmp, pageIndex) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var curPage = cmp.get('v.pageIndex'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			isVisible = $A.util.getBooleanValue(cmp.get('v.priv_visible')),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			hiddenClass = 'hidden';
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		if (pageIndex == curPage && !isVisible) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			$A.util.removeClass(cmp.getElement(), hiddenClass);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.getElement().setAttribute('aria-expanded', 'true');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	hidePage: function(cmp, pageIndex) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		var curPage = cmp.get('v.pageIndex'),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			isVisible = $A.util.getBooleanValue(cmp.get('v.priv_visible')),
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			hiddenClass = 'hidden';
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:		if (pageIndex == curPage && isVisible) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			$A.util.addClass(cmp.getElement(), hiddenClass);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.getElement().setAttribute('aria-expanded', 'false');
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.set('v.priv_visible', false);
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:	setDefaultAttributes: function(cmp) {
ruau/ruau-mokponents/src/main/components/ui/carouselPageDeprecated/carouselPageDeprecatedHelper.js:			cmp.getElement().setAttribute('aria-expanded', 'false');
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:<ruau:interface support="BETA" extends="ui:handlesShowMore,ui:handlesRefresh"
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:                description="Interface for components that are placed in the body of a ui:scroller that want to handle 'Pull to Refresh' and 'Load More' functionality provided by the scroller.">
ruau/ruau-mokponents/src/main/components/ui/scrollerEmbeddable/scrollerEmbeddable.intf:</ruau:interface>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:	 * Handler for event that's fired programtically
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:	activateTab: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:		helper.setActive(cmp, evt.getParam("active"), evt.getParam("focus"));
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:	 * Handler for event that's fired when user clicks on tab to activate
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:	onTabActivated: function(cmp, evt, helper) {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:		    cmp.get('e.onActivate').fire();
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemController.js:		$A.util.squash(evt, true);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:<ruau:component extensible="true" description="A tab that is rendered by the ui:tabBar component">
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="title" type="String" description="The text to display as a tooltip when the mouse hovers over the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="name" type="String" description="The internal name of the tab that can be referenced to."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="icon" type="Ruue.Component[]" description="The graphical image displayed on the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="active" type="Boolean" description="Specifies whether a tab is active (true) or not (false)."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="iconClass" type="String" description="The CSS style used to display the icon on the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="closable" type="Boolean" default="false" description="Specifies whether to display an 'x' that will close the tab when clicked. Default value is 'false'." />
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:attribute name="ariaControlId" type="String" description="Internal use for aria-controls attribute."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:registerEvent name="activateTab" type="ui:tabsetEvent" description="The event is fired to activate the tab."/>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:registerevent name="onActivate" type="ui:tabsetEvent" description="The event is fired when the tab is clicked to activate." />
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:registerevent name="onClose" type="ui:tabsetEvent" description="The event is fired when the close icon is clicked to close the tab." />
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <ruau:handler name="activateTab" action="{!c.activateTab}" />
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:    <li ruau:id="li" class="tabItem" role="presentation">
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	    <a class="tabHeader" onclick="{!c.onTabActivated}" href="javascript:void(0);" ruau:id="tabItem" aria-controls="{!v.ariaControlId}" aria-selected="false" tabindex="-1" role="tab">
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:            <span class="{!v.iconClass}">{!v.icon}</span>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:            <span>{!v.title}</span>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	        <ruau:renderIf isTrue="{!v.closable}">
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	          <a ruau:id="close" class="close" href="javascript:void(0);" onclick="{!c.close}" tabindex="-1">&times;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	           <span class="assistiveText">Close</span>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	          </a>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	        </ruau:renderIf>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:	    </a>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    background: #eee;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    border-radius: 5px 5px 0 0;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    margin-right: 2px;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    white-space: nowrap;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:.THIS .tabHeader {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    margin: 0px;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    padding: 5px 10px;  
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    display: block;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:    text-decoration: none;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:	display: inline-block;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:	position: relative;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:	text-align: center;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:	margin-left: 10px;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:.THIS.active {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItem.css:	background: #dc595c;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:        attributes : {"title" : "title1"},
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:            var element = cmp.find("tabItem").getElement();
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:            var text = $A.util.getText(element);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:            $A.test.assertEquals("title1", text, "The title of the tabItem element was not correct")        
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:    //Api test for closable anchor
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:    testClosable : {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:        attributes : {"title" : "title1", "closable" : true}, 
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:            this.verifyChildExists(cmp, "a", "The closable anchor should be present and it is not.");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:    verifyChildExists : function(cmp, elementName, text){
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:        var anchor = cmp.find("tabItem").getElement();
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:        var img = anchor.getElementsByTagName(elementName)[0];
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemTest.js:        $A.test.assertNotUndefinedOrNull(img, text);  
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js: * limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:	setActive: function(cmp, active, focus) {
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:		var containerEl = cmp.find("li").getElement(),
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			itemEl = cmp.find("tabItem").getElement(),
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:		cmp._isActive = active;
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:		if (active) {			
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			$A.util.addClass(containerEl, "active");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			itemEl.setAttribute("aria-selected", true);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			itemEl.setAttribute("tabindex", 0);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			    closeEl.setAttribute("tabindex", 0);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			$A.util.removeClass(containerEl, "active");
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			itemEl.setAttribute("aria-selected", false);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:			itemEl.setAttribute("tabindex", -1);
ruau/ruau-mokponents/src/main/components/ui/tabItem/tabItemHelper.js:                closeEl.setAttribute("tabindex", -1);
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:<ruau:event type="COMPONENT" support="GA" description="The standard event object that is fired for paging events.">
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    <ruau:attribute name="pageSize" type="Integer"     description="The desired pageSize to be set."/>
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:    <ruau:attribute name="currentPage" type="Integer"  description="The desired page to be set."/>
ruau/ruau-mokponents/src/main/components/ui/pagerEvent/pagerEvent.evt:</ruau:event>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:<ruau:component extends="ui:listViewColumnCell" extensible="true" support="GA" description="An html column template definition, describes unescaped markup in a table data cell.">
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    <ruau:attribute name="markup" type="Object" description="Sets the markup for this cell."/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:    <ruau:unescapedHtml value="{!v.markup}"/>
ruau/ruau-mokponents/src/main/components/ui/listViewColumnHtml/listViewColumnHtml.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/mousedown/mousedown.evt:<ruau:event type="COMPONENT" extends="ui:baseMouseEvent" support="GA" description="Indicates that the user has pressed a mouse key."></ruau:event>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    See the License for the specific language governing permissions and
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    limitations under the License.
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:<ruau:component extends="ui:inputText" extensible="true" support="GA" access="GLOBAL" description="An input field for entering a number, taking advantage of client input assistance and validation when available.">
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:attribute name="value" type="Decimal" access="GLOBAL" description="The input value of the number."/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:attribute name="max" type="Decimal" default="99999999999999" description="Specifies the maximum value allowed. Setting this higher than the default value can result in rounding of the value in some clients. Works with HTML5 only."/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:attribute name="min" type="Decimal" default="-99999999999999" description="Specifies the minimum value allowed. Setting this lower than the default value can result in rounding of the value in some clients. Works with HTML5 only."/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:attribute name="step" type="Decimal" default="1" description="Specifies the legal intervals. Decimals are allowed, but for maximum client compatibility, only set this to positive integers. Works with HTML5 only."/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:attribute name="format" type="String" access="GLOBAL" description="The format of the number. For example, format=&ldquo;.00&rdquo; displays the number followed by two decimal places. If not specified, the Locale default format will be used."/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:set attribute="doFormat" value="true"/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    <ruau:renderif isTrue="{!v.body.length == 0}">
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  class="{!v.class}"
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  value="{!v.value}"
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  max="{!v.max}"
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  placeholder="{!v.placeholder}"
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  disabled="{!v.disabled}"
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       		  aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       <ruau:set attribute="else">
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:       </ruau:set>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:    </ruau:renderif>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumber.cmp:</ruau:component>
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * You may obtain a copy of the License at
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-mokponents/src/main/components/ui/inputNumber/inputNumberHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
