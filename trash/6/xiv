ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Girl look at that body (x3)
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Girl look at that body (x3)
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            When I walk in the spot, this is what I see
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Everybody stops and they staring at me
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            I got passion in my pants and I ain't afraid to show it
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            I'm sexy and I know it (x2)
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            When I'm at the mall, security just can't fight 'em off
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            When I'm at the beach, I'm in a speedo trying to tan my cheeks
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            This is how I roll, come on ladies it's time to go
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            We headed to the bar, baby don't be nervous
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            No shoes, no shirt, and I still get service
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Girl look at that body (x3)
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        <uitest:badRenderer skipAfterRender="true">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            <ui:scroller ruau:id="missingAfterRender">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:                <p>I haz no afterRender</p>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:                <p>and should not have a scroller instance created for me!</p>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        </uitest:badRenderer>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        <ui:scroller ruau:id="rubberbanding">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Some short content that should rubberband.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        <ui:scroller ruau:id="rubberbandingBecauseMissingRefresh">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Some long content that rubberbands because of a missing call to refresh after container resized.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            I let it fall, my heart
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And as it fell, you rose to claim it
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            It was dark and I was over
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Until you kissed my lips and you saved me
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            My hands, they were strong, but my knees were far too weak
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            To stand in your arms without falling to your feet
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But there's a side to you that I never knew, never knew
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            All the things you'd say, they were never true, never true
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And the games you'd play, you would always win, always win
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But I set fire to the rain
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Watched it pour as I touched your face
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            'Cause I heard it screaming out your name, your name
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            When laying with you I could stay there
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            You and me together, nothing is better
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            'Cause there's a side to you that I never knew, never knew
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            All the things you'd say, they were never true, never true
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And the games you's play, you would always win, always win
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But I set fire to the rain
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Watched it pour as I touched your face
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        <ui:scroller ruau:id="pullToRefresh" onPullToRefresh="{!c.replaceBodyContent}">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            This is pull-to-refresh enabled.  That means my content height is bigger
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            than my scroller height, but don't call me an invalid.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <!--Manual test Case for W-1482909-->
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:     <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            <ui:inputTextArea ruau:id="inTextArea" value="{!m.textAreaText}">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            </ui:inputTextArea>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <ui:button ruau:id="toTopButton" label="ScrollToTop" press="{!c.scrollToTop}" />
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <ui:button ruau:id="toBotButton" label="ScrollToBottom" press="{!c.scrollToBottom}" />
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <ui:button ruau:id="toStepButton" label="ScrollRelative" press="{!c.scrollDown}" />
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <ui:button ruau:id="toStepUpButton" label="ScrollRelative" press="{!c.scrollUp}" />
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:    <div class="test">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:        <ui:scroller ruau:id="scrollToYTest" canShowMore="true" onPullToRefresh="{!c.replaceBodyContent}" onPullToShowMore="{!c.replaceBodyContent}">
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            I let it fall, my heart
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And as it fell, you rose to claim it
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            It was dark and I was over
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Until you kissed my lips and you saved me
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            My hands, they were strong, but my knees were far too weak
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            To stand in your arms without falling to your feet
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But there's a side to you that I never knew, never knew
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            All the things you'd say, they were never true, never true
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And the games you'd play, you would always win, always win
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But I set fire to the rain
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Watched it pour as I touched your face
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            'Cause I heard it screaming out your name, your name
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            When laying with you I could stay there
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            You and me together, nothing is better
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            'Cause there's a side to you that I never knew, never knew
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            All the things you'd say, they were never true, never true
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            And the games you's play, you would always win, always win
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            But I set fire to the rain
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            Watched it pour as I touched your face
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:            <ui:button label="ScrollToTop" press="{!c.scrollToTop}"/>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    replaceBodyContent : function(cmp, event){
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	var scrollEvt = cmp.find("scrollToYTest").getEvent("scrollTo");  	
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	helper.handleScrollTo(scrollEvt, "top", 0);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	var scrollEvt = cmp.find("scrollToYTest").getEvent("scrollTo");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	helper.handleScrollTo(scrollEvt, "bottom", 0);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	var scrollEvt = cmp.find("scrollToYTest").getEvent("scrollBy");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	helper.handleScrollBy(scrollEvt, 15, 15, 0);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	var scrollEvt = cmp.find("scrollToYTest").getEvent("scrollBy");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	helper.handleScrollBy(scrollEvt, -15, -15, 0);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    handleScrollToBottomUpdate : function (cmp) {
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestController.js:    	var count = cmp.get("v.scrollToBottomCount") + 1;
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:    testToggleCanShowMore: {
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                // Make sure the "pull to show more" div exists
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                var scrollerCmp = component.find("scrollToYTest"),
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                    pullUpDiv   = scroller.getElementsByClassName('pullToLoadMore')[0];
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                $A.test.assertNotNull(pullUpDiv, "There should be a 'pullUp' div");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                // Toggle canShowMore dynamiclly
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                scrollerCmp.set("v.canShowMore", false);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                var scrollerCmp = component.find("scrollToYTest"),
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                    pullUpDiv   = scroller.getElementsByClassName('pullToLoadMore')[0],
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                    displayNone = pullUpDiv.style.display === 'none';
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                $A.test.assertTrue(displayNone, "There should NOT be a 'pullUp' div");
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                // Toggle canShowMore again
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                scrollerCmp.set("v.canShowMore", true);
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                // "pull to show more" div should be present again
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                var scrollerCmp = component.find("scrollToYTest"),
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                    pullUpDiv   = scroller.getElementsByClassName('pullToLoadMore')[0],
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                    displayNone = pullUpDiv.style.display === 'none';
ruau/ruau/src/test/mokponents/uitest/scroller_Test/scroller_TestTest.js:                $A.test.assertFalse(displayNone, "There should be a 'pullUp' div");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    <ui:outputMultiSelect  value='{!m.string}' ruau:id='String' />
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    <ui:outputMultiSelect  value='{!m.stringArray}' ruau:id='StringArray' />
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    <ui:outputMultiSelect  value='{!m.stringList}' ruau:id='StringList' />
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:    <ui:outputMultiSelect  value='{!m.integerArray}' ruau:id='IntegerArray' />
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModel.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:     * Verify behavior when value is assigned an Java String.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:    testStringFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            var multiSelectCmp= cmp.find('String');
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertNotNull(multiSelectCmp);
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertEquals('Model', $A.test.getText(multiSelectCmp.find('span').getElement()), "Failed to display String from Java model");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:     * Verify behavior when value is assigned an Java String Array.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:    testStringArrayFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            var multiSelectCmp= cmp.find('StringArray');
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertNotNull(multiSelectCmp);
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertEquals('red; green; blue', $A.test.getText(multiSelectCmp.find('span').getElement()), "Failed to display String array from Java model");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:     * Verify behavior when value is assigned an Java String ArrayList.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:    testStringArrayListFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            var multiSelectCmp= cmp.find('StringList');
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertNotNull(multiSelectCmp);
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertEquals('one; two; three', $A.test.getText(multiSelectCmp.find('span').getElement()), "Failed to display String arraylist from Java model");
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:     * Verify behavior when value is assigned an Java Integer Array.
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:    testNonStringArrayListFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            var multiSelectCmp= cmp.find('IntegerArray');
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertNotNull(multiSelectCmp);
ruau/ruau/src/test/mokponents/uitest/outputMultiSelect_JavaModel/outputMultiSelect_JavaModelTest.js:            ruau.test.assertEquals('123; 999; 666', $A.test.getText(multiSelectCmp.find('span').getElement()), "Failed to display String arraylist from Java model");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testDefaultOveflowProperty:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var uiBlock = cmp.find("overflowHidden").getElement();
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("hidden", $A.test.getStyle(uiBlock,'overflow'), "Default Css 'overflow' property for ui:block should be hidden");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var uiBlock = cmp.find("overflowVisible").getElement();
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("visible", $A.test.getStyle(uiBlock,'overflow'), "Css 'overflow' property for ui:block should be overridden to visible");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testDefaultBlockTag:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var uiBlock = cmp.find("overflowHidden").getElement();
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertTrue($A.test.isInstanceOfDivElement(uiBlock), "Default tag for ui:block should be div");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testOverrideDefaultBlockTag:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var uiBlock = cmp.find("overflowVisible").getElement();
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertTrue($A.test.isInstanceOfSpanElement(uiBlock), "Tag for ui:block should be span");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	 * In IE7/8 cant use object.sytle.float need to use object.sytle.styleFloat
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testLeftBlockFacet:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var leftDiv = $A.test.getElementByClass("bLeft")[0];
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("left", $A.test.getStyle(leftDiv,'float'), "Css 'float' property for leftblock should be left");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	 * In IE7/8 cant use object.sytle.float need to use object.sytle.styleFloat
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testLeftBlockFacetInIE:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var leftDiv = $A.test.getElementByClass("bLeft")[0];
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("left", $A.test.getStyle(leftDiv,'styleFloat'), "Css 'float' property for leftblock should be left");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	 * In IE7/8 cant use object.sytle.float need to use object.sytle.styleFloat
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testRightBlockFacet:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var rightDiv = $A.test.getElementByClass("bRight")[0];
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("right", $A.test.getStyle(rightDiv,'float'), "Css 'float' property for rightblock should be right");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	 * In IE7/8 cant use object.sytle.float need to use object.sytle.styleFloat
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:	testRightBlockFacetInIE:{
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			var leftDiv = $A.test.getElementByClass("bRight")[0];
ruau/ruau/src/test/mokponents/uitest/block_Test/block_TestTest.js:			$A.test.assertEquals("right", $A.test.getStyle(leftDiv,'styleFloat'), "Css 'float' property for leftblock should be left");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:	<ui:block ruau:id="overflowHidden">
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:		 <ruau:set attribute="left">
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:		 </ruau:set>
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:		 <ruau:set attribute="right">
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:		 </ruau:set>
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:	<ui:block ruau:id="overflowVisible" overflow="true" tag="span">
ruau/ruau/src/test/mokponents/uitest/block_Test/block_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        var cmpType = component.get("v.cmpType");
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        var inputCmpValue = component.find("inputValue").get("v.value");
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        var a = component.get("c.echo" + cmpType);
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        a.setParams({
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:            inVar : inputCmpValue
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        a.setCallback(component, function(action){
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:            var retValue;
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:            if (action.getState() === "SUCCESS") {
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:                retValue = action.getReturnValue();
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:                retValue = action.getError().message;
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:            component.find("outputValue").set("v.value", retValue);
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_TestController.js:        $A.enqueueAction(a);
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:<ruau:component controller="java://org.ruauframework.impl.java.controller.JavaTestController" model="java://org.ruauframework.impl.java.model.TestJavaModel">
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    <ruau:attribute name="cmpType" type="string" default="Decimal" />
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    <ruau:attribute name="ref" type="Object" />
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    <ui:inputNumber ruau:id="inputValue" value="{!m.decimal}" step="0.001" updateOn="keyup"/> <!-- updateOn=keyup necessary for ipad automation. Webdriver does not handle updateOn=change well. -->
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    <ui:button label="submit" press="{!c.submit}"/>
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:    Submitted Value is: <ui:outputText ruau:id="outputValue" value=""/>
ruau/ruau/src/test/mokponents/uitest/inputLocalizedNumber_Test/inputLocalizedNumber_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:     * Verify that outputText can accept Object from java model and handle it.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:    testObjectValueFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            var testCmp = cmp.find('myComp1');
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Failed to handle Object from Java model");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:     * Verify that outputText can accept Boolean from java model and handle it.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:    testBooleanValueFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            var testCmp = cmp.find('myComp2');
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Failed to handle Text from Java model");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:     * Verify that outputText can accept String from java model and display it.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:    testStringValueFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            var testCmp = cmp.find('myComp3');
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertEquals('Model', $A.test.getText(testCmp.find('span').getElement()), "Failed to display String from Java model");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:     * Verify that outputText can accept Long from java model and display it.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:    testLongValueFromJavaModel:{
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            var testCmp = cmp.find('myComp4');
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModelTest.js:            ruau.test.assertEquals('123456789123456780', $A.test.getText(testCmp.find('span').getElement()), "Failed to display Long from Java model");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    <ui:outputText value='{!m.objectNull}' ruau:id='myComp1'/> <br/>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    <ui:outputText value='{!m.booleanTrue}' ruau:id='myComp2'/> <br/>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    <ui:outputText value='{!m.text}' ruau:id='myComp3'/> <br/>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:    <ui:outputText value='{!m.number}' ruau:id='myComp4'/>
ruau/ruau/src/test/mokponents/uitest/outputText_JavaModel/outputText_JavaModel.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js:        //update the common location token
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js:        cmp.set("v.locationToken",fruit);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js:        if(fruit == "Orange") {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js:            //update token for Orange
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeHelper.js:            cmp.set("v.locationTokenOrange",cmp.get("v.locationTokenOrange")+"Orange");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:    clickPeach : function (cmp, evt, helper) {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        helper.clickFruit(cmp,"Peach");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:    clickBanana : function(cmp,evt,helper) {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        helper.clickFruit(cmp,"Banana");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:    clickOrange : function(cmp,evt,helper) {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        helper.clickFruit(cmp,"Orange");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:    locationChanged: function(cmp, evt) {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        var fruit = cmp.get("v.locationToken");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        if(fruit === "Peach") {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:            cmp.set("v.locationChangeCountPeach", cmp.get("v.locationChangeCountPeach") + 1);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        //increase common counter
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeController.js:        cmp.set("v.locationChangeCount", cmp.get("v.locationChangeCount") + 1);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:    sanityCheck: function(cmp) {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:        // locationChangeCount is 1 not 0 because Ruue sets first history on init
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:        $A.test.addWaitForWithFailureMessage(1,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                "location Change event is fired once when load the app"
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:        this.sanityCheck(cmp);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * Previously, when a new handler is attached to locationChange, old handler was not removed, this results in 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * multiple click event handlers for location change were applied when component was rerendered.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * Only applies to anchors with href starting with "#"
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * This is really testing htmlHelper.js when it sets up FastClick handling
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:    testHashValueChangeInLocationChangeHandler:{
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    //re-render won't trigger locationChange, previously, we didn't clean up old handler attached to 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    //fastClick event, reRender would make several duplicate handler and attach them all.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    var urlCmpPeach = cmp.find('hashLinkP'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    urlElPeach = urlCmpPeach.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.rerender(urlCmpPeach);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.rerender(urlCmpPeach);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.rerender(urlCmpPeach);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.assertEquals(1,cmp.get("v.locationChangeCount"),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                            "locationChange event should not fired during rerender");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // Click Peach first time,its url has value="{!'#' + v.locationChangeCount}"
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // we change locationChangeCount in locationChange handler
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // locationChange event is fired once
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // if multiple duplicate location change handlers were applied,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // location change count would increase exponentially instead of + 1
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    var urlCmpPeach = cmp.find('hashLinkP'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    urlElPeach = urlCmpPeach.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.clickOrTouch(urlElPeach);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                	var urlCmpPeach = cmp.find('hashLinkP'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    urlElPeach = urlCmpPeach.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.addWaitForWithFailureMessage(1,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                            "clickCount should in crease after clicking on Peach",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                $A.test.addWaitForWithFailureMessage(2, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "locationChangeCount should increase after clicking on Peach");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                $A.test.addWaitForWithFailureMessage(1, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        function() { return cmp.get("v.locationChangeCountPeach"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "locationChangeCountPeach should increase after clicking on Peach");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    href = urlElPeach.getAttribute('href');
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    var locationChangeCountPeach = cmp.get("v.locationChangeCountPeach");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.assertTrue(
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                       href == "javascript:void(0);" || href == "javascript:void(0/*#" + locationChangeCountPeach +"*/);",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                       "href attribute not correct"
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // Click Peach second time, location change event is fired again
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // if multiple duplicate location change handlers were applied,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    // location change count would increase exponentially instead of + 1
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    var urlCmpPeach = cmp.find('hashLinkP'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    urlElPeach = urlCmpPeach.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.clickOrTouch(urlElPeach);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.addWaitForWithFailureMessage(2,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                            "clickCount should increase after clicking on Peach again",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                $A.test.addWaitForWithFailureMessage(3, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "locationChangeCount should increase after clicking on Peach again");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                $A.test.addWaitForWithFailureMessage(2, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        function() { return cmp.get("v.locationChangeCountPeach"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "locationChangeCountPeach should increase after clicking on Peach again");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * this is disabled for : W-2317160
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * I think the value of outputURL cannot be changed BEFORE locationChange event is fired, looks like
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * our handler is attached to the "exact" outputURL, change in value will loose the handler. 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * that's why if we don't change orange link's value, click after first will trigger locationChange
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * we do create a new HtmlAttribute everytime value changes, not 'reusing' the old one.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:    _testHashValueChangeInClickHandler:{
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        //Click Orange first time,its url has value="{!'#' + v.locationTokenOrange}"
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        // we change locationToken in click event handler
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        // locationChange event DOES NOT fire
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        var urlCmpOrange = cmp.find('hashLinkO'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        urlElOrange = urlCmpOrange.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.clickOrTouch(urlElOrange);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.addWaitForWithFailureMessage(1, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                "clickCount should increase after clicking on Orange at the first time",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                    $A.test.assertEquals(2,cmp.get("v.locationChangeCount"),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            "locationChange event doesn't fire at the first time we click Orange");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        //Click Orange Again, locationChange event doesn't fire
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        var urlCmpOrange = cmp.find('hashLinkO'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        urlElOrange = urlCmpOrange.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.clickOrTouch(urlElOrange);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.addWaitForWithFailureMessage(2, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                "clickCount should increase after clicking on Orange Again",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                    $A.test.assertEquals(3,cmp.get("v.locationChangeCount"),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            "locationChange event should fire after clicking Orange again");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:     * W-2322327: test disable for IE8 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:    testConstHashValue : {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        //Click Apple,its url has value="#APPLE", locationChange is fired
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        var urlCmpApple = cmp.find('hashLinkA'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.addWaitForWithFailureMessage(1,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                "click count should increase after clicking on Apple",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                    $A.test.addWaitForWithFailureMessage(2, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "locationChangeCount should increase after clicking on Apple");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        //Click Apple AGAIN, location doesn't really change,but locationChange event is fired anyway. 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        var urlCmpApple = cmp.find('hashLinkA'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.addWaitForWithFailureMessage(2,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                "click count should increase after clicking on Apple Again",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                    $A.test.addWaitForWithFailureMessage(3, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            "locationChangeCount should increase after clicking on Apple Again");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        //Click Apple AGAIN, location doesn't really change,but locationChange event is fired anyway. 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        var urlCmpApple = cmp.find('hashLinkA'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                        $A.test.addWaitForWithFailureMessage(3,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                "click count should increase after clicking on Apple 3rd time",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                    $A.test.addWaitForWithFailureMessage(4, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            function() { return cmp.get("v.locationChangeCount"); }, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                            "locationChangeCount should increase after clicking on Apple 3nd time");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:    testBrokenHashValue : {
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                     //Click Banana,its url has value="{!'#' + BANANA}", location change event doesn't fire
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    var urlCmpBanana = cmp.find('hashLinkB'),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    urlElBanana = urlCmpBanana.getElement();
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.clickOrTouch(urlElBanana);
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                    $A.test.addWaitForWithFailureMessage(1, 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                            "clickCount should increase after clicking on Banana",
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                $A.test.assertEquals(1,cmp.get("v.locationChangeCount"),
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChangeTest.js:                                        "Location Event should not fire when clicking on broken outputURL Banana");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:<!-- this is for testing outputURL with hash(#) in its value , it will trigger locationChange event when clicking --> 
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:<ruau:application locationChangeEvent="ruautest:locationChange">
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:attribute name="locationChangeCountPeach" type="Integer" default="0"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:attribute name="locationChangeCount" type="Integer" default="0"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:attribute name="locationTokenOrange" type="String" default="EMPTY"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:attribute name="locationToken" type="String" default="EMPTY2"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:attribute name="clickCount" type="Integer" default="0"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ruau:handler event="ruautest:locationChange" action="{!c.locationChanged}"/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <div>location change count: {!v.locationChangeCount}</div>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <div>location change count Peach: {!v.locationChangeCountPeach}</div>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <div>location token: {!v.locationToken}</div>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <div>location token Orange: {!v.locationTokenOrange}</div>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <!-- value with hash, won't change -->
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ui:outputURL value="#APPLE" label="hashLinkApple" ruau:id="hashLinkA" linkClick="{!c.clickApple}"/><br/><br/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <!-- value with hash in a broken way, won't change -->
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ui:outputURL value="{!'#' + BANANA}" label="hashLinkBanana" ruau:id="hashLinkB" linkClick="{!c.clickBanana}"/><br/><br/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <!-- value with hash, change with locationToken in click handler-->
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ui:outputURL value="{!'#' + v.locationTokenOrange}" label="hashLinkOrange" ruau:id="hashLinkO" linkClick="{!c.clickOrange}"/><br/><br/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <!-- value with hash, change with locationChangeCount in locationChanged handler-->
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:    <ui:outputURL value="{!'#' + v.locationChangeCountPeach}" label="hashLinkPeach" ruau:id="hashLinkP" linkClick="{!c.clickPeach}"/><br/><br/>
ruau/ruau/src/test/mokponents/uitest/outputURL_LocationChange/outputURL_LocationChange.app:</ruau:application>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputCheckBox Not disabled checked " /><ui:inputCheckbox disabled="false" value="true"/>  <br/>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputCheckBox Not disabled or checked " /><ui:inputCheckbox disabled="false" value="false"/> <br/> 
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputCheckBox disabled and checked " /><ui:inputCheckbox disabled="true" value="true"/>  <br/>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputCheckBox disabled and not checked " /><ui:inputCheckbox disabled="true" value="false"/> <br/> 
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputText focused " /><ui:inputText ruau:id="inputTextBoxFocusable"/><br/> 
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputText not focused " /><ui:inputText/><br/> 
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputSearch " /><ui:inputSearch/> <br/>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputSearch with clear " /><ui:inputSearch value="clear" showClear="true"/> <br/>  
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:	<ui:label label="ui:inputDefaultError " /><ui:inputDefaultError value="error1, error2, error3"/> <br/> 			
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTestRenderer.js:    afterRender : function(cmp){
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTestRenderer.js:	cmp.find("inputTextBoxFocusable").getElement().focus();
ruau/ruau/src/test/mokponents/uitest/input_themeingTest/input_themeingTestRenderer.js:	cmp.find("inputTextBoxFocusable").getElement().select();
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    Copyright (C) 2012 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:<ruau:component extends="ui:carousel">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:	<ruau:handler name="loadPage" action="{!c.loadPage}"/>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:	<ruau:set attribute="spinner">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:		<ui:spinner ruau:id="testSpinner" isVisible="false"/>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		<ui:carouselPage ruau:id="p1">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 			page 1
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		<ui:carouselPage ruau:id="p2">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 			page 2
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		<ui:carouselPage ruau:id="p3">
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 			page 3
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * Licensed under the Apache License, Version 2.0 (the "License"); you may not
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * use this file except in compliance with the License. You may obtain a copy of
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * the License at
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js: * License for the specific language governing permissions and limitations under
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js:	loadPage : function(cmp, evt, helper) {
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestController.js:		helper.showLoadingIndicator(cmp.getSuper());
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: 	testCarouselSpinnerComponent : {
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:			var spinnerCmp = cmp.find("testSpinner");
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(spinnerCmp), "Spinner component was not set properly");
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:     * Verify spinner appears then disappears.
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:    testCarouselSpinnerAppearsDisappears : {
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: 			// spinner appears
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js: 			$A.test.addWaitFor("false", function() {
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:				var elm = cmp.find("testSpinner").getElement();
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:				return $A.util.hasClass(elm,"hideEl").toString();
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:                        var helper = cmp.getDef().getHelper();
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:                        helper.hideLoadingIndicator(cmp.getSuper());
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:			$A.test.addWaitFor("true", function() {
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:				var elm = cmp.find("testSpinner").getElement();
ruau/ruau/src/test/mokponents/uitest/carousel_SpinnerTest/carousel_SpinnerTestTest.js:				return $A.util.hasClass(elm,"hideEl").toString();
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    <ui:message title="Alert" closable="true">
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:        The sky is falling.  <a href="javascript:void(0);">Link</a>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    </ui:message>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    <ui:message title="Alert" severity="error">
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:        The sky is falling.  <a href="javascript:void(0);">Link</a>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    </ui:message>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    <ui:message title="Warn" severity="warning">
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:        Keep doing that and you will break things.  <a href="javascript:void(0);">Link</a>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    </ui:message>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    <ui:message title="Confirmation" severity="confirm">
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:        Changes to your account were successfully processed.  <a href="javascript:void(0);">Link</a>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    </ui:message>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    <ui:message title="Information" severity="info">
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:        The sky is blue.  <a href="javascript:void(0);">Link</a>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:    </ui:message>
ruau/ruau/src/test/mokponents/uitest/messagedemo/messageDemo.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicRenderer.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:	 * Test case for ui:scroller does not react to update size events 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:	 * and properly resize itself when "enabled" is false
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:	testReEnableScrollerDynamically: {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:            	   	//this.setDefaultRuueRenderedBy(cmp);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:            	   	this.verifyScrollerPresentAndEnabled(cmp, true);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:            	 	cmp.set("v.enabled", false);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:            	   this.verifyScrollerPresentAndEnabled(cmp, false);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:           	 	   cmp.set("v.enabled", true);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:           	  	//scroller instance should be present
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:            	   this.verifyScrollerPresentAndEnabled(cmp, true);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:    verifyScrollerPresentAndEnabled : function(cmp, isEnabled)	{
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:    	var scrollerCmp = cmp.find("test-scroller"),
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     	scrollerCmpInstance = scrollerCmp._scroller,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     	data_ruau_rendered_by = $A.util.getElementAttributeValue(scrollerCmpInstance.wrapper, "data-ruau-rendered-by"),
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:        isScrollerEnabled    = scrollerCmpInstance.enabled;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     	$A.test.assertNotUndefinedOrNull(scrollerCmpInstance, "Didn't find an scroller instance");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     	if(isEnabled){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     		$A.test.assertTrue(isScrollerEnabled, "Scroll functionality should be enabled");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_BasicTest.js:     		$A.test.assertFalse(isScrollerEnabled, "Scroll functionality should be enabled be disable");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:<ruau:component
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:	controller="java://org.ruauframework.component.ui.UIScrollerDataProvider"
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/> 	
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			margin: 0;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			padding: 0;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:	<div id="header" class="common">New Ruue Scroller</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:	<ruau:attribute name="enabled" default="true" type="Boolean"/>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:		<ui:scroller class="scrollWrapper" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onPullToRefresh="{!c.fetchDataPTR}" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onPullToShowMore="{!c.fetchDataPTL}" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onBeforeScrollStart="{!c.beforeScrollStartHandler}" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onScrollStart="{!c.scrollStartHandler}" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onScrollMove="{!c.scrollMoveHandler}" 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			onScrollEnd="{!c.scrollEndHandler}"  
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:			ruau:id="test-scroller" showScrollbars="true" enabled="{!v.enabled}">
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r1">Pretty row 1</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r2">Pretty row 2</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r3">Pretty row 3</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r4">Pretty row 4</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r5">Pretty row 5</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r6">Pretty row 6</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r7">Pretty row 7</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r8">Pretty row 8</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r9">Pretty row 9</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r10">Pretty row 10</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r11">Pretty row 11</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r12">Pretty row 12</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r13">Pretty row 13</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r14">Pretty row 14</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r15">Pretty row 15</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r16">Pretty row 16</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r17">Pretty row 17</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r18">Pretty row 18</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r19">Pretty row 19</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r20">Pretty row 20</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r21">Pretty row 21</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r22">Pretty row 22</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r23">Pretty row 23</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r24">Pretty row 24</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r25">Pretty row 25</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r26">Pretty row 26</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r27">Pretty row 27</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r28">Pretty row 28</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r29">Pretty row 29</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r30">Pretty row 30</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r31">Pretty row 31</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r32">Pretty row 32</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r33">Pretty row 33</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r34">Pretty row 34</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r35">Pretty row 35</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r36">Pretty row 36</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r37">Pretty row 37</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r38">Pretty row 38</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r39">Pretty row 39</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r40">Pretty row 40</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r41">Pretty row 41</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r42">Pretty row 42</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r43">Pretty row 43</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r44">Pretty row 44</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r45">Pretty row 45</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r46">Pretty row 46</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r47">Pretty row 47</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r48">Pretty row 48</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r49">Pretty row 49</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r50">Pretty row 50</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r51">Pretty row 51</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r52">Pretty row 52</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r53">Pretty row 53</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r54">Pretty row 54</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r55">Pretty row 55</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r56">Pretty row 56</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r57">Pretty row 57</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r58">Pretty row 58</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r59">Pretty row 59</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r60">Pretty row 60</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r61">Pretty row 61</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r62">Pretty row 62</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r63">Pretty row 63</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r64">Pretty row 64</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r65">Pretty row 65</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r66">Pretty row 66</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r67">Pretty row 67</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r68">Pretty row 68</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r69">Pretty row 69</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r70">Pretty row 70</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r71">Pretty row 71</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r72">Pretty row 72</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r73">Pretty row 73</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r74">Pretty row 74</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r75">Pretty row 75</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r76">Pretty row 76</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r77">Pretty row 77</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r78">Pretty row 78</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r79">Pretty row 79</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r80">Pretty row 80</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r81">Pretty row 81</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r82">Pretty row 82</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r83">Pretty row 83</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r84">Pretty row 84</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r85">Pretty row 85</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r86">Pretty row 86</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r87">Pretty row 87</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r88">Pretty row 88</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r89">Pretty row 89</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r90">Pretty row 90</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r91">Pretty row 91</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r92">Pretty row 92</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r93">Pretty row 93</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r94">Pretty row 94</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r95">Pretty row 95</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r96">Pretty row 96</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r97">Pretty row 97</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r98">Pretty row 98</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r99">Pretty row 99</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:				<div class="item" id="r100">Pretty row 100</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:	<div id="footer" class="common">This is a footer</div>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp: <span id="beforeScrollStartHandlerCalled">0</span>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp: <span id="scrollStartHandlerCalled">0</span>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp: <span id="scrollMoveHandlerCalled">0</span>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp: <span id="scrollEndHandlerCalled">0</span>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:	makeDOM : function(resultSet, cssClassName){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:		var dom = [],
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:		for(var i in resultSet){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:			divItem = document.createElement('div');
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:			divItem.textContent = resultSet[i].label;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:			divItem.id = resultSet[i].value + cssClassName;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicHelper.js:			divItem.className = "item " + cssClassName;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:		document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    fetchDataPTR : function(component, callback, helper) {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        var result,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        	act = component.get("c.getItemsPTR"),
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        	actionCallback = function(action){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            	if (action.getState() === "SUCCESS") {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		result = action.getReturnValue();
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		dom = helper.makeDOM(result, "onPTR");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		callback(null, dom);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:                    $A.log("Fail: " + action.getError()[0].message);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        act.setParams({"size":2});
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        act.setCallback(component, actionCallback);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        $A.enqueueAction(act);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    fetchDataPTL : function(component, callback, helper) {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        var result,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        	act = component.get("c.getItemsPTL"),
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        	actionCallback = function(action){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            	if (action.getState() === "SUCCESS") {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		result = action.getReturnValue();
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		dom = helper.makeDOM(result, "onPTL");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:            		callback(null, dom);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:                    $A.log("Fail: " + action.getError()[0].message);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        act.setParams({"size":4});
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        act.setCallback(component, actionCallback);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:        $A.enqueueAction(act);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    beforeScrollStartHandler: function(component, event, helper){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	var span = document.getElementById('beforeScrollStartHandlerCalled');
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	if(span.textContent.trim() === "0"){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    		span.textContent = "1";
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    scrollStartHandler: function(component, event, helper){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	var span = document.getElementById('scrollStartHandlerCalled');
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	if(span.textContent.trim() === "0"){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    		span.textContent = "1";
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    scrollMoveHandler: function(component, event, helper){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	var span = document.getElementById('scrollMoveHandlerCalled');
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	if(span.textContent.trim() === "0"){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    		span.textContent = "1";
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    scrollEndHandler: function(component, event, helper){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	var span = document.getElementById('scrollEndHandlerCalled');
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    	if(span.textContent.trim() === "0"){
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basicController.js:    		span.textContent = "1";
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:.THIS#header {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-color:#d51875;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-webkit-gradient(linear, 0 0, 0 100%, color-stop(0, #fe96c9), color-stop(0.05, #d51875), color-stop(1, #7b0a2e));
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-moz-linear-gradient(top, #fe96c9, #d51875 5%, #7b0a2e);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-o-linear-gradient(top, #fe96c9, #d51875 5%, #7b0a2e);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-color:#222;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-webkit-gradient(linear, 0 0, 0 100%, color-stop(0, #999), color-stop(0.02, #666), color-stop(1, #222));
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-moz-linear-gradient(top, #999, #666 2%, #222);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-image:-o-linear-gradient(top, #999, #666 2%, #222);
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	position:absolute; z-index:2;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	padding: 0;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	text-align:center;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:.THIS.scrollWrapper {
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	position:absolute; 
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background:#aaa;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	height: auto;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	padding:0 10px;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-color:#fafafa;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	padding:0;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	margin:0;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	text-align:left;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	padding:0 10px;
ruau/ruau/src/test/mokponents/uitest/scroller_basic/scroller_basic.css:	background-color:#fafafa;
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueString", "yup");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueBoolean", true);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueString", "yup");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueBoolean", true);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueString", "nope");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestController.js:        cmp.set("v.myValueBoolean", false);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	 * Test to verify radioItems works when interacting with attribute value directly
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	owner:"ronak.shah",
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	testToggleRadioMenu:{
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				var defaultStringValue = this.getValue(cmp, "String");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.toggleRadio(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				booleanValue = this.getValue(cmp, "Boolean");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:				this.verifyInputRadioButton(cmp, booleanValue);
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	 * Get value for cmp attribute
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    getValue: function(cmp, attribute){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	var exp = "v.myValue" + attribute;
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:     * Toggle radio button by firing press event
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    toggleRadio: function(cmp, booleanValue){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	if(booleanValue){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    		var nopeButton = cmp.find("nope");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    		this.pressButtonAndVerify(cmp, nopeButton, booleanValue)
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    		var yupButton = cmp.find("yup");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:     * Firing the event and verify the attribute is set correctly
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    pressButtonAndVerify: function(cmp, buttonToPress, booleanValue){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	    $A.test.addWaitForWithFailureMessage(!booleanValue, function(){return cmp.get("v.myValueBoolean");}, "Boolean value should be changed to false after button was pressed");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	 * Verify inputRadio button are set correctly
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	verifyInputRadioButton: function(cmp, booleanValue){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:		var inputRadioYupWithStringExp = this.getRadioButtonElement(cmp, "expYup");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	var inputRadioYupWithBooleanExp = this.getRadioButtonElement(cmp, "booleanYup");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	var inputRadioNopeWithStringExp = this.getRadioButtonElement(cmp, "expNope");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	var inputRadioNopeWithBooleanExp = this.getRadioButtonElement(cmp, "booleanNope");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	if(booleanValue){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:        	ruau.test.assertTrue(inputRadioYupWithStringExp.checked, "Yup Radio Element with value Expression should be checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertTrue(inputRadioYupWithBooleanExp.checked, "Yup Radio Element with boolean Expression should be checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertFalse(inputRadioNopeWithStringExp.checked, "Nope Radio Element with value Expression should be un-checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertFalse(inputRadioNopeWithBooleanExp.checked, "Nope Radio Element with boolean Expression should be un-checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    		ruau.test.assertFalse(inputRadioYupWithStringExp.checked, "Yup Radio Element with value Expression should be un-checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertFalse(inputRadioYupWithBooleanExp.checked, "Yup Radio Element with boolean Expression should be un-checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertTrue(inputRadioNopeWithStringExp.checked, "Nope Radio Element with value Expression should be checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:	        ruau.test.assertTrue(inputRadioNopeWithBooleanExp.checked, "Nope Radio Element with boolean Expression should be checked");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:     * get inputRadio button given localId
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    getRadioButtonElement: function(cmp, cmpLocalId){
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_TestTest.js:    	return cmp.find(cmpLocalId).find("radio").getElement();
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp: <ruau:component description="Radio buttons not setting correctly when the value they listen to is set programatically">
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.onInit}"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ruau:attribute name="myValueString" type="String" />
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ruau:attribute name="myValueBoolean" type="Boolean" />
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:button ruau:id="yup" press="{!c.onYup}" label="Yup"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:button ruau:id="nope" press="{!c.onNope}" label="Nope"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:inputRadio ruau:id="expYup" name="myValueStringGroup" text="yup" value="{!equals(v.myValueString, 'yup')}"
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:                                   label="Yup (String)" labelPosition="right"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:inputRadio ruau:id="expNope" name="myValueStringGroup" text="nope" value="{!equals(v.myValueString, 'nope')}"
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:                                   label="Nope (String)" labelPosition="right"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:inputRadio ruau:id="booleanYup" name="myValueBooleanGroup" text="true" value="{!v.myValueBoolean}"
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:                                   label="Yup (Boolean)" labelPosition="right"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    <ui:inputRadio ruau:id="booleanNope" name="myValueBooleanGroup" text="false" value="{!!v.myValueBoolean}"
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:                                   label="Nope (Boolean)" labelPosition="right"/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    myValueString: {!v.myValueString}<br/>
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp:    myValueBoolean: {!v.myValueBoolean}
ruau/ruau/src/test/mokponents/uitest/inputRadio_Test/inputRadio_Test.cmp: </ruau:component>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    Copyright (C) 2012 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:attribute name="isPageChangeActionCalled" type="Boolean" default="{!false}"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 	<ui:carousel ruau:id="carousel1" width="450" height="450" class="myclass">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ul ruau:id="pageItems">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-post">New Post 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-task">Task 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-opportunity">New Opportunity 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-thanks">Thank Someone 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-file">File 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-poll">Post a New Poll 1</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-p2" isDefault="{!true}">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ul ruau:id="pageItems">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-post">New Post 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-task">Task 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-opportunity">New Opportunity 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-thanks">Thank Someone 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-file">File 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-poll">Post a New Poll 2</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-pageWithLongString" title="PAGE 3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-bigImage">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ui:image src="/ruauFW/resources/ruau/images/ruauNoteDemo.png" imageType="decorative"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-mixContent">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<h1>Welcome to this page!</h1>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ul ruau:id="pageItems">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		 			<li class="pageItem"><a href="#"><span class="entity-post">Carousel Page Item</span></a></li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 				<ui:image src="/ruauFW/resources/ruau/images/hula.gif" imageType="decorative"/> This is an ui:carousel page to demo the exciting ui:carousel components. Enjoy!
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 				<p>Here are some random components</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 				<ui:inputCheckbox label="a checkbox"/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 				<ui:inputNumber label="enter a number"/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 				<ui:outputText value="hello, i'm an output text component"/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<table>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 					<td>apple</td>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 					<td>orange</td>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 					<td>orange</td>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 					<td>banana</td>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			</table>	 			
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-empty">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		<ui:carouselPage ruau:id="c1-updateOutput">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ui:button ruau:id="btnUpdateOutput" press="{!c.updateOutput}" label="update output"/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 			<ui:outputText ruau:id="output" value="i have something to say..."/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 	</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Carousel2<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carousel2" >
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<p>Press button to rerender this carousel with a new carousel that has 10 pages.<br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 					<li>One tab carousel</li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 					<li>Carousel rerendering</li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 					<li>Dynamic tab rendering</li>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:button ruau:id="btnCreatePages" press="{!c.addManyPgCarousel}" label="create pages"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Navigation on Bottom<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carouselNavBottom" width="450" height="450" pageIndicatorPosition="bottom">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cnb-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			page 1
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cnb-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			page 2
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cnb-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			page 3
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Carousel That Overrides isDefalut<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carouselDefaultOverride" width="450" height="450" title="Im A Carousel" defaultPage="3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage title="Im Page 1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 				<ui:outputText ruau:id="cdo-p1-output" value="page 1"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 				<div> long page with tons of content that it goes below page length</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 				<div>Give me a second I,</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I need to get my story straight</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>My friends are in the bathroom gettlocaling higher than the Empire State</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>My lover she’s waiting for me just across the bar</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>My seat’s been taken by some sunglasses asking 'bout a scar, and</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I know I gave it to you months ago</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>But between the drinks and subtle things</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>The holes in my apologies, you know</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I’m trying hard to take it back</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>So if by the time the bar closes</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>And you feel like falling down</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I’ll carry you home</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Now I know that I’m not</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>All that you got</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I guess that I, I just thought</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Maybe we could find new ways to fall apart</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>But our friends are back</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>So let’s raise a toast</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>‘Cause I found someone to carry me home</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Carry me home tonight (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Just carry me home tonight (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Carry me home tonight (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>Just carry me home tonight (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>The moon is on my side (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I have no reason to run (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>So will someone come and carry me home tonight (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>The angels never arrived (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>But I can hear the choir (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>So will someone come and carry me home (Nananananana)</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We are young</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>We can burn brighter than the sun</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>So if by the time the bar closes</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>And you feel like falling down</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<div>I’ll carry you home tonight</div>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage title="Im Page 2" isDefault="{!true}">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="cdo-p2-output" value="page 2"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage title="Im Page 3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="cdo-p3-output" value="page 3"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Carousel with Max Pages<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carouselMaxPages" width="450" height="450">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		<ruau:iteration items="{!m.pageList}" var="page"> 
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			<ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				{!page}
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		</ruau:iteration>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Carousel within another Carousel<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carouselInCarousel" width="450" height="450">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:		<ui:carouselPage ruau:id="cinc-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:carousel ruau:id="childCarousel-smaller" width="100" height="100">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-smaller-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #1 which is smaller <br/> Page #1</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-smaller-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #1 which is smaller <br/> Page #2</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-smaller-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #1 which is smaller <br/> Page #3</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 	</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 	<ui:carouselPage ruau:id="cinc-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:carousel ruau:id="childCarousel-sameDim" width="450" height="450">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-sameDim-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #2 which has same dimentions <br/> Page #1</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-sameDim-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #2 which has same dimentions <br/> Page #2</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-sameDim-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #2 which has same dimentions <br/> Page #3</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 	</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 	<ui:carouselPage ruau:id="cinc-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:carousel ruau:id="childCarousel-larger" width="600" height="600">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-larger-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #3 which is larger <br/> Page #1</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-larger-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #3 which is larger <br/> Page #2</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		<ui:carouselPage ruau:id="childCarousel-larger-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 			<p>Child carousel #3 which is larger <br/> Page #3</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:				</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:			</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 	</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	 </ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="carouselContinousFlow" width="450" height="450" continuousFlow="{!true}">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="ccf-p1-output" value="page 1"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="ccf-p2-output" value="page 2"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="ccf-p3-output" value="page 3"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Page Change Custom Action<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="pgChangeAction" width="450" height="450" onPageChange="{!c.changePageAction}">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<ruau:set attribute="pageComponents">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cpca-p1">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="cpca-p1-output" value="page 1"/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:button ruau:id="btnForceRefresh" press="{!c.forceRefresh}" label="refresh"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cpca-p2">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="cpca-p2-output" value="page 2"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		<ui:carouselPage ruau:id="cpca-p3">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 			<ui:outputText ruau:id="cpca-p3-output" value="page 3"/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp: 		</ui:carouselPage>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	</ruau:set>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<br/><br/>Empty Carousel<br/><br/>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:<ui:carousel ruau:id="emptyCarousel" width="450" height="450" title="EMPTY CAROUSEL">
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:	<p>This is a carousel without any carouselPages hear me roar!</p>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ui:carousel>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Verify multiple carousels can exist on same page.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testMultipleCarousels : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel1 = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(carousel1), "Did not find carousel 1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel2 = cmp.find("carousel2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(carousel2), "Did not find carousel 2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:     * Switching pages using the navigation page indicators correctly switchs page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:     * to the target page and navigation indicators are updated.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 	testSwitchPageUsingPageIndicator : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			// go to 1st page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			this.goToPageOnCarousel(cmp, "carousel1", 1, "c1-p1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var me = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			$A.test.addWaitForWithFailureMessage(true, function(){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		var page = me.getSelectedPage.apply(me, [carousel]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		return (page === pages[0]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			}, "Page 1 is not selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			this.verifyMdmPage(this.getSelectedPage(carousel), 1, "New Post 1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			this.assertNavigationIndicatorSelected(carousel, 1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			// go back
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		this.goToPageOnCarousel(cmp, "carousel1", 2, "c1-p2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var me = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var pages = me.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			$A.test.addWaitForWithFailureMessage(true, function(){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		var page = me.getSelectedPage.apply(me, [carousel]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		return (page === pages[1]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			}, "Page 2 is not selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		this.verifyMdmPage(this.getSelectedPage(carousel), 1, "New Post 2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		this.assertNavigationIndicatorSelected(carousel, 2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			// go to last page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			this.goToPageOnCarousel(cmp, "carousel1", 7, "c1-updateOutput");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var me = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var pages = me.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			$A.test.addWaitForWithFailureMessage(true, function(){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		var page = me.getSelectedPage.apply(me, [carousel]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		return (page === pages[6]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			}, "Page 7 is not selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			// are we on the right page?
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var outputCmp = pages[6].get("v.body");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			$A.test.assertFalse($A.util.isUndefinedOrNull(outputCmp), "Could not find output component");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			$A.test.assertEquals("i have something to say...", outputCmp[2].get("v.value"),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    			"Not on the last page");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		this.assertNavigationIndicatorSelected(carousel, 7);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:     * Page content of a carousel page can be dynamically updated.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    testUpdatePageContent : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            this.goToPageOnCarousel(cmp, "carousel1", 7, "c1-updateOutput");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            var page = this.getSelectedPage(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            $A.test.assertNotNull(page, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            var outputCmp = page.get("v.body");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            $A.test.assertFalse($A.util.isUndefinedOrNull(outputCmp), "Could not find output component");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            $A.test.assertEquals("i have something to say...", outputCmp[2].get("v.value"),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    			"Not on the last page");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		var btn = cmp.find("btnUpdateOutput");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		var getSelectedPage = this.getSelectedPage;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		var that = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    		$A.test.addWaitForWithFailureMessage(true, function(){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		var page = getSelectedPage.apply(that, [carousel]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		$A.test.assertNotNull(page, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		var outputCmp = page.get("v.body");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		$A.test.assertFalse($A.util.isUndefinedOrNull(outputCmp), "Could not find output component");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	    		return ("hello!" === outputCmp[2].get("v.value"))
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 			}, "Content of page was not updated");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:     * Carousel with one tab renders correctly.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 	testCarouselWithOneTab : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 		    var carousel = cmp.find("carousel2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js: 		    var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            $A.test.assertEquals(1, pages.length, "Should only see one page");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            this.assertPageSelected(pages[0], true, 1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            // TODO : @ctatlah - uncomment after jye/jhuang check in his changes regarding
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            // tab indicators displaying for single page carousel from projectone to master.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            // verify tab indicators do not display
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            //var indicatorItems = cmp.find("carousel2").find("navContainer").get("v.body")[0].find("indicatorItems");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            //$A.test.assertNull(indicatorItems.getElement(), "Should be zero tab indicators displayed");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:     *  Can use navigation indicators at the bottom of page to switch pages
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    testNavigationBarAtBottomSwitchPage : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            var carousel = cmp.find("carouselNavBottom");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:            this.goToPageOnCarousel(cmp, "carouselNavBottom", 2, "cnb-p2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Setting isDefault on a carouselPage shows that page on load.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testDefaultPage : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var expectedDefaultPage = 2;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var expectedPage = this.getPageOnCarousel(carousel, 2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			// verify second page is selected
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var waitForPageChange = this.waitForPageChange;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var that = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.addWaitFor(true, function() {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				return waitForPageChange.apply(that, [ cmp,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						"carousel1", expectedPage.getLocalId() ]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			// verify the selected page is the correct page should be page #2
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			// which has 6 carouselPageItems
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var page = this.getSelectedPage(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.verifyMdmPage(page, 1, "New Post 2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Verify the navigation indicators are displayed correctly when isDefault
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * page is set.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testDefaultPageNavigationIndicators : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var expectedDefaultPage = 2;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel = cmp.find("carousel1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertNavigationIndicatorSelected(carousel,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					expectedDefaultPage);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Carousel defaultPage attribute can override pages isDefault setting.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Verify the correct default page is loaded.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testCarouselDefaultPageOverridesPageSetting : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var expectedDefaultPage = 3;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel = cmp.find("carouselDefaultOverride");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var selectedPage = this.getPageOnCarousel(carousel,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					expectedDefaultPage);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertTrue($A.util.getBooleanValue(selectedPage.get('v.isSelected')), "Selected page should be selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertPageVisibility(selectedPage, true);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var outputCmp = selectedPage.get("v.body");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(outputCmp),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertEquals("page 3", outputCmp[0].get("v.value"),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Not on the correct page.");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertNavigationIndicatorSelected(carousel,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					expectedDefaultPage);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			// page #2 that was supposed to be default should not have selected
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var pageCmp = this.getPageOnCarousel(carousel, 2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.getBooleanValue(pageCmp.get('v.isSelected')), "Selected page should NOT be selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertPageVisibility(pageCmp, false);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Able to rerender entire carousel with new page data.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:    // TODO: W-2406307: remaining Halo test failure
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	_testRerenderCarousel : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var btn = cmp.find("btnCreatePages");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var getPagesOnCarousel = this.getPagesOnCarousel;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var that = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.addWaitForWithFailureMessage(10, function() {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						var carousel = cmp.find("carousel2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						var pages = getPagesOnCarousel
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:								.apply(that, [ carousel ]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						return pages.length;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					}, "Carousel was not rerendered");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var carousel = cmp.find("carousel2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var expectedPage = this.getPageOnCarousel(carousel, 1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// verify first page is selected
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var waitForPageChange = this.waitForPageChange;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var that = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.addWaitFor(true, function() {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						return waitForPageChange.apply(that, [ cmp,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:								"carousel2", expectedPage.getLocalId() ]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var indicators = this.getNavigationIndicators(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							.assertEquals(10, indicators.length,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:									"Carousel does not have the correct number of navigation indicators");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Carousel with 100 pages renderes correctly.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testMaxPages : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel = cmp.find("carouselMaxPages");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertEquals(100, pages.length,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Carousel does not have the correct number of pages");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var indicators = this.getNavigationIndicators(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					.assertEquals(100, indicators.length,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"Carousel does not have the correct number of navigation indicators");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Continous flow carousel has correct aria values set.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testContinousFlowAriaValues : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var carousel = cmp.find("carouselContinousFlow");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			for ( var i = 0; i < pages.length; i++) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertAriaExpandedNotDefined(pages[i].getElement());
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Able to render a component that has a carousel within a carousel.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testCarouselWithinCarousel : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var parent = cmp.find("carouselInCarousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(parent),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Did not find parent carousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var child1 = cmp.find("childCarousel-smaller");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(child1),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Did not find child carousel 1");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var child2 = cmp.find("childCarousel-sameDim");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(child2),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Did not find child carousel 2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var child3 = cmp.find("childCarousel-larger");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse($A.util.isUndefinedOrNull(child3),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Did not find child carousel 3");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * With a carousel inside another carousel able to switch pages on a child
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * carousel. All data and navigation indicators on the parent and child
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * carousel are set properly.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testCarouselWithinCarouselSwitchChildPage : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parent = cmp.find("carouselInCarousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// grab child carousel on page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parentPage = this.getSelectedPage(parent);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertNotNull(parentPage, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var child = this
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							.carouselInCarouselGetChildCarousel(parentPage);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// go to page 2 on child carousel
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.goToPageOnCarousel(cmp, "childCarousel-smaller", 2,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"childCarousel-smaller-p2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// verify on the correct page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parent = cmp.find("carouselInCarousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parentPage = this.getSelectedPage(parent);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertNotNull(parentPage, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var child = this
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							.carouselInCarouselGetChildCarousel(parentPage);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var childPage = this.getSelectedPage(child);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertNotNull(childPage, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertEquals(childPage.getLocalId(),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"childCarousel-smaller-p2",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"Expected to switch to page 2 on child carousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.assertNavigationIndicatorSelected(child, 2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.assertNavigationIndicatorSelected(parent, 1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * With a carousel inside another carousel able to switch pages on the
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * parent carousel. All data and navigation indicators on the parent and
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * child carousel are set properly.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testCarouselWithinCarouselSwitchParentPage : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parent = cmp.find("carouselInCarousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.goToPageOnCarousel(cmp, "carouselInCarousel", 2,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// verify parent carousel is on the correct page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var parent = cmp.find("carouselInCarousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var page2 = this.getSelectedPage(parent);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertNotNull(page2, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var id = page2.getLocalId();
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertEquals("cinc-p2", id,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"Expected to switch to page 2 on parent carousel");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.assertNavigationIndicatorSelected(parent, 2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// verify child carousel is on the correct page as well
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var child = this.carouselInCarouselGetChildCarousel(page2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var childPage = this.getSelectedPage(child);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertNotNull(childPage, "Page retrieved is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertEquals(childPage.getLocalId(),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"childCarousel-sameDim-p1",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"Expected to be on page 1 of child carousel")
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.assertNavigationIndicatorSelected(child, 1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Test page change action is called when action is provided and page is
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * changed
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	testCustomPageChangeAction : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					cmp.set("v.isPageChangeActionCalled", false);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					this.goToPageOnCarousel(cmp, "pgChangeAction", 2,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:									"cpca-p2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					// verify parent carousel is on the correct page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var carousel = cmp.find("pgChangeAction");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					var isPageChangeActionCalled = $A.util.getBooleanValue(cmp.get("v.isPageChangeActionCalled"));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					$A.test.assertTrue(isPageChangeActionCalled,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"Expected custom page change action to be called");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					carousel.set("v.isPageChangeActionCalled",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							"false");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	goToPageOnCarousel : function(cmp, carouselName, pageNumber, pageId) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		pageNumber--;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var carousel = cmp.find(carouselName);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var navIndicators = this.getNavigationIndicators(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var targetIndicator = navIndicators[pageNumber];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		targetIndicator.get("e.click").fire();
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var waitForPageChange = this.waitForPageChange;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var that = this;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.addWaitFor(true,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					return waitForPageChange.apply(that, [ cmp, carouselName,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							pageId ]);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	getPagesOnCarousel : function(carousel) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertFalse($A.util.isUndefinedOrNull(carousel),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"Carousel not given. Is the name of the carousel correct?");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		return carousel.get("v.pageComponents");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	getPageOnCarousel : function(carousel, pageNumber) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		pageNumber--;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		if (pageNumber >= 0 && pageNumber < pages.length) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			return pages[pageNumber];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	getSelectedPage : function(carousel) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var pages = this.getPagesOnCarousel(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		for ( var i = 0; i < pages.length; i++) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var page = pages[i];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			if (page.get("v.isSelected")) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				return page;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	getNavigationIndicators : function(carousel) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertFalse($A.util.isUndefinedOrNull(carousel),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"Carousel not given. Is the name of the carousel correct?");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var helper = carousel.getDef().getHelper();
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var indicatorCmp = helper.getPageIndicatorsComponent(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		return indicatorCmp.find("indicatorItems");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Goes through all pages and verify only one page is set to selected. Use
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * getPageSelected() and/or assertPageSelected to verify a single page.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	verifyPageSelected : function(pages, selectedPageNumber) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		for ( var i = 0; i < pages.length; i++) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			if ((selectedPageNumber - 1) === i) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertPageSelected(pages[i], true, (i + 1));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertPageSelected(pages[i], false, (i + 1));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertPageSelected : function(page, isSelected, pageNum) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertTrue($A.util.getBooleanValue(page.get('v.isSelected')),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"Selected page at " + pageNum
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							+ " should have 'selected' css");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertPageVisibility(page, true);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertAriaExpanded(page.getElement(), true);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertFalse(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:                $A.util.getBooleanValue(page.get('v.isSelected')),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					"UnSelected page at " + pageNum
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:							+ " should NOT have 'selected' css");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertPageVisibility(page, false);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			this.assertAriaExpanded(page.getElement(), false);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertAriaExpanded : function(element, value) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertEquals(value.toString(), $A.test
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				.getElementAttributeValue(element, "aria-expanded"),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"aria-expanded value was incorrect");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertAriaExpandedNotDefined : function(element) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertUndefinedOrNull(element.getAttribute("aria-expanded"),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"aria-expanded should NOT defined.");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertAriaControlDefined : function(element, isDefined, errMsg) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var actualAria = $A.test.getElementAttributeValue(element,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"aria-controls");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertNotEquals("undefined", actualAria, errMsg);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			$A.test.assertTrue(("undefined" == actualAria || "" == actualAria),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertAriaSelected : function(element, isSelected, errMsg) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var actualAria = $A.test.getElementAttributeValue(element,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"aria-selected");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertEquals(isSelected.toString(), actualAria, errMsg);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertNavigationIndicatorSelected : function(carousel, selectedIndicator) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var indicators = this.getNavigationIndicators(carousel);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var errorMsg = function(expected, actual, msg) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			return "Navigation indicator incorrect. Expected indicator #"
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					+ expected + " to be selectged but indicator #" + actual
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:					+ " was selected. " + msg;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		for ( var i = 0; i < indicators.length; i++) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			var indicatorElem = indicators[i].getElement().childNodes[0];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			if ((selectedIndicator - 1) === i) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				$A.test.assertTrue($A.util.hasClass(indicatorElem,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						"carousel-nav-item-selected"), errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1)));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertAriaControlDefined(indicatorElem, true, errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1), "Checking aria-control"));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertAriaSelected(indicatorElem, true, errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1), "Checking aria-selected"))
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				$A.test.assertFalse($A.util.hasClass(indicatorElem,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						"carousel-nav-item-selected"), errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1)));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertAriaControlDefined(indicatorElem, false, errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1), "Checking aria-control"));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				this.assertAriaSelected(indicatorElem, false, errorMsg(
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						selectedIndicator, (i + 1), "Checking aria-selected"))
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	assertPageVisibility : function(pageCmp, isVisible) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.addWaitForWithFailureMessage(isVisible, function() {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:			return $A.util.getBooleanValue(pageCmp.get('v.priv_visible'));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		}, "Selected page should be visible");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Verify the selected page is the correct MDM page. MDM pages have 6
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * carouselPageItems. In a matirx:
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * --------------------------------------------- [0] | New Post # | Task # |
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * Thank Someone # | [3] --------------------------------------------- [4] |
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	 * File # | Post a New Poll # | [5]
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	verifyMdmPage : function(page, pageItemNumber, expectedPageItemText) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				.assertNotNull(page,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:						"Verifying mdm page, page provided is null");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		pageItemNumber--;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var pageItems = page.get('v.body')[0].get('v.body');
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertEquals(6, pageItems.length,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"Incorrect page elements on MDM page.");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var pageItem = pageItems[pageItemNumber];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var actualText = $A.util.trim($A.test.getText(pageItem.getElement()));
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertEquals(expectedPageItemText, actualText,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"Contents of MDM page incorrect.");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	carouselInCarouselGetChildCarousel : function(page) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var childCarousel = page.get("v.body");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		$A.test.assertFalse($A.util.isUndefinedOrNull(childCarousel),
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				"Could not find body of carousel page");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		return childCarousel[0];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:	waitForPageChange : function(cmp, carouselName, pageId) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var c = cmp.find(carouselName);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var page = this.getSelectedPage(c);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		var selectedPageId = $A.util.isUndefinedOrNull(page) ? "" : page
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:				.getLocalId();
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestTest.js:		return (selectedPageId === pageId);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * distributed under the License is distributed on an "AS IS"BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: 	longStr : "Understanding Execution Governors and Limits%0D%0ABecause Apex runs in a multitenant environment, the Apex runtime engine strictly enforces a number of limits to ensure that runaway Apex does not monopolize shared resources. These limits, or governors, track and enforce the statistics outlined in the following table. If some Apex code ever exceeds a limit, the associated governor issues a runtime exception that cannot be handled.%0D%0AGovernor limits apply to an entire organization, as well as to specific namespaces. For example, if you install a managed package created by a salesforce.com ISV Partner from Force.com AppExchange, the components in the package belong to a namespace unique from other components in your organization. Consequently, any Apex code in that package can issue up to 150 DML statements while executing. In addition, any Apex code that is native to your organization can also issue up to 150 DML statements, meaning more than 150 DML statements might execute during a single request if code from the managed package and your native organization both execute. Conversely, if you install a package from AppExchange that is not created by a salesforce.com ISV Partner, the code from that package does not have its own separate governor limit count. Any resources it uses counts against the total for your organization. Cumulative resource messages and warning emails are also generated based on managed package namespaces as well. For more information on salesforce.com ISV Partner packages, see salesforce.com Partner Programs.%0D%0ADescription	Limit%0D%0ATotal number of SOQL queries issued1	100%0D%0ATotal number of SOQL queries issued for Batch Apex and future methods1	200%0D%0ATotal number of records retrieved by SOQL queries	50,000%0D%0ATotal number of records retrieved by Database.getQueryLocator	10,000%0D%0ATotal number of SOSL queries issued	20%0D%0ATotal number of records retrieved by a single SOSL query	2000%0D%0ATotal number of DML statements issued2	150%0D%0ATotal number of records processed as a result of DML statements, Approval.process, or database.emptyRecycleBin	10,000%0D%0ATotal number of executed code statements	200,000%0D%0ATotal number of executed code statements for Batch Apex and future methods	1,000,000%0D%0ATotal heap size3	6 MB%0D%0ATotal heap size for Batch Apex and future methods	12 MB%0D%0ATotal stack depth for any Apex invocation that recursively fires triggers due to insert, update, or delete statements4	16%0D%0AFor loop list batch size	200%0D%0ATotal number of callouts (HTTP requests or Web services calls) in a request	10%0D%0AMaximum timeout for all callouts (HTTP requests or Web services calls) in a request	120 seconds%0D%0ADefault timeout of callouts (HTTP requests or Web services calls) in a request	10 seconds%0D%0ATotal number of methods with the future annotation allowed per Apex invocation5	10%0D%0AMaximum size of callout request or response (HTTP request or Web services call)6	3 MB%0D%0ATotal number of sendEmail methods allowed	10%0D%0ATotal number of describes allowed7	100%0D%0ATotal number of classes that can be scheduled concurrently	100%0D%0ATotal number of test classes that can be queued per a 24-hour period8	The greater of 500 or 10 multiplied by the number of test classes in the organization%0D%0A 1 In a SOQL query with parent-child relationship sub-queries, each parent-child relationship counts as an additional query. These types of queries have a limit of three times the number for top-level queries. The row counts from these relationship queries contribute to the row counts of the overall code execution. ...",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestModel.js: 	pageList : ["page #1","page #2","page #3","page #4","page #5","page #6","page #7","page #8","page #9","page #10","page #11","page #12","page #13","page #14","page #15","page #16","page #17","page #18","page #19","page #20","page #21","page #22","page #23","page #24","page #25","page #26","page #27","page #28","page #29","page #30","page #31","page #32","page #33","page #34","page #35","page #36","page #37","page #38","page #39","page #40","page #41","page #42","page #43","page #44","page #45","page #46","page #47","page #48","page #49","page #50","page #51","page #52","page #53","page #54","page #55","page #56","page #57","page #58","page #59","page #60","page #61","page #62","page #63","page #64","page #65","page #66","page #67","page #68","page #69","page #70","page #71","page #72","page #73","page #74","page #75","page #76","page #77","page #78","page #79","page #80","page #81","page #82","page #83","page #84","page #85","page #86","page #87","page #88","page #89","page #90","page #91","page #92","page #93","page #94","page #95","page #96","page #97","page #98","page #99","page #100"]
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License"); you may not
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * use this file except in compliance with the License. You may obtain a copy of
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * the License at
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: * License for the specific language governing permissions and limitations under
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 	updateOutput : function(cmp) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var outOptions = {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 			out1 : "i have something to say...",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var output = cmp.find("output");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		if (output.get("v.value") == outOptions.out1){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 			output.set("v.value", outOptions.out2);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 			output.set("v.value", outOptions.out1);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 	addManyPgCarousel : function(cmp) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var carousel = cmp.find("carousel2");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var pages = [];
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		for (var i=1; i<=10; i++){
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 			var page = $A.componentService.newComponentDeprecated({
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            	"descriptor" : "markup://ui:carouselPage"
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            "attributes" : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            	"values" : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"pageModel":"",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"pageIndex":i,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"parent":[carousel],
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"priv_visible":"false",
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"priv_continuousFlow": "false"
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			var pageCmp = $A.componentService.newComponent({
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            	"descriptor" : "markup://ui:outputText"
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            "attributes" : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            	"values" : {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			            		"value" : "page #"+i
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			page.set("v.body", pageCmp);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js:			pages.push(page);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		carousel.set("v.pageComponents", pages);
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var carousel = cmp.find("pgChangeAction");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		var e = carousel.getEvent("refreshCurrentPage");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 	changePageAction : function(cmp) {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_TestController.js: 		cmp.set("v.isPageChangeActionCalled", "true");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	display: block;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	color: #a9bdd0;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	margin-right: auto;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	margin-left: auto;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	position: relative;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #1396b1;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:.THIS .entity-task {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #30ae63;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #edbd1f;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #4377bf;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	border-color: #355f9a;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:.THIS .entity-thanks {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #cd575c;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	border-color: #ba373d;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #a79272;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:.THIS .entity-label {
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	position: relative;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	display: block;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #1396b1;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #30ae63;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #edbd1f;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #a79272;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #4377bf;
ruau/ruau/src/test/mokponents/uitest/carousel_Test/carousel_Test.css:	background-color: #cd575c;
ruau/ruau/src/test/mokponents/uitest/tabset_extendsTest/tabset_extendsTest.cmp:<ruau:component extends="ui:tabset">
ruau/ruau/src/test/mokponents/uitest/tabset_extendsTest/tabset_extendsTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('inputPercentEmpty');
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', testCmp.getElement().value, "Should have displayed a blank value.");
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('inputPercentNull');
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', testCmp.getElement().value, "Should have displayed a blank value.");
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:<ruau:component model="java://org.ruauframework.impl.java.model.TestJavaModel">    
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:	<ui:inputPercent ruau:id="inputPercentEmpty" value="{!m.stringEmpty}" /> <br/> 
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:    <ui:inputPercent ruau:id="inputPercentNull" value="{!m.stringNull}" /> <br/> 
ruau/ruau/src/test/mokponents/uitest/inputPercent_FormattingWithNullOrEmptyStringTest/inputPercent_FormattingWithNullOrEmptyStringTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('outputPercentEmpty');
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Should have displayed a blank value.");
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('outputPercentNull');
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Should have displayed a blank value.");
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:<ruau:component model="java://org.ruauframework.impl.java.model.TestJavaModel">    
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:	<ui:outputPercent ruau:id="outputPercentEmpty" value="{!m.stringEmpty}" /> <br/> 
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:    <ui:outputPercent ruau:id="outputPercentNull" value="{!m.stringNull}" /> <br/> 
ruau/ruau/src/test/mokponents/uitest/outputPercent_FormattingWithNullOrEmptyStringTest/outputPercent_FormattingWithNullOrEmptyStringTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:	 * Test top level tree elements are rendered  
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:			ruau.test.assertFalse(ruau.util.isUndefinedOrNull(cmp.find("automobiles")), "Could not find 'automobiles' tree");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:			ruau.test.assertFalse(ruau.util.isUndefinedOrNull(cmp.find("planes")), "Could not find 'planes' tree");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:	 * Test nodes of trees are rendered 
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:			var treeNodeIds = ["toyota", "toyota.sedan", "toyota.coupe", "toyota.truck", "toyota.futuremodel",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"toyota.camry", "toyota.corolla", "toyota.yaris", "toyota.tacoma", "toyota.secretModel", "toyota.pod",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"tesla", "tesla.sedan", "tesla.sports", "tesla.suv",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"tesla.models", "tesla.roadster",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"ford", "ford.sedan", "ford.truck", "ford.sports",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"ford.focus", "ford.fusion", "ford.taurus", "ford.f150", "ford.superduty", "ford.mustang",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				"airbus", "airbus.a380",
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:			for (var i = 0, treeLength = treeNodeIds.length; i < treeLength; i++ ) {
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				var nodeId = treeNodeIds[i];
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:				ruau.test.assertFalse(ruau.util.isUndefinedOrNull(cmp.find(nodeId)), "Could not find '" + nodeId + "' node");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:	 * Test can expand and collapse nodes of a tree 
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:	testExpandCollapseNodesOnTree : {
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:        // TODO(W-1574768): tree/treeNode are not compatible with IE7/8
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:        	// tree 1 expand node
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:        	var toyota = cmp.find("toyota");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            ruau.test.assertFalse(toyota.get("v.expanded"), "Toyota should not be expanded");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            var elemToyota = document.getElementById("node_" + toyota.getGlobalId());
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            elemToyota.click();
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            ruau.test.assertTrue(toyota.get("v.expanded"), "Toyota should be expanded");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:			// tree 2 expand node
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            var airbus = cmp.find("airbus");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            ruau.test.assertFalse(airbus.get("v.expanded"), "Airbus should not be expanded");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            var elemAirbus = document.getElementById("node_" + airbus.getGlobalId());
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            ruau.test.assertTrue(airbus.get("v.expanded"), "Airbus should be expanded");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            // tree 1 collaspe node
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            elemToyota.click();
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_TestTest.js:            ruau.test.assertFalse(toyota.get("v.expanded"), "Toyota should not be expanded");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:	<ui:tree ruau:id="automobiles">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="toyota" title="Toyota">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="toyota.sedan" title="Sedan">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.camry" title="Camry"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.corolla" title="Corolla"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="toyota.coupe" title="Coupe">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.yaris" title="Yaris"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="toyota.futuremodel">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.secretModel"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.pod" title="Pod"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="toyota.truck" title="Truck">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="toyota.tacoma" title="Tacoma"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="tesla" title="Tesla">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="tesla.sedan" title="Sedan">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="tesla.models" title="Model-S">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:					all electric sedan
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="tesla.sports" title="Sports Car">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="tesla.roadster" title="Roadster"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="tesla.suv" title="SUV">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="ford" title="Ford">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="ford.sedan" title="Sedan">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.focus" title="Focus"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.fusion" title="Fusion"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.taurus" title="Taurus"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="ford.truck" title="Truck">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.f150" title="F-150"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.superduty" title="Super Duty"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="ford.sports" title="Sports Car">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:				<ui:treeNode ruau:id="ford.mustang" title="Mustang"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:	<ui:tree ruau:id="planes">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="boeing" title="Boeing">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="boeing.737" title="737"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="boeing.747" title="747"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="boeing.777" title="777"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="airbus" title="Airbus">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:			<ui:treeNode ruau:id="airbus.a380" title="A-380"/>
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:		<ui:treeNode ruau:id="xflight" title="X Flight">
ruau/ruau/src/test/mokponents/uitest/tree_Test/tree_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js:	load : function(cmp){
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestController.js:		cmp.find("asyncImage").get("e.load").fire();
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:	testLoad : {
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:		attributes : {'defaultSrc' : "http://actualSrc.cmp"},
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:	    	this.imageSrcCheck(cmp, "/ruauFW/resources/ruau/s.gif","Default src of ui:image and default src of imgElem are not the same");    			
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:	    	$A.test.clickOrTouch(cmp.find("loadButton").getElement());
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:	    	this.imageSrcCheck(cmp, "http://actualSrc.cmp" ,"aysnc src of ui:image and async src of imgElem are not the same");
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:	imageSrcCheck : function(cmp, expectedValue, errorMsg){
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:		var imgElem = cmp.getConcreteComponent().getElement();
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:		var src = $A.util.getElementAttributeValue(imgElem, "src");
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_TestTest.js:    	$A.test.assertEquals(expectedValue, src, errorMsg);
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:     <ruau:attribute name="defaultSrc" type="String" default=""/>
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:     <ruau:dependency resource="ui:asyncComponentLoaded" type="EVENT" />
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:     <ruau:dependency resource="ui:asyncComponentRegister" type="EVENT" />
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:     <ui:asyncImage ruau:id="asyncImage" actualImageSrc="{!v.defaultSrc}" alt="hello"/>
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:     <ui:button ruau:id="loadButton" label="Fire Load Event" press="{!c.load}"/>
ruau/ruau/src/test/mokponents/uitest/asyncImage_Test/asyncImage_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:<ruau:component extends="ui:outputDateTime">
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormat.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js:    getFormat: function(component) {
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js:	displayDateTime: function(component, displayValue) {
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js:        var outputCmp = component.getSuper().find("span");
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatHelper.js:            elem.textContent = elem.innerText = displayValue;
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js:    testFormatDateTime:{
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js:		attributes: {value : '2004-09-23T16:30:00.000Z', timezone : "GMT"},
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(cmp.getSuper().find('span').getElement()).length > 0;},function(){
ruau/ruau/src/test/mokponents/uitest/outputDateTime_OverriddenGetFormat/outputDateTime_OverriddenGetFormatTest.js:                ruau.test.assertEquals("+00:00 00:30:16 09 23 2004", $A.test.getText(cmp.getSuper().find('span').getElement()), "Format should be the one specified in the overridden method");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:<ruau:application access="unauthenticated" model="java://org.ruauframework.impl.java.model.TestJavaModel" controller="java://org.ruauframework.impl.java.controller.JavaTestController">
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ruau:attribute name="submitCount" type="integer"/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:        Submit count: <ui:outputText ruau:id="outSubmitCount" value="0"/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <div>Input Date</div>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    enter Date: <ui:inputDate ruau:id="inDate" value="{!m.dateOnly}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ui:button buttonTitle="Date" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    your Date value is: <ui:outputDate ruau:id="outDate" value="{!m.dateOnly}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <div>Input DateTime</div>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    enter DateTime: <ui:inputDateTime ruau:id="inDateTime" value="{!m.dateTimeISOString}" timezone="GMT"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ui:button buttonTitle="DateTime" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    your DateTime value is: <ui:outputDateTime ruau:id="outDateTime" value="{!m.dateTimeISOString}" timezone="GMT"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    enter Number: <ui:inputNumber ruau:id="inNumber" value="{!m.integer}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ui:button buttonTitle="Number" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    your Number value is: <ui:outputNumber ruau:id="outNumber" value="{!m.integer}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    enter Percent: <ui:inputPercent ruau:id="inPercent" value="{!m.percent}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ui:button buttonTitle="Percent" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    your Percent value is: <ui:outputPercent ruau:id="outPercent" value="{!m.percent}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    enter Currency: <span id="MyCurrency"><ui:inputCurrency ruau:id="inCurrency" value="{!m.currency}"/></span> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    <ui:button buttonTitle="Currency" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:    your Currency value is: <ui:outputCurrency ruau:id="outCurrency" value="{!m.currency}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.app:</ruau:application>
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        // calculate and save number of times submit has been clicked
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        var submitCount = component.get("v.submitCount");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        component.find("outSubmitCount").set("v.value", ++submitCount);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:    goToServer : function(controller, component, event, cmpName, inValue) {
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        var a = component.get("c.echo" + cmpName);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        a.setParams({
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:            inVar : inValue
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        a.setCallback(component, function(action){
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:            if (action.getState() === "SUCCESS") {
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                $A.log("Success!\nValue from server:");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                var retValue = action.getReturnValue();
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                $A.log(retValue);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                component.find("out" + cmpName).set("v.value", retValue);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                component.find("in" + cmpName).setValid("v.value", true);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                var cleanErrorEvent = component.find("in" + cmpName).getEvent("onClearErrors");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                cleanErrorEvent.fire();
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                $A.log("Fail: " + action.getError()[0].message);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                var inCmp = component.find("in" + cmpName);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                var errors = action.getError()
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                inCmp.setValid("v.value", false);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                inCmp.addErrors("v.value", errors);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                var errorEvent = inCmp.getEvent("onError");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:                errorEvent.setParams({ "errors" : errors});
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestHelper.js:        $A.enqueueAction(a);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        // find out who clicked submit and display inputed value
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        var cmpName = event.source.get("v.buttonTitle");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        var inputCmpName = "in" + cmpName;
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        var outputCmpName = "out" + cmpName;
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        $A.log("Input Value (" + cmpName + "): ");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        var inputCmpValue = component.find(inputCmpName).get("v.value");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        $A.log(inputCmpValue);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_TestController.js:        helper.goToServer(this, component, event, cmpName, inputCmpValue);
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css:div.uitestLocalization_Test {
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css:	background-color: #B0C4DE;
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css:.uitestLocalization_Test#outSubmitCountDiv{
ruau/ruau/src/test/mokponents/uitest/localization_Test/localization_Test.css:	background-color: #99CCFF;
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrame.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrame.cmp:    <ruau:attribute name="frameId" type="String"/>
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrame.cmp:    <ui:button press="{!c.handlePress}" label="{!v.frameId + ': press me'}"/>
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrame.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrameController.js:    handlePress: function(component, event, helper) {
ruau/ruau/src/test/mokponents/uitest/popupTestFrame/popupTestFrameController.js:    	alert('You pressed the button from ' + component.get("v.frameId") + '!');
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * Verify initial values are loaded correctly for single select inputSelect.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testSingleSelectInitialOption : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectSingle");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * Verify inputSelect option is disabled.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testOptionDisabled : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectSingle");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var optionCmps = this.getOptions(inputSelectCmp);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			$A.test.assertTrue(optionCmps[6].get("v.disabled"),
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				"Option '" + optionCmps[6].get("v.text") + "' should be disabled");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * Verify can change selected option to another option.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testChangeSelection : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectSingle");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, "Bear");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.verifySelectedOptions(inputSelectCmp, "Bear");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, "Dragonfly");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.verifySelectedOptions(inputSelectCmp, "Dragonfly");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * Verify initial values are loaded correctly for multi-select inputSelect.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testMultiSelectInitialOption : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectMultiple");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.verifySelectedOptions(inputSelectCmp, ["Lion","Bear"]);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * On multi-select change only one of the selected options.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testChangeSelectionForMultiSelectOneOptionChanged : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectMultiple");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// Lion and Bear are selected. Keep Bear selected, then
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// select Ant and Dragonfly
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, ["Emmet", "Dragonfly"], "Bear");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.verifySelectedOptions(inputSelectCmp, ["Bear", "Emmet", "Dragonfly"]);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * On multi-select change all of the selected options to new ones.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testChangeSelectionForMultiSelectAllOptionsChanged : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectMultiple");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// Lion and Bear are selected. Deslect selected, then
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// select Dragonfly and Tiger
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, ["Dragonfly", "Tiger"]);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.verifySelectedOptions(inputSelectCmp, ["Dragonfly", "Tiger"]);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * On multi-select change selection to a single option selected.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	testChangeSelectionForMultiSelectSingleOptionSelected : {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectMultiple");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// Lion and Bear are selected. Deselect selected, then
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, "Butterfly");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	 * On multi-select deselect all options.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var inputSelectCmp = cmp.find("InputSelectMultiple");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// Lion and Bear are selected. Deselect all
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			this.changeSelection(inputSelectCmp, []);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:	changeSelection : function(inputSelectCmp, newOptionsText, doNotDeselectTheseOptions) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var optionCmps = this.getOptions(inputSelectCmp);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var selectedOptions = this.getSelectedOptions(optionCmps);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		for (var i=0; i<selectedOptions.length; i++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// dont have any options that should be ignored for deselect so
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// go ahead and deselect
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				selectedOptions[i].set("v.value", false);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// there are some options that should not be deselected
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:					selectedOptions[i].set("v.value", false);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		if (!(newOptionsText instanceof Array)) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		// for all options that need to be selected find it in list of all
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		for (var j=0; j<newOptionsText.length; j++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// going through all options in select
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			for (var k=0; k<optionCmps.length; k++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:					// found new option to seleact in list of all options so select
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:					optionCmps[k].set("v.value", true);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:					break;
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		// fire change event;
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		inputSelectCmp.get("e.change").fire();
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		if (!(restrictedOptions instanceof Array)) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		for (var i=0; i<restrictedOptions.length; i++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		return false;
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var optionCmps = this.getOptions(inputSelectCmp);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var selectedOptions = this.getSelectedOptions(optionCmps);
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		if (!(expectedOptionsText instanceof Array)) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// there were no selected options was this expected?
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			$A.test.assertEquals(expectedOptionsText.length, 0,
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		// we have selected options to verify
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			$A.test.assertEquals(expectedOptionsText.length, selectedOptions.length,
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				"Expected number of options selected do not match actual number of options selected");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// for all options we expect to be selected go
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// through all selected options and verify it
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			// appears in selected list
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			for (var i=0; i<expectedOptionsText.length; i++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				var found = false;
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				for (var j=0; j<selectedOptions.length; j++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:						break;
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:				$A.test.assertTrue(found, "Expected option '" +
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:					expectedOptionsText[i] + "' to be selected but was not");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var selectedOptions = [];
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		for (var i=0; i<options.length; i++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			if (options[i].get("v.value") === true) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var options = []
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		var inputSelectBody = inputSelectCmp.get("v.body");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:		for (var i=0; i<inputSelectBody.length; i++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			var groupBody = inputSelectBody[i].get("v.body");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBodyTest.js:			for (var j=0; j<groupBody.length; j++) {
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    <ui:inputSelect class="single" ruau:id="InputSelectSingle">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:        <ui:inputSelectOptionGroup label="Mammal">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Lion"  label="Lion" value="true"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:        <ui:inputSelectOptionGroup label="Insect">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Dragonfly"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Emmet" label="Ant"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Cockroach" label="Cockroach" disabled="true"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:    <ui:inputSelect multiple="true" class="multiple" size="5" ruau:id="InputSelectMultiple" updateOn="blur">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:        <ui:inputSelectOptionGroup label="Mammal">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Lion"  label="Lion" value="true"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Bear"  label="Bear" value="true"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:        <ui:inputSelectOptionGroup label="Insect">
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Dragonfly"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Emmet" label="Ant"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:            <ui:inputSelectOption text="Cockroach" label="Cockroach" disabled="true"/>
ruau/ruau/src/test/mokponents/uitest/inputSelect_OptionsInBody/inputSelect_OptionsInBody.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:     These items should be modified to get the desired result. I.e. 0 items per page, 100 items per page, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:     3000 items per page, or 6000 items per page
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="pageSize" type="Integer" default="100"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="currentPage" type="Integer" default="1"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="totalPages" type="Integer" default="5"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="sortBy" type="String"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="numItems2Create" type="Integer" default="1"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="currentRandNum" type="Integer" default="6000"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="totalItems" type="Integer"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="mode" type="String" default="VIEW"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="index" type="Integer"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:attribute name="count" type="Integer"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ruau:handler name="change" value="{!v.currentPage}" action="{!c.handleCurrentPageChange}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:button ruau:id="refireDP" label="Re-fire datagrid's provide" press="{!c.replaceData}"/><br/> 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:button ruau:id="addRow" label="Add row" press="{!c.handleAddRow}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:button ruau:id="insert" label="Insert" press="{!c.handleInsert}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:button ruau:id="remove" label="Remove" press="{!c.handleRemove}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:inputText placeholder="index" label="index" labelPosition="hidden" ruau:id="index" value="{!v.index}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:inputText placeholder="count" label="count" labelPosition="hidden" ruau:id="count" value="{!v.count}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:dataGrid ruau:id="grid" mode="{!v.mode}" sortBy="{!v.sortBy}">      
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:        <ruau:set attribute="columns">     
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:	        <ui:dataGridSelectionColumn/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <ui:dataGridColumn label="Id" name="id" editable="false" sortable="true"/>             
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <ui:dataGridColumn label="Subject" name="subject"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <ui:dataGridColumn label="Name" name="name"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <ui:dataGridColumn label="Related To" name="relatedTo"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <ui:dataGridColumn label="Due Date" name="date"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:        </ruau:set>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:        <ruau:set attribute="dataProvider">
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:            <uitest:dataGrid_TestDataProvider      ruau:id="provider"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                                                   pageSize="{!v.pageSize}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                                                   currentPage="{!v.currentPage}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                                                   totalPages="{!v.totalPages}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                                                   totalItems="{!v.totalItems}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:        </ruau:set>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    </ui:dataGrid>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:     <ui:pagerNextPrevious ruau:id="pagerNextPrev"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                           pageCount="{!v.totalPages}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                           pageSize="{!v.pageSize}"                        
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                           currentPage="{!v.currentPage}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                           totalItems="{!v.totalItems}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:    <ui:pagerPageInfo ruau:id="pageInfo"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                      pageSize="{!v.pageSize}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                      currentPage="{!v.currentPage}"
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:                      totalItems="{!v.totalItems}"/>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js:    fireAddRemove: function (cmp, params) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js:            .getEvent('addRemove')
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestHelper.js:            .setParams(params)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:    replaceData : function(cmp, evt, hlp) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:    handleCurrentPageChange: function (cmp) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:        // Tell the grid to fetch new items from the dataProvider.
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:     handleAddRow: function (cmp, evt, hlp) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		var dynamicItems = [];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		var amtToCreate = cmp.get("v.numItems2Create");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		var num = cmp.get("v.currentRandNum");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		var i = 0;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		for (i; i < amtToCreate; i++, num++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:			dynamicItems.push( { 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:				"date": "2020-10-12 "+num,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:            	"name": "Peter Parker "+num,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:            	"relatedTo": "Media Inc "+num,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:		cmp.set("v.currentRandNum", num);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:            last: true,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:            items : dynamicItems
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:    handleInsert: function (cmp, evt, hlp) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:        var index = cmp.get('v.index'),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:            seed = cmp.get('v.currentRandNum'),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:                subject      : 'Bar '+seed, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:                date : '2014-11-11 '+seed,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:                name : 'New John '+seed,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:                relatedTo : 'SFDC '+seed,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:        cmp.set('v.currentRandNum', seed);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:    handleRemove: function (cmp, evt, hlp) {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestController.js:        var index = cmp.get('v.index'),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    ADD_ROW_ARRAY    : ["Spidey", "Peter Parker", "Media Inc", "2020-10-12"],
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    INSERT_ROW_ARRAY : ["Bar", "New John", "SFDC", "2014-11-11"],
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    doNotWrapInRuueRun : true,
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Test verifying that when there is no data present dataGrid does not fail
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * bug tracking: 2327176
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    _testNoDataPresent : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 0},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyDataGridUsingPager(cmp, [true,true,true,true],"0 - 0 of 0");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Start at last possible page, then verify that last paging elements acknowledge the change
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * bug tracking: 2327175
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    _testWithLargeData : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 3000, "currentPage" : 1},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyDataGridUsingPager(cmp,[true, true, false, false], 3000, "1 - 3000 of 15000");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Verifying that dataGrid is accessible
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertAccessible();
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Basic test case where we look at an average number of data and make sure paging accounts for it
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testWithAverageData : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyDataGridUsingPager(cmp, [true, true, false, false], 10, "1 - 10 of 50");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Basic test case verifying that pager and dataGrid work well together
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testWithPagerEnd : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10,"currentPage" : 5},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyDataGridUsingPager(cmp, [false, false, true, true], 10, "41 - 50 of 50");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Making sure that we are able to page to the next page and that we are able to page to previous and next pages
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testStartingOnDifferentPage : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10, "currentPage" : 2},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyDataGridUsingPager(cmp, [false, false, false, false], 10, "11 - 20 of 50");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Testing pagination with sortby attribute
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testPagination : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10, "currentPage" : 1, "sortBy" : "-id"},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var pager = cmp.find("pagerNextPrev").find("pager:next").getElement();
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySortedElements(cmp, pager, "20", "1", "We are on the wrong page, we should be on row 11-20", 10)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 10, "currentPage" : 1},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                var anchor = $A.test.getElementByClass("toggle")[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.verifySortedElements(cmp, anchor, "10", "1", "We are on the wrong page, we should be on row 10-1", 10);               
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Test that selecting and pagination still work correctly
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testSelectingDeselectingItemsWithPaginations : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	  attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Select all items
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var thead = document.getElementsByTagName("thead")[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.selectCheckBox(0, 0, thead.children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var elements = this.getRowElements(cmp, 10);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Go to next page
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var pager = cmp.find("pagerNextPrev").find("pager:next").getElement();
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.clickOrTouch(pager);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Get current amount of trs in body
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Add multiple items asynchronously and make sure that basic functionality still works (add/remove in v.items)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        attributes : {"pageSize" : 0, "numItems2Create" : 20},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        	//Verify the page is empty
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        	var elements = this.getRowElements(cmp, 0);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertEquals(0, trs.length, "there should be no rows on the page")
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            	//Add rows in and wait for them to be present
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        		this.pressButton(cmp, "addRow");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:	        	 $A.test.addWaitFor(true, function() {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:	     			return document.getElementsByTagName("tbody")[0].children.length > 0;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        		//verify that the row is correct 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        		this.checkBasicElements(cmp, ["6000", "Spidey 6000", "Peter Parker 6000", "Media Inc 6000", "2020-10-12 6000"],
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                		["6010", "Spidey 6010", "Peter Parker 6010", "Media Inc 6010", "2020-10-12 6010"],
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                		["6019", "Spidey 6019", "Peter Parker 6019", "Media Inc 6019", "2020-10-12 6019"], 20, [0,10,19]);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        		//Add an element to the row and verify insert and removing still work
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.setValue(cmp, "index", 0);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.setValue(cmp, "count", 2);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.insertRemoveAndVerify(cmp, 0, this.createOutputArray(6020, 6021, this.INSERT_ROW_ARRAY),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                                           this.createOutputArray(6000, 6000,  this.ADD_ROW_ARRAY), 22, 20);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Basic test validating that what is being displayed through the grid is there
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testDisplayedItemsAreCorrect : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	attributes : {"pageSize" : 20, "currentPage" : 1},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.checkBasicElements(cmp, ["1", "Foo 1", "John Doe 1", "Acme 1", "2014-01-01 1"], 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * bugTracking why this is not being run in IE7/IE8: W-2327182
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Set Intial values for how many items to create, the insert and remove said elements multiple times to verify v.items keeps track
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "index", 1);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "count", 2);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.insertRemoveAndVerify(cmp, 1, this.createOutputArray(6000, 6001, this.INSERT_ROW_ARRAY),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                                       this.createOutputArray(2, 3,  this.BASIC_ROW_ARRAY), 102, 100);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.insertRemoveAndVerify(cmp, 1, this.createOutputArray(6002, 6003, this.INSERT_ROW_ARRAY),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                                       this.createOutputArray(2, 3,  this.BASIC_ROW_ARRAY), 102, 100);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Insert a large amount of elements, remove only a portion of it and see how v.items reacts
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * bugTracking why this is not being run in IE7/IE8: W-2327182
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testStaggeredInsertionRemove : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "index", 50);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "count", 20);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var valuesAfterInsert = this.createOutputArray(6000, 6019, this.INSERT_ROW_ARRAY);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var valuesAfterRemove = this.createOutputArray(51, 69,  this.BASIC_ROW_ARRAY);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.insertRemoveAndVerify(cmp, 50, valuesAfterInsert, valuesAfterRemove, 120, 100);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            valuesAfterInsert = this.createOutputArray(6020, 6039, this.INSERT_ROW_ARRAY);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Since the array is not correct now, concat new items with old to make sure the correct element was not destroyed
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            valuesAfterRemove = this.createOutputArray(6030, 6039, this.INSERT_ROW_ARRAY)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            valuesAfterRemove = valuesAfterRemove.concat(this.createOutputArray(51, 69,  this.BASIC_ROW_ARRAY));
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Insert and remove elements
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.insertRemoveAndVerify(cmp, 50, valuesAfterInsert, valuesAfterRemove, 120, 110, 10);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Remove elements then refire the DataGrid provider to verify that v.items is overwritten
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testDataGridProviderRefire : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	attributes : {"pageSize" : 20},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "index", 0);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "count", 5);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.actAndVerifyRowIsCorrect(cmp, "remove", 0, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.createOutputArray(6, 10, this.BASIC_ROW_ARRAY), 15);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.actAndVerifyRowIsCorrect(cmp, "refireDP", 0, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                this.createOutputArray(1, 7, this.BASIC_ROW_ARRAY), 20);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Make sure that selecting and deselecting a single row work
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testBasicSelectionSingle : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    		var elements = this.getRowElements(cmp, 10);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Select the first element (excluding select all)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySelectedElements(cmp, this.createOutputArray(1, 1,  this.BASIC_ROW_ARRAY), trs);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Make sure that selecting and deselecting all rows work
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    testBasicSelectionAll : {
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    		var elements = this.getRowElements(cmp, 10);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    		//Select all items
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var thead = document.getElementsByTagName("thead")[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.selectCheckBox(0, 0, thead.children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySelectedElements(cmp, this.createOutputArray(1, 10, this.BASIC_ROW_ARRAY), trs);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            // Deselect all
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.selectCheckBox(0, 0, thead.children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Test that all items selected are valid in v.items and v.selectedItems
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	attributes : {"pageSize" : 10},
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var elements = this.getRowElements(cmp, 10);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Select the first 2 elements (excluding select all)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySelectedElements(cmp, this.createOutputArray(1, 2,  this.BASIC_ROW_ARRAY), trs.slice(0, 2));
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Select the head checkbox to select all and verify
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var thead = document.getElementsByTagName("thead")[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.selectCheckBox(0, 0, thead.children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySelectedElements(cmp, this.createOutputArray(1, 10,  this.BASIC_ROW_ARRAY), trs);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifySelectedElements(cmp, this.createOutputArray(2, 10, this.BASIC_ROW_ARRAY), trs.slice(1));
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Basic check used in multiple places
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    checkBasicElements : function(cmp, firstRow, midRow, lastRow, totalElementsOnPage, positionsToCheck){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //Get elements to use (trs and elements that are in v.items)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var elements = this.getRowElements(cmp, totalElementsOnPage);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var trs = elements[0]
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var itemsInBody = elements[1];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //verify first, middle and last item are correct
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        this.verifyRow(trs[positionsToCheck[2]].children, itemsInBody[positionsToCheck[2]], lastRow);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * function that will only get the elements that are not comments
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	var elementArray = [];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:	     for(var i = 0; i < elements.length; i++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:	        if(elements[i].tagName != "!"){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:	        	elementArray.push(elements[i]);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	return elementArray;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Items that have the checkbox selected should be in v.selected, verify that these items are correct
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var selected = this.getGridAttribute(cmp, "selectedItems"),
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //Verify that v.selected is the length that we expect
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        $A.test.assertEquals(expectedLen, selected.length, "There number of items that were selected does not match what is in the selected cache");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //verify that items are correct
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var expectedObj = null, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        for(var i = 0; i < expectedLen; i++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Select x amount of checkboxes (in this case get the inputs)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //This is backwards because the selected cache pushes stack like (FILO)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        for(var i = endElm; i >= beginElm; i--){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Function, that given a number (start) and values  will create and return an expected array
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    createOutputArray : function(start, end, arrayValues){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:       var outputArray = [], tmpArray;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:       for(start; start<=end; start++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	   tmpArray = [""+start];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	   for(var i = 0; i < arrayValues.length; i++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    		   tmpArray.push(arrayValues[i] +" "+start);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	   outputArray.push(tmpArray);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        return outputArray;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Function that will insert element, then remove them and verify that the rows look the way we feel they should
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    insertRemoveAndVerify : function(cmp, startRow, newExpectedRows, oldExpectedRows, colCountNew, colCountOrig, changeRemoveValue){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        this.actAndVerifyRowIsCorrect(cmp, "insert", startRow, newExpectedRows, colCountNew);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        //Used in the case that we want to remove less items
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        if(!$A.util.isUndefinedOrNull(changeRemoveValue)){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.setValue(cmp, "count", changeRemoveValue);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        this.actAndVerifyRowIsCorrect(cmp, "remove", startRow, oldExpectedRows, colCountOrig);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Perform an action (insert or remove), verify that everything is as expected
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     actAndVerifyRowIsCorrect : function(cmp, actionId, index, expectedRow, expectColCount){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	 this.pressButton(cmp, actionId);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         var elements = this.getRowElements(cmp, expectColCount);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         var trs = elements[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         var itemsInBody = elements[1];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         //Verify that items have been set to the correct position
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         for(var i = 0; i < expectedRow.length; i++, index++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Extracing out set value code 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    setValue : function(cmp, id, value){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:         cmp.find(id).set("v.value", value);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * extracting out the press function
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Verify that each row element is correct and does what we want it to
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var keys = ["id", "subject", "name", "relatedTo", "date"];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        // TODO: Clean up this assertion to check for selection checkbox inside wrapper div (due to accessibility changes from W-2330954)
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        $A.test.assertEquals($A.test.getElementAttributeValue(domRow[0].children[0].children[1], "type"), "checkbox", "Row element data does not match what it should be");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        for(var i = 1; i < domRow.length; i++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertEquals($A.util.getText(domRow[i]), ""+expectedRow[i-1], "Row element data does not match what it should be");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertEquals(""+cmpRow[keys[i-1]], expectedRow[i-1], "Row data stored in cmp data does not match what it should be");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Get a grid attribute
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    getGridAttribute : function( cmp, attributeName){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        return cmp.find("grid").get("v."+attributeName);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var tbody = document.getElementsByTagName("tbody")[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = this.getOnlyTrs(tbody.children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var itemsInBody = this.getGridAttribute(cmp, "items");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertEquals(colCount, trs.length, "The total amount of items on the page are incorrect");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertEquals(colCount, itemsInBody.length, "The total amount of elements in v.items is incorrect");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Verify that the elements we sorted are correct sorted
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    verifySortedElements : function(cmp, element, firstRowId, lastRowId, message, totalElements){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //grabbing first and last item making sure that they are sorted
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var trs = this.getRowElements(cmp, totalElements)[0];
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var firstTr = $A.util.getText(trs[0]);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            var lastTr = $A.util.getText(trs[trs.length - 1]);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Check to make sure that the first and last intem in the
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertTrue(firstTr.indexOf(firstRowId) > -1, message);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            $A.test.assertTrue(lastTr.indexOf(lastRowId) > -1, message);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Extract out function that will go through all of the pager items and make sure they are set correctly
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    verifyDataGridUsingPager : function(cmp, pagerState, pageSize, pagerMessage){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            //Getting pager and making sure that the nummbe of trs are correct
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    	    var pager = cmp.find("pagerNextPrev");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyPageInfoSaysCorrectNumber(cmp.find("pageInfo"), pagerMessage);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            this.verifyElementDisabled(pager, 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                ["pager:first","pager:previous", "pager:next","pager:last"], 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                pagerState);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Check to make sure that the pager says the correct page and element we are on
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    verifyPageInfoSaysCorrectNumber : function (cmp, expectedText){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        $A.test.assertEquals($A.test.getTextByComponent(cmp), expectedText, "There should be not elements through pagerinfo");        
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * check to make sure that we are getting the correct trs and verify it is the correct size
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var trs = this.getOnlyTrs(tbl.getElementsByTagName("tbody")[0].children);
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        $A.test.assertEquals(number, trs.length, "The correct number of trs ("+number+") is currently not in the table");
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:     * Verifying that the pager we expect to be disabled is disabled
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:    verifyElementDisabled : function(cmp, pagerIds, disabled){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        var pagerText = "", 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            assertValue = "",
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            message = "";
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        for(var i = 0; i < pagerIds.length; i++){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:        	 //Getting text to make sure that the pager is disabled
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:             pagerText = $A.test.getTextByComponent(cmp.find(pagerIds[i])).toLowerCase();
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:             //If it is disabled check error message
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:             if(disabled[i] !== true){
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                assertValue = pagerText.indexOf("disabled") == -1; 
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                message = pagerIds[i]+" was disabled and it should not be";
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:            	 assertValue = pagerText.indexOf("disabled") >= 0;
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:                 message = pagerIds[i]+" was not disabled and it should be";
ruau/ruau/src/test/mokponents/uitest/dataGrid_Test/dataGrid_TestTest.js:             $A.test.assertTrue(assertValue, message);
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:		var keyCodeValue =  event.getParam("keyCode");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:		$A.log("keyboard Event Fired");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:		cmp.find("outputValue").set("v.value", keyCodeValue);
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:    	var buttonValue =  event.getParam("button");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:        cmp.find("outputValue").set("v.value", buttonValue);
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:    	var domEvent = event.getParam("domEvent");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTestController.js:    		cmp.set("v.isDomEventSet", false);
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ruau:component  model="java://org.ruauframework.impl.java.model.TestJavaModel">
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ruau:attribute name="isDomEventSet" type="boolean" default="false"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="blur" class="blur" value="{!m.string}" updateOn="blur" blur="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<div id="change">
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:change:
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="change" class="change" value="{!m.string}" updateOn="change"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="click" class="click" value="{!m.string}" updateOn="click" click="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="dblclick" class="dblclick" value="{!m.string}" updateOn="dblclick" dblclick="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="focus" class="focus" value="{!m.string}" updateOn="focus" focus="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="mousedown" class="mousedown" value="{!m.string}" updateOn="mousedown" mousedown="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="mousemove" class="mousemove" value="{!m.string}" updateOn="mousemove" mousemove="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="mouseout" class="mouseout" value="{!m.string}" updateOn="mouseout" mouseout="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="mouseover" class="mouseover" value="{!m.string}" updateOn="mouseover" mouseover="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="mouseup" class="mouseup" value="{!m.string}" updateOn="mouseup" mouseup="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="keydown" class="keydown" value="{!m.string}" updateOn="keydown" keydown="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="keypress" class="keypress" value="{!m.string}" updateOn="keypress" keypress="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="keyup" class="keyup" value="{!m.string}" updateOn="keyup" keyup="{!c.checkDomEventSet}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="select" class="select" value="{!m.string}" updateOn="select"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<div id="invalid">
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:invalid:
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="invalid" class="invalid" value="{!m.string}" updateOn="invalid"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:output: <ui:outputText value="{!m.string}"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<div id="inspectBaseEvent"> 
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:inspectBaseEvent: 
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="keyup2" class="keyup2" value="{!m.string}" updateOn="keyup" keypress="{!c.inspectKeyEvent}" mousedown="{!c.inspectMouseEvent}"/><br/> 
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:outputValue: <ui:outputText ruau:id="outputValue" class="outputValue" value=""/> <br/><br/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<div id="inputwithLabel">
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:<ui:inputText ruau:id="inputwithLabel" label="inputwithLabel" value="inputwithLabel" updateOn="keyup"/>
ruau/ruau/src/test/mokponents/uitest/inputText_updateOnTest/inputText_updateOnTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test able to grab and display more data from provider.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	testShowMoreData : {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 25);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test showMore invokes callBack
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test case:W-2294810
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	testShowMoreInvokesCallback : {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 25);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			$A.test.assertFalse(cmp.get("v.showMoreCallback"),"callback for showMore should not be invoked");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	        $A.test.addWaitForWithFailureMessage(true, function(){return cmp.get("v.showMoreCallback");}, "callback should be invoked after pressing showMore");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 25);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// clicking refresh bring list back to initial items.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test refresh invokes callback.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test case:W-2294810
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	testRefreshListInvokesCallback : {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 25);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// clicking refresh bring list back to initial items.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			$A.test.assertFalse(cmp.get("v.refreshCallBack"),"Callback for Refresh should not be invoked");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	        $A.test.addWaitForWithFailureMessage(true, function(){return cmp.get("v.refreshCallBack");}, "callback should be invoked after pressing refresh");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test when a negative page size is given 
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	testNegativePageSize : {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:		attributes : {pageSize : -5},
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 0);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	 * Test when a negative page size is given 
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	testNegativeCurrentPage : {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:		attributes : {currentPage : -5},
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			this.waitForItems(cmp, 25);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	pushButton : function(cmp, btnName, numItems) {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:		var btn = cmp.find(btnName);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:		this.waitForItems(cmp, numItems);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:	waitForItems : function(cmp, numItems) {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestTest.js:		$A.test.addWaitFor(numItems, function(){
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.css:	padding: 0;
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:<ruau:component implements="ui:pagingInterface, ui:scrollerEmbeddable">
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    <ruau:handler name="showMore" action="{!c.showMore}"/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:    <ruau:handler name="refresh" action="{!c.refresh}"/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:	<ruau:attribute name="showMoreCallback" type="boolean" default="false"/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:	<ruau:attribute name="refreshCallBack" type="boolean" default="false"/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:	<ui:infiniteList ruau:id="list" itemVar="row" currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}">
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:		<ruau:set attribute="dataProvider">
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:			<uitest:infiniteDataProvider currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}"/>		
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:		</ruau:set>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:		<ruau:set attribute="itemTemplate">
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:			<div style="border: 1px solid black">{!row.index} : {!row.char}</div>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:		</ruau:set>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:	<ui:button ruau:id="btnShowMore" label="show more" press="{!c.showMore}"/><br/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:	<ui:button ruau:id="btnRefresh" label="refresh" press="{!c.refresh}"/>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_Test.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:    	var list = component.find("list");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:    	component.set("v.refreshCallBack", false);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:        list.getEvent('refresh').setParams({
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:            parameters: {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:                callback: function() {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:                	component.set("v.refreshCallBack", true);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:    	var list = component.find("list");
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:    	component.set("v.showMoreCallback", false);
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:        list.getEvent('showMore').setParams({
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:            parameters: {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:                callback: function() {
ruau/ruau/src/test/mokponents/uitest/infiniteList_Test/infiniteList_TestController.js:                	component.set("v.showMoreCallback", true);
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    <ui:dialogManager/>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    <ruau:handler event="ui:closeDialog" action="{!c.closeDialog}"/>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    <ui:inputText ruau:id="resultLabel" class="resultLabel" value=""/>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    <ui:button ruau:id="1" class="launchDialogButton" label="Click for Non-Modal!" press="{!c.openDialog}" />
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    <ui:dialog ruau:id="dialogBoxId" title="BOOM!" description="Testing Non ModalDialog Box">
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:        <ruau:set attribute="buttons">
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:           <ui:dialogButtons defaultButtons="both"/>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:        </ruau:set>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:         <span class="menuItem">
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Pudding"        class="checkbox1"  value="false"/>Pudding
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Puppies"        class="checkbox2"  value="false"/>Puppies
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Bananas"        class="checkbox3"  value="false"/>Bananas       
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Owls"           class="checkbox4"  value="false"/>Owls       
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Cheese"         class="checkbox5"  value="false"/>Cheese         
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Koala"          class="checkbox6"  value="false"/>Koala      
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Water Bottles"  class="checkbox7"  value="false"/>Water Bottles         
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Coffee"         class="checkbox8"  value="false"/>Coffee       
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Computers"      class="checkbox9"  value="false"/>Computers         
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:                 <ui:inputCheckbox ruau:id="checkbox" name ="Nerds"          class="checkbox10" value="false"/>Nerds
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:         </span>   
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:    </ui:dialog> 
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:	openDialog : function(cmp, evt) {
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		var openEvent = $A.get("e.ui:openDialog");
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		openEvent.setParams({
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:			dialog : cmp.find("dialogBoxId"),
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:	closeDialog : function(cmp, evt) {
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		var checkBoxArray = new Array();
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		var str = "Data Submited";
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		cmp.find("checkbox").forEach(function(cmp) {
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:			if (cmp.get("v.value")) {
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:				checkBoxArray.push(cmp.get("v.name"));
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		if (checkBoxArray.length > 0) {
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:			str = checkBoxArray.join(" ");
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		var value = evt.getParam("confirmClicked") ? str : "Data Not Submitted";
ruau/ruau/src/test/mokponents/uitest/dialog_NonModalWCheckboxesTest/dialog_NonModalWCheckboxesTestController.js:		cmp.find("resultLabel").set("v.value", value);
ruau/ruau/src/test/mokponents/uitest/hasModel/hasModel.cmp:<ruau:component model="java://org.ruauframework.impl.java.model.TestJavaModel" description="Used by ruauStorageTest:initTest.">
ruau/ruau/src/test/mokponents/uitest/hasModel/hasModel.cmp:   <div ruau:id="output"></div>
ruau/ruau/src/test/mokponents/uitest/hasModel/hasModel.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	 * Toggle richText to between disable/enable. ckeditor should be
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	 * replaced by inputTextArea when disabled, and value should be
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	// TODO : @ctatlah - Bug #W-1927701 - toggle is done quickly run into ck editor js error.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	_testRichTextToggleDisableEnable : {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertRichTextInitalized();
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			// disable
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertRichTextState(false);
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertInputTextAreaVisible(true);
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertRichTextValue(component.find("rt"), "abc");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			// enable
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertRichTextState(true);
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertInputTextAreaVisible(false);
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			this.assertRichTextValue(component.find("rt"),"abc");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	assertRichTextInitalized : function() {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:    	$A.test.addWaitFor(true, function(){
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:    			$A.test.getElementByClass("cke_wysiwyg_frame"));
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	 * toggles richText between enable/disable.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	 * @return boolean - new state of richText (false=disabled, true=enabled).
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		var isRichTextEnabled = cmp.find("rt").get("v.isRichText");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		cmp.find("disableBtn").get("e.press").fire();
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		this.waitForToggle(cmp.find("rt"), !isRichTextEnabled);
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		return !isRichTextEnabled;
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	waitForToggle : function(rtCmp, state) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		$A.test.addWaitFor(state, function(){
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	assertRichTextState : function(isEnabled) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		var elem = $A.test.getElementByClass("cke_wysiwyg_frame");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		if (isEnabled) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:    		$A.test.assertNotNull(elem, "ck editor should be present");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			$A.test.assertNull(elem, "There should be NO ck editor");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	assertInputTextAreaVisible : function(isVisible) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		var elem = $A.test.getElementByClass("uiInputRichText");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		var isHidden = "visibility: hidden; display: none;" ===
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		$A.test.assertEquals(isVisible, !isHidden,
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			"Checking visability of ui:inputTextArea");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:	assertRichTextValue : function(rtCmp, expectedValue) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		var actualValue = rtCmp.get("v.value");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:		$A.test.assertEquals(expectedValue, actualValue,
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestTest.js:			"Value is not what was expected");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:		var isRichTextEnabled = cmp.find("rt").get("v.isRichText");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:		var evt = $A.getEvt("ui:toggleRichText");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:		evt.setParams({isRichText:!isRichTextEnabled});
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:		if (isRichTextEnabled == true) {
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:			cmp.find("disableBtn").set("v.label", "enable");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTestController.js:			cmp.find("disableBtn").set("v.label", "disable");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    <ui:button ruau:id="disableBtn" label="disable" press="{!c.toggle}"/><br/>
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:    <ui:inputRichText ruau:id="rt" value="abc"/><br/>
ruau/ruau/src/test/mokponents/uitest/inputRichText_DisableTest/inputRichText_DisableTest.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:    <ui:outputText value='foo' ruau:id='settingBody'>bar</ui:outputText>
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBody.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js:     * Verify that setting body of outputText component does not change the display.
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js:     * OutputText only displays the value contained in its 'value' attribute
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js:    testSettingBodyDoesNotAffectDisplay:{
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js:            var testOutputTextCmp = cmp.find('settingBody');
ruau/ruau/src/test/mokponents/uitest/outputText_SettingBody/outputText_SettingBodyTest.js:            ruau.test.assertEquals('foo', $A.test.getText(testOutputTextCmp.find('span').getElement()), "outputText should display only text initialized in value attribute.");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:<ruau:component>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when no default value is given in inputSelect, 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        and not inputSelectOption is chosen result should Tiger is default
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Undef_With_Default">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion" value="true"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Moose"  label="Moose"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when no default value is given in inputSelect, 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        and inputSelectOption is set to true for Lion. Lion should be chosen
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Undef_With_No_Default">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion" />
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Bear, result 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        should be bear is the initial item shown
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Def_Selection_Exists" value="Bear">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Moose, result 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        should be Moose but it doesn't exist as an option so default goes 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Def_Selection_DNE" value="Moose">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is null, and there are no inputSelectOptions
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        result should be that nothing is selected
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Null_No_Options" value="">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Null, result 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Null_With_No_Null_Option" value="">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Null, result 
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Null_With_Null_Option" value="">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="" label="None"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Null, and an inputSelectOption
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Null_With_Default_And_Null_Option" value="">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="" label="None"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion" value="true"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        Checking for case when default for input select is Null, and an inputSelectOption
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:    <uitest:inputSelect_Extend ruau:id="Value_Null_With_Default_And_No_Null_Option" value="">
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Tiger" label="Tiger"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Lion"  label="Lion"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:        <ui:inputSelectOption text="Bear"  label="Bear" value="true"/>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValue.cmp:</ruau:component>
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueUndefWithNoDefault: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Undef_With_No_Default");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueUndefWithNoDefault failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueUndefWithDefault: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Undef_With_Default");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Lion", value,"ValueUndefWithDefault failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueDefSelectionExists: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Def_Selection_Exists");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Bear", value,"ValueDefSelectionExists failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueDefSelectionDNE: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Def_Selection_DNE");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueDefSelectionDNE failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueNullNoOptions: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Null_No_Options");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("", value,"ValueNullNoOptions failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueNullWithNoNullOption: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_No_Null_Option");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueNullWithNoNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueNullWithNullOption: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Null_Option");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("", value,"ValueNullWithNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueNullWithDefaultAndNullOption: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Default_And_Null_Option");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("", value, "ValueNullWithDefaultAndNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:    testValueNullWithDefaultAndNoNullOption: {
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Default_And_No_Null_Option");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/src/test/mokponents/uitest/InputSelect_OptionsInBodyInitValue/InputSelect_OptionsInBodyInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueNullWithDefaultAndNoNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    limitations under the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:<ruau:application access="unauthenticated" model="java://org.ruauframework.impl.java.model.TestJavaModel" controller="java://org.ruauframework.impl.java.controller.JavaTestController">
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ruau:attribute name="submitCount" type="integer"/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:        Submit count: <ui:outputText ruau:id="outSubmitCount" value="0"/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    click Checkbox: <ui:inputCheckbox ruau:id="inCheckbox" value="{!m.checked}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Checkbox" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Checkbox value is: <ui:outputText ruau:id="outCheckbox" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Currency: <ui:inputCurrency ruau:id="inCurrency" value="{!m.currency}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Currency" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Currency value is: <ui:outputText ruau:id="outCurrency" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <div>Input Date</div>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Date: <ui:inputDate ruau:id="inDate" value="{!m.dateOnly}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Date" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Date value is: <ui:outputText ruau:id="outDate" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <div>Input DateTime</div>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter DateTime: <ui:inputDateTime ruau:id="inDateTime" value="{!m.dateTime}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="DateTime" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your DateTime value is: <ui:outputText ruau:id="outDateTime" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <div>Input Email</div>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Email: <ui:inputEmail ruau:id="inEmail" value="{!m.email}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Email" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Email value is: <ui:outputText ruau:id="outEmail" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Number: <ui:inputNumber ruau:id="inNumber" value="{!m.number}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Number" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Number value is: <ui:outputText ruau:id="outNumber" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    check Option: <ui:inputOption ruau:id="inOption" value="{!m.option}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Option" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Option value is: <ui:outputText ruau:id="outOption" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Percent: <ui:inputPercent ruau:id="inPercent" value="{!m.percent}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Percent" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Percent value is: <ui:outputText ruau:id="outPercent" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Phone: <ui:inputPhone ruau:id="inPhone" value="{!m.phone}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Phone" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Phone value is: <ui:outputText ruau:id="outPhone" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    select Picklist: <ui:inputPicklist ruau:id="inPicklist"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Picklist" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Picklist value is: <ui:outputText ruau:id="outPicklist" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <div>Input Search</div>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Search: <ui:inputSearch ruau:id="inSearch" value="{!m.search}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Search" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Search value is: <ui:outputText ruau:id="outSearch" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Secret: <ui:inputSecret ruau:id="inSecret" value="{!m.secret}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Secret" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Secret value is: <ui:outputText ruau:id="outSecret" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    choose Select: <ui:inputSelect ruau:id="inSelect" options="{!m.select}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Select" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Select value is: <ui:outputText ruau:id="outSelect" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    check SelectOption: <ui:inputSelectOption ruau:id="inSelectOption" value="{!m.selectOption}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="SelectOption" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your SelectOption value is: <ui:outputText ruau:id="outSelectOption" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Text: <ui:inputText ruau:id="inText" value="{!m.text}" maxlength="10"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Text" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Text is: <ui:outputText ruau:id="outText" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <div>Input TextArea</div>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Text: <ui:inputTextArea ruau:id="inTextArea" value="{!m.textAreaText}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="TextArea" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Text value is: <ui:outputText ruau:id="outTextArea" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Url: <ui:inputURL ruau:id="inUrl" value="{!m.url}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="Url" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Url value is: <ui:outputText ruau:id="outUrl" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    enter Selection (multiple):<ui:inputSelect size="{!m.selectOptions.length}" value="option1" multiple="true" ruau:id="inSelectMulti" options="{!m.selectOptions}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    <ui:button buttonTitle="SelectMulti" label="submit" press="{!c.submit}"/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:    your Secltion value is: <ui:outputText ruau:id="outSelectMulti" value=""/> <br/>
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.app:</ruau:application>
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        // find out who clicked submit and display inputed value
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        var cmpName = event.source.get("v.buttonTitle");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        var inputCmpName = "in" + cmpName;
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        var outputCmpName = "out" + cmpName;
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        $A.log("Input Value (" + cmpName + "): ");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        var inputCmpValue = component.find(inputCmpName).get("v.value");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        $A.log(inputCmpValue);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        //component.find(outputCmpName).set("v.value", "**" + inputCmpValue + "**");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppController.js:        helper.goToServer(this, component, event, cmpName, inputCmpValue);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        // calculate and save number of times submit has been clicked
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        var submitCount = component.get("v.submitCount");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        component.find("outSubmitCount").set("v.value", ++submitCount);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:    goToServer : function(controller, component, event, cmpName, inValue) {
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        var a = component.get("c.echo" + cmpName);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        a.setParams({
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:            inVar : inValue
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        a.setCallback(component, function(action){
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:            if (action.getState() === "SUCCESS") {
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                $A.log("Success!\nValue from server:");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var retValue = action.getReturnValue();
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                $A.log(retValue);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                component.find("out" + cmpName).set("v.value", "**" + retValue + "**");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var inCmp = component.find("in" + cmpName);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                inCmp.setValid("v.value", true);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var cleanErrorEvent = component.find("in" + cmpName).getEvent("onClearErrors");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                cleanErrorEvent.fire();
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                $A.log("Fail: " + action.getError()[0].message);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var inCmp = component.find("in" + cmpName);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var errors = action.getError()
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                inCmp.setValid("v.value", false);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                inCmp.addErrors("v.value", errors);
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                var errorEvent = inCmp.getEvent("onError");
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:                errorEvent.setParams({ "errors" : errors});
ruau/ruau/src/test/mokponents/uitest/testApp/testAppHelper.js:        $A.enqueueAction(a);
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * See the License for the specific language governing permissions and
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css: * limitations under the License.
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css:	background-color: #B0C4DE;
ruau/ruau/src/test/mokponents/uitest/testApp/testApp.css:	background-color: #99CCFF;
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * You may obtain a copy of the License at
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/src/test/mokponents/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
