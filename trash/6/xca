ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readDeclarations(true);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    type:   "endkeyframerule",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var tokenStream = this._tokenStream,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //must be least one key
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                while(tokenStream.match(Tokens.COMMA)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * There is a restriction that IDENT can be only "from" or "to".
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var tokenStream = this._tokenStream,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (tokenStream.match(Tokens.PERCENTAGE)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    return SyntaxUnit.fromToken(tokenStream.token());
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (tokenStream.match(Tokens.IDENT)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = tokenStream.token();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (/from|to/i.test(token.value)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        return SyntaxUnit.fromToken(token);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    tokenStream.unget();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if it gets here, there wasn't a valid token, so time to explode
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._unexpectedToken(tokenStream.LT(1));
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Not part of CSS grammar, but useful for skipping over
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * mokbination of white space and HTML-style comments.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                while(this._tokenStream.match([Tokens.S, Tokens.CDO, Tokens.CDC])){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Not part of CSS grammar, but this pattern occurs frequently
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * in the official CSS grammar. Split out here to eliminate
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * duplicate code.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {Boolean} checkStart Indicates if the rule should check
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             *      for the left brace at the beginning.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {Boolean} readMargins Indicates if the rule should check
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             *      for margin patterns.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method _readDeclarations
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            _readDeclarations: function(checkStart, readMargins){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Reads the pattern
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * S* '{' S* declaration [ ';' S* declaration ]* '}' S*
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * S* '{' S* [ declaration | margin ]? [ ';' S* [ declaration | margin ]? ]* '}' S*
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Note that this is how it is described in CSS3 Paged Media, but is actually incorrect.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * A semicolon is only necessary following a declaration is there's another declaration
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * or margin afterwards.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var tokenStream = this._tokenStream,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (checkStart){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    tokenStream.mustMatch(Tokens.LBRACE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (tokenStream.match(Tokens.SEMICOLON) || (readMargins && this._margin())){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        } else if (this._declaration()){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (!tokenStream.match(Tokens.SEMICOLON)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //if ((!this._margin() && !this._declaration()) || !tokenStream.match(Tokens.SEMICOLON)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    tokenStream.mustMatch(Tokens.RBRACE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } catch (ex) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (ex instanceof SyntaxError && !this.options.strict){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            message:    ex.message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //see if there's another declaration
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        tt = tokenStream.advance([Tokens.SEMICOLON, Tokens.RBRACE]);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            //if there's a semicolon, then there might be another declaration
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            this._readDeclarations(false, readMargins);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            //if there's a right brace, the rule is finished so don't do anything
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            //otherwise, rethrow the error because it wasn't handled properly
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //not a syntax error, rethrow it
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * In some cases, you can end up with two white space tokens in a
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * row. Instead of making a change in every function that looks for
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * white space, this function is used to match as much white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * as necessary.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method _readWhitespace
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @return {String} The white space if found, empty string if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            _readWhitespace: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var tokenStream = this._tokenStream,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                while(tokenStream.match(Tokens.S)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    ws += tokenStream.token().value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Throws an error when an unexpected token is found.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {Object} token The token that was found.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new SyntaxError("Unexpected token '" + token.value + "' at line " + token.startLine + ", col " + token.startCol + ".", token.startLine, token.startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Helper method used for parsing subparts of a style sheet.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (this._tokenStream.LA(1) != Tokens.EOF){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    this._unexpectedToken(this._tokenStream.LT(1));
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // Validation methods
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            _validateProperty: function(property, value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                Validation.validate(property, value);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // Parsing methods
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parse: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parseStyleSheet: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //just passthrough
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                return this.parse(input);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parseMediaQuery: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var result = this._media_query();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if there's anything more, then it's an invalid selector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Parses a property value (everything after the semicolon).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @return {parserlib.css.PropertyValue} The property value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @throws parserlib.util.SyntaxError If an unexpected token is found.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method parserPropertyValue
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parsePropertyValue: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var result = this._expr();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //okay to have a trailing white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if there's anything more, then it's an invalid selector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Parses a mokplete CSS rule, including selectors and
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {String} input The text to parser.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @return {Boolean} True if the parse mokpleted successfully, false if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method parseRule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parseRule: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //skip any leading white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var result = this._ruleset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //skip any trailing white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if there's anything more, then it's an invalid selector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Parses a single CSS selector (no mokma)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {String} input The text to parse as a CSS selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @throws parserlib.util.SyntaxError If an unexpected token is found.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method parseSelector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parseSelector: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //skip any leading white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var result = this._selector();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //skip any trailing white space
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if there's anything more, then it's an invalid selector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Parses an HTML style attribute: a set of CSS declarations
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * separated by semicolons.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {String} input The text to parse as a style attribute
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @method parseStyleAttribute
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parseStyleAttribute: function(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                input += "}"; // for error recovery in _readDeclarations()
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._tokenStream = new TokenStream(input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this._readDeclarations();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    for (prop in additions){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (additions.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            proto[prop] = additions[prop];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global Validation, ValidationTypes, ValidationError*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var Properties = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "alignment-adjust"              : "auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | <percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "alignment-baseline"            : "baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-delay"               : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-direction"           : { multi: "normal | alternate", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-duration"            : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-iteration-count"     : { multi: "<number> | infinite", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-name"                : { multi: "none | <ident>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-play-state"          : { multi: "running | paused", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "animation-timing-function"     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-delay"               : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-direction"           : { multi: "normal | alternate", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-duration"            : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-iteration-count"     : { multi: "<number> | infinite", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-name"                : { multi: "none | <ident>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-moz-animation-play-state"          : { multi: "running | paused", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-delay"               : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-direction"           : { multi: "normal | alternate", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-duration"            : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-iteration-count"     : { multi: "<number> | infinite", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-name"                : { multi: "none | <ident>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-ms-animation-play-state"          : { multi: "running | paused", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-delay"               : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-direction"           : { multi: "normal | alternate", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-duration"            : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-iteration-count"     : { multi: "<number> | infinite", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-name"                : { multi: "none | <ident>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-webkit-animation-play-state"          : { multi: "running | paused", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-delay"               : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-direction"           : { multi: "normal | alternate", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-duration"            : { multi: "<time>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-iteration-count"     : { multi: "<number> | infinite", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-name"                : { multi: "none | <ident>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "-o-animation-play-state"          : { multi: "running | paused", mokma: true },        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "appearance"                    : "icon | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | mokbo-box | signature | password | normal | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "azimuth"                       : function (expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var simple      = "<angle> | leftwards | rightwards | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            direction   = "left-side | far-left | left | center-left | center | center-right | right | far-right | right-side",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            behind      = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid       = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (!ValidationTypes.isAny(expression, simple)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ValidationTypes.isAny(expression, "behind")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                valid = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ValidationTypes.isAny(expression, direction)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                valid = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    ValidationTypes.isAny(expression, "behind");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (valid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected (<'azimuth'>) but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "backface-visibility"           : "visible | hidden",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-attachment"         : { multi: "<attachment>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-clip"               : { multi: "<box>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-color"              : "<color> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-image"              : { multi: "<bg-image>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-origin"             : { multi: "<box>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-position"           : { multi: "<bg-position>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-repeat"             : { multi: "<repeat-style>" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "background-size"               : { multi: "<bg-size>", mokma: true },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "baseline-shift"                : "baseline | sub | super | <percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "behavior"                      : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "bookmark-label"                : "<content> | <attr> | <string>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "bookmark-level"                : "none | <integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "bookmark-state"                : "open | closed",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "bookmark-target"               : "none | <uri> | <attr>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-bottom-left-radius"     :  "<x-one-radius>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-bottom-right-radius"    :  "<x-one-radius>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-collapse"               : "collapse | separate | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-color"                  : { multi: "<color> | inherit", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image"                  : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image-outset"           : { multi: "<length> | <number>", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image-repeat"           : { multi: "stretch | repeat | round", max: 2 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image-slice"            : function(expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var valid   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            numeric = "<number> | <percentage>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            fill    = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            max     = 4,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (ValidationTypes.isAny(expression, "fill")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while (expression.hasNext() && count < max) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid = ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!valid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ValidationTypes.isAny(expression, "fill");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (valid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected ([<number> | <percentage>]{1,4} && fill?) but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image-source"           : "<image> | none",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-image-width"            : { multi: "<length> | <percentage> | <number> | auto", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-radius"                 : function(expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var valid   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            simple = "<length> | <percentage> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            slash   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            fill    = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            max     = 8,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while (expression.hasNext() && count < max) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid = ValidationTypes.isAny(expression, simple);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!valid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (expression.peek() == "/" && count > 0 && !slash) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    slash = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    max = count + 5;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (valid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected (<'border-radius'>) but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-spacing"                : { multi: "<length> | inherit", max: 2 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-style"                  : { multi: "<border-style>", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-top-left-radius"        : "<x-one-radius>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-top-right-radius"       : "<x-one-radius>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "border-width"                  : { multi: "<border-width>", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "bottom"                        : "<margin-width> | inherit", 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-align"                     : "start | end | center | baseline | stretch",        //http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-decoration-break"          : "slice |clone",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-direction"                 : "normal | reverse | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-ordinal-group"             : "<integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-orient"                    : "horizontal | vertical | inline-axis | block-axis | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-pack"                      : "start | end | center | justify",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "box-shadow"                    : function (expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var result      = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (!ValidationTypes.isAny(expression, "none")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            Validation.multiProperty("<shadow>", expression, true, Infinity);                       
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "break-after"                   : "auto | always | avoid | left | right | page | column | avoid-page | avoid-column",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "break-before"                  : "auto | always | avoid | left | right | page | column | avoid-page | avoid-column",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "break-inside"                  : "auto | avoid | avoid-page | avoid-column",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "caption-side"                  : "top | bottom | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "clear"                         : "none | right | left | both | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "column-count"                  : "<integer> | auto",                      //http://www.w3.org/TR/css3-multicol/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "column-fill"                   : "auto | balance",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "column-gap"                    : "<length> | normal",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "column-span"                   : "none | all",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "column-width"                  : "<length> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "crop"                          : "<shape> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "cue"                           : "cue-after | cue-before | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "cue-after"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "display"                       : "inline | block | list-item | inline-block | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | box | inline-box | grid | inline-grid | none | inherit | -moz-box | -moz-inline-block | -moz-inline-box | -moz-inline-grid | -moz-inline-stack | -moz-inline-table | -moz-grid | -moz-grid-group | -moz-grid-line | -moz-groupbox | -moz-deck | -moz-popup | -moz-stack | -moz-marker | -webkit-box | -webkit-inline-box",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "dominant-baseline"             : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-after-adjust"     : "central | middle | after-edge | text-after-edge | ideographic | alphabetic | mathematical | <percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-after-align"      : "baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-before-adjust"    : "before-edge | text-before-edge | central | middle | hanging | mathematical | <percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-before-align"     : "caps-height | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-size"             : "auto | line | <length> | <percentage>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "drop-initial-value"            : "initial | <integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "elevation"                     : "<angle> | below | level | above | higher | lower | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "float"                         : "left | right | none | inherit",    
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "float-offset"                  : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-family"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-size"                     : "<absolute-size> | <relative-size> | <length> | <percentage> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-size-adjust"              : "<number> | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-stretch"                  : "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-style"                    : "normal | italic | oblique | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-variant"                  : "normal | small-caps | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "font-weight"                   : "normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-cell-stacking"            : "columns | rows | layer",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-column-align"             : "start | end | center | stretch",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-column-span"              : "<integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-layer"                    : "<integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-row-align"                : "start | end | center | stretch",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "grid-row-span"                 : "<integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hanging-punctuation"           : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "height"                        : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphenate-after"               : "<integer> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphenate-before"              : "<integer> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphenate-character"           : "<string> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphenate-lines"               : "no-limit | <integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphenate-resource"            : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "hyphens"                       : "none | manual | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "image-orientation"             : "angle | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "image-rendering"               : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "image-resolution"              : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "inline-box-align"              : "initial | last | <integer>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "left"                          : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "letter-spacing"                : "<length> | normal | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-height"                   : "<number> | <length> | <percentage> | normal | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-break"                    : "auto | loose | normal | strict",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-stacking"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-stacking-ruby"            : "exclude-ruby | include-ruby",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-stacking-shift"           : "consider-shifts | disregard-shifts",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "line-stacking-strategy"        : "inline-line-height | block-line-height | max-height | grid-height",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "list-style-image"              : "<uri> | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "list-style-type"               : "disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "margin"                        : { multi: "<margin-width> | inherit", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "margin-bottom"                 : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "margin-left"                   : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "margin-right"                  : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "margin-top"                    : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "mark"                          : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "mark-after"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "mark-before"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "marks"                         : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "marquee-direction"             : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "marquee-play-count"            : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "marquee-speed"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "marquee-style"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "max-height"                    : "<length> | <percentage> | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "max-width"                     : "<length> | <percentage> | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "min-height"                    : "<length> | <percentage> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "min-width"                     : "<length> | <percentage> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "nav-down"                      : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "nav-index"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "nav-left"                      : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "nav-right"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "nav-up"                        : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "opacity"                       : "<number> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "orphans"                       : "<integer> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "overflow"                      : "visible | hidden | scroll | auto | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "padding"                       : { multi: "<padding-width> | inherit", max: 4 },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "padding-bottom"                : "<padding-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "padding-left"                  : "<padding-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "padding-right"                 : "<padding-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "padding-top"                   : "<padding-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "page"                          : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "page-break-after"              : "auto | always | avoid | left | right | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "page-break-before"             : "auto | always | avoid | left | right | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "page-break-inside"             : "auto | avoid | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "page-policy"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "pause"                         : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "pause-after"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "pause-before"                  : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "pitch-range"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "play-during"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "pointer-events"                : "auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "position"                      : "static | relative | absolute | fixed | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "presentation-level"            : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "punctuation-trim"              : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "rest-after"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "right"                         : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "rotation"                      : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "rotation-point"                : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "ruby-align"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "ruby-overhang"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "ruby-span"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "speak"                         : "normal | none | spell-out | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "speak-header"                  : "once | always | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "speak-numeral"                 : "digits | continuous | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "speak-punctuation"             : "code | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "speech-rate"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "table-layout"                  : "auto | fixed | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "tab-size"                      : "<integer> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "target"                        : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "target-name"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "target-new"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "target-position"               : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-align"                    : "left | right | center | justify | inherit" ,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-align-last"               : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-decoration"               : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-emphasis"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-indent"                   : "<length> | <percentage> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-justify"                  : "auto | none | inter-word | inter-ideograph | inter-cluster | distribute | kashida",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-rendering"                : "auto | optimizeSpeed | optimizeLegibility | geometricPrecision | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-shadow"                   : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-transform"                : "capitalize | uppercase | lowercase | none | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "text-wrap"                     : "normal | none | avoid",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "top"                           : "<margin-width> | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transform"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transform-origin"              : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transform-style"               : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transition"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transition-delay"              : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transition-duration"           : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transition-property"           : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "transition-timing-function"    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "unicode-bidi"                  : "normal | embed | bidi-override | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "user-modify"                   : "read-only | read-write | write-only | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "user-select"                   : "none | text | toggle | element | elements | all | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "vertical-align"                : "auto | use-script | baseline | sub | super | top | text-top | central | middle | bottom | text-bottom | <percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "visibility"                    : "visible | hidden | collapse | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "voice-balance"                 : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "voice-duration"                : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "voice-family"                  : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "voice-pitch-range"             : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "voice-rate"                    : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "white-space"                   : "normal | pre | nowrap | pre-wrap | pre-line | inherit | -pre-wrap | -o-pre-wrap | -moz-pre-wrap | -hp-pre-wrap", //http://perishablepress.mok/wrapping-content/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "white-space-collapse"          : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "width"                         : "<length> | <percentage> | auto | inherit" ,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "word-break"                    : "normal | keep-all | break-all",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "word-spacing"                  : "<length> | normal | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "word-wrap"                     : 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "z-index"                       : "<integer> | auto | inherit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    "zoom"                          : "<number> | <percentage> | normal"
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a selector mokbinator (whitespace, +, >).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class PropertyName
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} text The text representation of the unit. 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} hack The type of IE hack applied ("*", "_", or null).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function PropertyName(text, hack, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_NAME_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The type of IE hack applied ("*", "_", or null).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property hack
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.hack = hack;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyName.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyName.prototype.constructor = PropertyName;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyName.prototype.toString = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return (this.hack ? this.hack : "") + this.text;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a single part of a CSS property value, meaning that it represents
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * just everything single part between ":" and ";". If there are multiple values
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * separated by mokmas, this type represents just one of the values.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String[]} parts An array of value parts making up this value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class PropertyValue
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function PropertyValue(parts, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, parts.join(" "), line, col, Parser.PROPERTY_VALUE_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The parts that make up the selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property parts
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.parts = parts;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValue.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValue.prototype.constructor = PropertyValue;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * A utility class that allows for easy iteration over the various parts of a
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * property value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {parserlib.css.PropertyValue} value The property value to iterate over.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class PropertyValueIterator
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function PropertyValueIterator(value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Iterator value
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The parts that make up the value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property _parts
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this._parts = value.parts;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Keeps track of bookmarks along the way.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property _marks
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this._marks = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Holds the original property value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type parserlib.css.PropertyValue
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property value
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.value = value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Returns the total number of parts in the value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {int} The total number of parts in the value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.count = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return this._parts.length;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Indicates if the iterator is positioned at the first item.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {Boolean} True if positioned at first item, false if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.isFirst = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Indicates if there are more parts of the property value.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {Boolean} True if there are more parts, false if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @method hasNext
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.hasNext = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return (this._i < this._parts.length);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Marks the current spot in the iteration so it can be restored to
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * later on.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @method mark
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.mark = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this._marks.push(this._i);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Returns the next part of the property value or null if there is no next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * part. Does not move the internal counter forward.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * part.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.peek = function(count){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return this.hasNext() ? this._parts[this._i + (count || 0)] : null;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Returns the next part of the property value or null if there is no next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * part.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * part.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.next = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return this.hasNext() ? this._parts[this._i++] : null;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Returns the previous part of the property value or null if there is no
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * previous part.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {parserlib.css.PropertyValuePart} The previous part of the 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * property value or null if there is no next part.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.previous = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return this._i > 0 ? this._parts[--this._i] : null;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Restores the last saved bookmark.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValueIterator.prototype.restore = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    if (this._marks.length){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this._i = this._marks.pop();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser, Colors*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a single part of a CSS property value, meaning that it represents
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * just one part of the data between ":" and ";".
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} text The text representation of the unit.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class PropertyValuePart
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function PropertyValuePart(text, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_VALUE_PART_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Indicates the type of value unit.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //figure out what type of data it is
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    var temp;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //it is a measurement?
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    if (/^([+\-]?[\d\.]+)([a-z]+)$/i.test(text)){  //dimension
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value = +RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //try to narrow down
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        switch(this.units.toLowerCase()){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "em":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "rem":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "ex":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "px":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "cm":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "mm":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "in":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "pt":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "pc":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "ch":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "vh":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "vw":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "vm":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "deg":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "rad":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "grad":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this.type = "angle";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "ms":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "s":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "hz":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "khz":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "dpi":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            case "dpcm":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //default
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^([+\-]?[\d\.]+)%$/i.test(text)){  //percentage
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.type = "percentage";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value = +RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^([+\-]?[\d\.]+)%$/i.test(text)){  //percentage
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.type = "percentage";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value = +RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value = +RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value = +RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^#([a-f0-9]{3,6})/i.test(text)){  //hexcolor
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.red    = parseInt(temp.charAt(0)+temp.charAt(0),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.green  = parseInt(temp.charAt(1)+temp.charAt(1),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.blue   = parseInt(temp.charAt(2)+temp.charAt(2),16);            
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.red    = parseInt(temp.substring(0,2),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.green  = parseInt(temp.substring(2,4),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            this.blue   = parseInt(temp.substring(4,6),16);            
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/i.test(text)){ //rgb() color with absolute numbers
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^rgb\(\s*(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)/i.test(text)){ //rgb() color with percentages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d\.]+)\s*\)/i.test(text)){ //rgba() color with absolute numbers
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.alpha  = +RegExp.$4;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^rgba\(\s*(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*,\s*([\d\.]+)\s*\)/i.test(text)){ //rgba() color with percentages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.alpha  = +RegExp.$4;        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.saturation = +RegExp.$2 / 100;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^hsla\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*,\s*([\d\.]+)\s*\)/i.test(text)){ //hsla() color with percentages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.saturation = +RegExp.$2 / 100;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.alpha  = +RegExp.$4;        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.name   = RegExp.$1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value  = text;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value  = eval(text);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (Colors[text.toLowerCase()]){  //named color
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        temp        = Colors[text.toLowerCase()].substring(1);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.red    = parseInt(temp.substring(0,2),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.green  = parseInt(temp.substring(2,4),16);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.blue   = parseInt(temp.substring(4,6),16);         
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.type   = "operator";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value  = text;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    } else if (/^[a-z\-\u0080-\uFFFF][a-z0-9\-\u0080-\uFFFF]*$/i.test(text)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.value  = text;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValuePart.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValuePart.prototype.constructor = PropertyValuePart;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Create a new syntax unit based solely on the given token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Convenience method for creating a new syntax unit when
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * it represents a single token instead of multiple.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {Object} token The token object to represent.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {parserlib.css.PropertyValuePart} The object representing the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @static
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValuePart.fromToken = function(token){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return new PropertyValuePart(token.value, token.startLine, token.startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var Pseudos = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    ":after":        1
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return pseudo.indexOf("::") === 0 || Pseudos[pseudo.toLowerCase()] == Pseudos.ELEMENT;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser, Specificity*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents an entire single selector, including all parts but not
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * including multiple selectors (those separated by mokmas).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class Selector
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {Array} parts Array of selectors parts making up this selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function Selector(parts, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, parts.join(" "), line, col, Parser.SELECTOR_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The parts that make up the selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property parts
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.parts = parts;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type parserlib.css.Specificity
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.specificity = Specificity.calculate(this);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:Selector.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a single part of a selector string, meaning a single set of
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * element name and modifiers. This does not include mokbinators such as
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * spaces, +, >, etc.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class SelectorPart
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} elementName The element name in the selector or null
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: *      if there is no element name.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {Array} modifiers Array of individual modifiers for the element.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: *      May be empty if there are none.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} text The text representation of the unit. 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function SelectorPart(elementName, modifiers, text, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_PART_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The tag name of the element to which this part
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * of the selector affects.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property elementName
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.elementName = elementName;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The parts that moke after the element name, such as class names, IDs,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * pseudo classes/elements, etc.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorPart.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorPart.prototype.constructor = SelectorPart;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global SyntaxUnit, Parser*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a selector modifier string, meaning a class name, element name,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class SelectorSubPart
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.SyntaxUnit
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} text The text representation of the unit. 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} type The type of selector modifier.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column of text on which the unit resides.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function SelectorSubPart(text, type, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_SUB_PART_TYPE);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Some subparts have arguments, this represents them.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @type Array
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property args
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.args = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorSubPart.prototype = new SyntaxUnit();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorSubPart.prototype.constructor = SelectorSubPart;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global Pseudos, SelectorPart*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Represents a selector's specificity.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class Specificity
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} a Should be 1 for inline styles, zero for stylesheet styles
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} b Number of ID selectors
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} c Number of classes and pseudo classes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} d Number of element names and pseudo elements
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function Specificity(a, b, c, d){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.a = a;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Compare this specificity to another.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Specificity} other The other specificity to mokpare to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {int} -1 if the other specificity is larger, 1 if smaller, 0 if equal.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method mokpare
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    mokpare: function(other){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var mokps = ["a", "b", "c", "d"],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Creates a numeric value for the specificity.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {int} The numeric value for the specificity.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method valueOf
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    valueOf: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return (this.a * 1000) + (this.b * 100) + (this.c * 10) + this.d;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Returns a string representation for specificity.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} The string representation of specificity.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.a + "," + this.b + "," + this.c + "," + this.d;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Calculates the specificity of the given selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {parserlib.css.Selector} The selector to calculate specificity for.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @return {parserlib.css.Specificity} The specificity of the selector.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @static
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @method calculate
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:Specificity.calculate = function(selector){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    var i, len,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    function updateValues(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var i, j, len, num,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            elementName = part.elementName ? part.elementName.text : "",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (elementName && elementName.charAt(elementName.length-1) != "*") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (i=0, len=part.modifiers.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            modifier = part.modifiers[i];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "class":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "attribute":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "id":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "pseudo":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "not":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    for (j=0, num=modifier.args.length; j < num; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        updateValues(modifier.args[j]);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    for (i=0, len=selector.parts.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        part = selector.parts[i];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (part instanceof SelectorPart){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            updateValues(part);                
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global Tokens, TokenStreamBase*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var h = /^[0-9a-fA-F]$/,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    nonascii = /^[\u0080-\uFFFF]$/,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function isWhitespace(c){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function isNameStart(c){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return c !== null && (/[a-z_\u0080-\uFFFF\\]/i.test(c));
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function isNameChar(c){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return c !== null && (isNameStart(c) || /[0-9\-\\]/.test(c));
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function isIdentStart(c){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return c !== null && (isNameStart(c) || /\-\\/.test(c));
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:	for (var prop in supplier){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:		if (supplier.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:// CSS Token Stream
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * A token stream that produces CSS tokens.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String|Reader} input The source of text to tokenize.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class TokenStream
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.css
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function TokenStream(input){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:	TokenStreamBase.call(this, input, Tokens);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:TokenStream.prototype = mix(new TokenStreamBase(), {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Overrides the TokenStreamBase method of the same name
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {variant} channel The name of the channel to use
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @private
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    _getToken: function(channel){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var c,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            startLine   = reader.getLine(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            startCol    = reader.getCol();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "/":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if(reader.peek() == "*"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.mokmentToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "|":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "~":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "^":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "$":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "*":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if(reader.peek() == "="){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.mokparisonToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "\"":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "'":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = this.stringToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "#":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (isNameChar(reader.peek())){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.hashToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case ".":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (isDigit(reader.peek())){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.numberToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "-":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (reader.peek() == "-"){  //could be closing HTML-style mokment
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.htmlCommentEndToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    } else if (isNameStart(reader.peek())){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.identOrFunctionToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "!":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = this.importantToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Any at-keyword or CHAR
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "@":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = this.atRuleToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case ":":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = this.notToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "<":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    token = this.htmlCommentStartToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "U":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "u":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (reader.peek() == "+"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.unicodeRangeToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    /* falls through */
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                default:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                     * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.numberToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                     * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (isWhitespace(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.whitespaceToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                     * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (isIdentStart(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.identOrFunctionToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                     * Potential tokens:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        token = this.charToken(c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //make sure this token is wanted
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //TODO: check channel
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            token = this.createToken(Tokens.EOF,null,startLine,startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Methods to create tokens
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a token based on available data and the current
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * reader position information. This method is called by other
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * private methods to create tokens and is never called directly.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} tt The token type.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} value The text value of the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} options (Optional) Specifies a channel property
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *      to indicate that a different channel should be scanned
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *      and/or a hide property indicating that the token should
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method createToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    createToken: function(tt, value, startLine, startCol, options){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader = this._reader;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value:      value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            channel:    options.channel,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            hide:       options.hide || false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            startLine:  startLine,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            startCol:   startCol,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            endLine:    reader.getLine(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            endCol:     reader.getCol()
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Methods to create specific tokens
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a token for any at-rule. If the at-rule is unknown, then
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the token is for a single "@" character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character for the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method atRuleToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    atRuleToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule    = first,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * First, mark where we are. There are only four @ rules,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * so anything else is really just an invalid token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Basically, if this doesn't match one of the known @
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * rules, just return '@' as an unknown token and allow
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * parsing to continue after that point.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //try to find the at-keyword
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        ident = this.readName();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        tt = Tokens.type(rule.toLowerCase());
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if it's not valid, use the first character only and reset the reader
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, rule, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a character token based on the given character
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and location in the stream. If there's a special (non-standard)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * token name, this is used; otherwise CHAR is used.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} c The character for the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method charToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    charToken: function(c, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var tt = Tokens.type(c);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, c, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a character token based on the given character
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and location in the stream. If there's a special (non-standard)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * token name, this is used; otherwise CHAR is used.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character for the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    mokmentToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            mokment = this.readComment(first);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(Tokens.COMMENT, mokment, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a mokparison token based on the given character
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and location in the stream. The next character must be
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * read and is already known to be an equals sign.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} c The character for the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method mokparisonToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    mokparisonToken: function(c, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            mokparison  = c + reader.read(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            tt      = Tokens.type(mokparison) || Tokens.CHAR;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, mokparison, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a hash token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character provided is the pound sign (#) and then this
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * method reads a name afterward.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character (#) in the hash name.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method hashToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    hashToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            name    = this.readName(first);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(Tokens.HASH, name, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a CDO or CHAR token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character is provided and the rest is read by the function to determine
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the correct token to create.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method htmlCommentStartToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    htmlCommentStartToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader      = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        text += reader.readCount(3);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.createToken(Tokens.CDO, text, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.charToken(first, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a CDC or CHAR token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character is provided and the rest is read by the function to determine
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the correct token to create.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    htmlCommentEndToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader      = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        text += reader.readCount(2);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.createToken(Tokens.CDC, text, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.charToken(first, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces an IDENT or FUNCTION token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character is provided and the rest is read by the function to determine
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the correct token to create.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the identifier.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    identOrFunctionToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ident   = this.readName(first),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if there's a left paren immediately after, it's a URI or function
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (reader.peek() == "("){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ident += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ident.toLowerCase() == "url("){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ident = this.readURI(ident);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //didn't find a valid URL or there's no closing paren
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ident.toLowerCase() == "url("){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        } else if (reader.peek() == ":"){  //might be an IE function
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //IE-specific functions always being with progid:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ident.toLowerCase() == "progid"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ident += reader.readTo("(");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, ident, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces an IMPORTANT_SYM or CHAR token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character is provided and the rest is read by the function to determine
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the correct token to create.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method importantToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    importantToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader      = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            important   = first,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //there can be a mokment in here
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if the next character isn't a star, then this isn't a valid !important token
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (reader.peek() != "*"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    temp = this.readComment(c);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (isWhitespace(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                important += c + this.readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                temp = reader.readCount(8);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (/mportant/i.test(temp)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    important += c + temp;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;  //we're done
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.charToken(first, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.createToken(tt, important, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a NOT or CHAR token based on the specified information. The
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * first character is provided and the rest is read by the function to determine
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the correct token to create.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    notToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader      = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        text += reader.readCount(4);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (text.toLowerCase() == ":not("){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.createToken(Tokens.NOT, text, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this.charToken(first, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a number token based on the given character
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and location in the stream. This may return a token of
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character for the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    numberToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value   = this.readNumber(first),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (isIdentStart(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ident = this.readName(reader.read());
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value += ident;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (/^deg|^rad$|^grad$/i.test(ident)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, value, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a string token based on the given character
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and location in the stream. Since strings may be indicated
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * by single or double quotes, a failure to match starting
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * and ending quotes results in an INVALID token being generated.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The first character in the string is passed in and then
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * the rest are read up to and including the final quotation mark.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the string.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    stringToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var delim   = first,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //if the delimiter is found with an escapement, we're done.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //if there's a newline without an escapement, it's an invalid string
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (isNewLine(reader.peek()) && c != "\\"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //save previous and get next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if c is null, that means we're out of input and the string was never closed
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, string, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    unicodeRangeToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value   = first,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //then it should be a unicode range
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (reader.peek() == "+"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value += this.readUnicodeRangePart(true);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //ensure there's an actual unicode range here
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (value.length == 2){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                //if there's a ? in the first part, there can't be a second part
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (value.indexOf("?") == -1){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (reader.peek() == "-"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        temp = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        temp += this.readUnicodeRangePart(false);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //if there's not another value, back up and just take the first
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            value += temp;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(tt, value, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Produces a S token based on the specified information. Since whitespace
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * may have multiple characters, this consumes all whitespace characters
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * into a single token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} first The first character in the token.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startLine The beginning line for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} startCol The beginning column for the character.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method whitespaceToken
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    whitespaceToken: function(first, startLine, startCol){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value   = first + this.readWhitespace();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return this.createToken(Tokens.S, value, startLine, startCol);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Methods to read values from the string stream
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readUnicodeRangePart: function(allowQuestionMark){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = "",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //first read hex digits
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(isHexDigit(c) && part.length < 6){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part += c;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //then read question marks if allowed
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (allowQuestionMark){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            while(c == "?" && part.length < 6){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part += c;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //there can't be any other characters after this point
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readWhitespace: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            whitespace = "",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(isWhitespace(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            whitespace += c;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return whitespace;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readNumber: function(first){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            hasDot  = (first == "."),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                number += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (hasDot){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    hasDot = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    number += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readString: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            delim   = reader.read(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //if the delimiter is found with an escapement, we're done.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //if there's a newline without an escapement, it's an invalid string
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (isNewLine(reader.peek()) && c != "\\"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //save previous and get next
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if c is null, that means we're out of input and the string was never closed
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readURI: function(first){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        reader.mark();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //skip whitespace before
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(c && isWhitespace(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //it's a string
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            inner = this.readString();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            inner = this.readURL();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //skip whitespace after
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(c && isWhitespace(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if there was no inner value or the next character isn't closing paren, it's not a URI
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reader.reset();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            uri += inner + reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readURL: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //TODO: Check for escape and nonascii
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            url += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readName: function(first){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ident += this.readEscape(reader.read());
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if(c && isNameChar(c)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ident += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readEscape: function(first){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            cssEscape = first || "",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.peek();    
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                cssEscape += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                c = reader.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (cssEscape.length == 3 && /\s/.test(c) ||
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            cssEscape.length == 7 || cssEscape.length == 1){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return cssEscape + c;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    readComment: function(first){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var reader  = this._reader,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            c       = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (mokment.length > 2 && c == "*" && reader.peek() == "/"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    mokment += reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                c = reader.read();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var Tokens  = [
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The following token names are defined in CSS3 Grammar: http://www.w3.org/TR/css3-syntax/#lexical
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "CDO"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "CDC"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //ignorables
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "S", whitespace: true/*, channel: "ws"*/},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "COMMENT", mokment: true, hide: true, channel: "comment" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //attribute equality
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "INCLUDES", text: "~="},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "DASHMATCH", text: "|="},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "PREFIXMATCH", text: "^="},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "SUFFIXMATCH", text: "$="},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "SUBSTRINGMATCH", text: "*="},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "STRING"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "IDENT"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "HASH"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //at-keywords
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "IMPORT_SYM", text: "@import"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "PAGE_SYM", text: "@page"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "MEDIA_SYM", text: "@media"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "FONT_FACE_SYM", text: "@font-face"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "CHARSET_SYM", text: "@charset"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "NAMESPACE_SYM", text: "@namespace"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "VIEWPORT_SYM", text: "@viewport"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "UNKNOWN_SYM" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //{ name: "ATKEYWORD"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //CSS3 animations
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "KEYFRAMES_SYM", text: [ "@keyframes", "@-webkit-keyframes", "@-moz-keyframes", "@-o-keyframes" ] },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //important symbol
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "IMPORTANT_SYM"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //measurements
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "LENGTH"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "ANGLE"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TIME"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "FREQ"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "DIMENSION"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "PERCENTAGE"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "NUMBER"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "URI"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "FUNCTION"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //Unicode ranges
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "UNICODE_RANGE"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The following token names are defined in CSS3 Selectors: http://www.w3.org/TR/css3-selectors/#selector-syntax
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //invalid string
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "INVALID"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //mokbinators
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "PLUS", text: "+" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "GREATER", text: ">"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "COMMA", text: ","},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TILDE", text: "~"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "NOT"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Defined in CSS3 Paged Media
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TOPLEFTCORNER_SYM", text: "@top-left-corner"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TOPLEFT_SYM", text: "@top-left"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TOPCENTER_SYM", text: "@top-center"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TOPRIGHT_SYM", text: "@top-right"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "TOPRIGHTCORNER_SYM", text: "@top-right-corner"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "BOTTOMLEFTCORNER_SYM", text: "@bottom-left-corner"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "BOTTOMLEFT_SYM", text: "@bottom-left"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "BOTTOMCENTER_SYM", text: "@bottom-center"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "BOTTOMRIGHT_SYM", text: "@bottom-right"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "BOTTOMRIGHTCORNER_SYM", text: "@bottom-right-corner"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "LEFTTOP_SYM", text: "@left-top"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "LEFTMIDDLE_SYM", text: "@left-middle"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "LEFTBOTTOM_SYM", text: "@left-bottom"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "RIGHTTOP_SYM", text: "@right-top"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "RIGHTMIDDLE_SYM", text: "@right-middle"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "RIGHTBOTTOM_SYM", text: "@right-bottom"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The following token names are defined in CSS3 Media Queries: http://www.w3.org/TR/css3-mediaqueries/#syntax
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    /*{ name: "MEDIA_ONLY", state: "media"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "MEDIA_NOT", state: "media"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "MEDIA_AND", state: "media"},*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "RESOLUTION", state: "media"},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The following token names are not defined in any CSS specification but are used by the lexer.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //not a real token, but useful for stupid IE filters
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "IE_FUNCTION" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //part of CSS3 grammar but not the Flex code
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    { name: "CHAR" },
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //Not defined as tokens, but might as well be
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "PIPE",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "SLASH",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "MINUS",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "STAR",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "LBRACE",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "RBRACE",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "LBRACKET",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "RBRACKET",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "EQUALS",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "COLON",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "SEMICOLON",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "LPAREN",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "RPAREN",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "DOT",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    var nameMap = [],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        typeMap = {};
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    Tokens.unshift({name:"EOF"});
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    for (var i=0, len = Tokens.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        nameMap.push(Tokens[i].name);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        Tokens[Tokens[i].name] = i;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (Tokens[i].text instanceof Array){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (var j=0; j < Tokens[i].text.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    typeMap[Tokens[i].text[j]] = i;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                typeMap[Tokens[i].text] = i;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    Tokens.name = function(tt){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return nameMap[tt];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return typeMap[c] || -1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js://This file will likely change a lot! Very experimental!
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global Properties, ValidationTypes, ValidationError, PropertyValueIterator */
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var Validation = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    validate: function(property, value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //normalize name
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var name        = property.toString().toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parts       = value.parts,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            expression  = new PropertyValueIterator(value),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            spec        = Properties[name],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valid,            
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            last,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            literals,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            max, multi, group;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (name.indexOf("-") !== 0){    //vendor prefixed are ok
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Unknown property '" + property + "'.", property.line, property.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                this.multiProperty(spec.multi, expression, spec.mokma, spec.max || Infinity);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    singleProperty: function(types, expression, max, partial) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var result      = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value       = expression.value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while (expression.hasNext() && count < max) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result = ValidationTypes.isAny(expression, types);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (expression.hasNext() && !expression.isFirst()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = expression.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                 throw new ValidationError("Expected (" + types + ") but found '" + value + "'.", value.line, value.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        } else if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    multiProperty: function (types, expression, mokma, max) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var result      = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value       = expression.value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            sep         = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(expression.hasNext() && !result && count < max) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ValidationTypes.isAny(expression, types)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (mokma) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (expression.hasNext() && !expression.isFirst()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = expression.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = expression.previous();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (mokma && part == ",") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    throw new ValidationError("Expected (" + types + ") but found '" + value + "'.", value.line, value.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        } else if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    groupProperty: function (types, expression, mokma) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var result      = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            value       = expression.value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            partial     = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            name,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        while(expression.hasNext() && !result) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            name = ValidationTypes.isAnyOfGroup(expression, types);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (name) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (groups[name]) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    groups[name] = 1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    partial = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (groups.count == typeCount || !expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (partial && expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = expression.peek();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                throw new ValidationError("Expected (" + types + ") but found '" + value + "'.", value.line, value.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        } else if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            throw new ValidationError("Expected end of value but found '" + part + "'.", part.line, part.col);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Type to use when a validation error occurs.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class ValidationError
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @namespace parserlib.util
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String} message The error message.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} line The line at which the error occurred.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {int} col The column at which the error occurred.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:function ValidationError(message, line, col){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The column at which the error occurred.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The line at which the error occurred.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * The text representation of the unit.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.message = message;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:ValidationError.prototype = new Error();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js://This file will likely change a lot! Very experimental!
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global Properties, Validation, ValidationError, PropertyValueIterator, console*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var ValidationTypes = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    isLiteral: function (part, literals) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var text = part.text.toString().toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            args = literals.split(" | "),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            i, len, found = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (i=0,len=args.length; i < len && !found; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (text == args[i].toLowerCase()){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Determines if the next part(s) of the given expression
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * are any of the given types.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var args = types.split(" | "),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            i, len, found = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (i=0,len=args.length; i < len && !found && expression.hasNext(); i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            found = this.isType(expression, args[i]);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Determines if the next part(s) of the given expression
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * are one of a group.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var args = types.split(" || "),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            i, len, found = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (i=0,len=args.length; i < len && !found; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            found = this.isType(expression, args[i]);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return found ? args[i-1] : false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Determines if the next part(s) of the given expression
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * are of a given type.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var part = expression.peek(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (type.charAt(0) != "<") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result = this.isLiteral(part, type);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result = this.simple[type](part);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<absolute-size>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return ValidationTypes.isLiteral(part, "xx-small | x-small | small | medium | large | x-large | xx-large");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<attachment>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return ValidationTypes.isLiteral(part, "scroll | fixed | local");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<attr>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "function" && part.name == "attr";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<bg-image>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this["<image>"](part) || this["<gradient>"](part) ||  part == "none";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<gradient>": function(part) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "function" && /^(?:\-(?:ms|moz|o|webkit)\-)?(?:repeating\-)?(?:radial\-|linear\-)?gradient/i.test(part);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<box>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return ValidationTypes.isLiteral(part, "padding-box | border-box | content-box");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<content>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "function" && part.name == "content";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<relative-size>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return ValidationTypes.isLiteral(part, "smaller | larger");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //any identifier
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<ident>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "identifier";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<length>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (part.type == "function" && /^(?:\-(?:ms|moz|o|webkit)\-)?calc/i.test(part)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                return part.type == "length" || part.type == "number" || part.type == "integer" || part == "0";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<color>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "color" || part == "transparent";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<number>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "number" || this["<integer>"](part);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<integer>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "integer";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<line>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "integer";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<angle>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "angle";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<uri>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "uri";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<image>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this["<uri>"](part);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<percentage>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "percentage" || part == "0";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<border-width>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this["<length>"](part) || ValidationTypes.isLiteral(part, "thin | medium | thick");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<border-style>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return ValidationTypes.isLiteral(part, "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<margin-width>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this["<length>"](part) || this["<percentage>"](part) || ValidationTypes.isLiteral(part, "auto");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<padding-width>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return this["<length>"](part) || this["<percentage>"](part);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<shape>": function(part){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "function" && (part.name == "rect" || part.name == "inset-rect");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<time>": function(part) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return part.type == "time";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var types   = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                result  = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                numeric = "<percentage> | <length>",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                hasNext = function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    return expression.hasNext() && expression.peek() != ",";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:  [ left | center | right | top | bottom | <percentage> | <length> ]
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:  [ left | center | right | <percentage> | <length> ]
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:  [ top | center | bottom | <percentage> | <length> ]
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:  [ center | [ left | right ] [ <percentage> | <length> ]? ] &&
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:  [ center | [ top | bottom ] [ <percentage> | <length> ]? ]
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ValidationTypes.isAny(expression, xDir + " | center | " + numeric)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, yDir + " | center | " + numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (ValidationTypes.isAny(expression, yDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, xDir + " | center");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ValidationTypes.isAny(expression, xDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (ValidationTypes.isAny(expression, yDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    } else if (ValidationTypes.isAny(expression, numeric)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (ValidationTypes.isAny(expression, yDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        } else if (ValidationTypes.isAny(expression, "center")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (ValidationTypes.isAny(expression, yDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (ValidationTypes.isAny(expression, xDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    } else if (ValidationTypes.isAny(expression, numeric)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (ValidationTypes.isAny(expression, xDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        } else if (ValidationTypes.isAny(expression, "center")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (ValidationTypes.isAny(expression, "center")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (ValidationTypes.isAny(expression, xDir + " | " + yDir)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //<bg-size> = [ <length> | <percentage> | auto ]{1,2} | cover | contain
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var types   = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                result  = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                numeric = "<percentage> | <length> | auto",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ValidationTypes.isAny(expression, "cover | contain")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (ValidationTypes.isAny(expression, numeric)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ValidationTypes.isAny(expression, numeric);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<repeat-style>": function(expression){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var result  = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                values  = "repeat | space | round | no-repeat",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (expression.hasNext()){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = expression.next();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ValidationTypes.isLiteral(part, "repeat-x | repeat-y")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (ValidationTypes.isLiteral(part, values)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (expression.hasNext() && ValidationTypes.isLiteral(expression.peek(), values)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<shadow>": function(expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var result  = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                inset   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                color   = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (expression.hasNext()) {            
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ValidationTypes.isAny(expression, "inset")){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (ValidationTypes.isAny(expression, "<color>")) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                while (ValidationTypes.isAny(expression, "<length>") && count < 4) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (expression.hasNext()) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, "<color>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        ValidationTypes.isAny(expression, "inset");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        "<x-one-radius>": function(expression) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //[ <length> | <percentage> ] [ <length> | <percentage> ]?
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var result  = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                simple = "<length> | <percentage> | inherit";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ValidationTypes.isAny(expression, simple)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ValidationTypes.isAny(expression, simple);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:parserlib.css = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:Combinator          :Combinator,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:Parser              :Parser,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyName        :PropertyName,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValue       :PropertyValue,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:PropertyValuePart   :PropertyValuePart,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:MediaFeature        :MediaFeature,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:MediaQuery          :MediaQuery,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorPart        :SelectorPart,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:SelectorSubPart     :SelectorSubPart,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:TokenStream         :TokenStream,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:ValidationError     :ValidationError
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:for(var prop in parserlib){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:exports[prop] = parserlib[prop];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Main CSSLint object.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class CSSLint
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @static
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @extends parserlib.util.EventTarget
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global parserlib, Reporter*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:var CSSLint = (function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    var rules           = [],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        formatters      = [],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        api             = new parserlib.util.EventTarget();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.version = "0.10.0";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Rule Management
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Adds a new rule to the engine.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule to add.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method addRule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.addRule = function(rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Clears all rule from the engine.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method clearRules
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.clearRules = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return An array of rule objects.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.getRules = function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return [].concat(rules).sort(function(a,b){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return a.id > b.id ? 1 : 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Returns a ruleset configuration object with all current rules.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.getRuleset = function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var ruleset = {},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ruleset[rules[i++].id] = 1;    //by default, everything is a warning
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Returns a ruleset object based on embedded rules.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} text A string of css containing embedded rules.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} ruleset A ruleset object to modify.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    function applyEmbeddedRuleset(text, ruleset){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var valueMap,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            embedded = text && text.match(embeddedRuleset),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            valueMap = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "": 1,      // blank is warning
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "false": 0, // false is ignore
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "1": 1,     // explicit warning
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            rules.toLowerCase().split(",").forEach(function(rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var pair = rule.split(":"),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    property = pair[0] || "",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    value = pair[1] || "";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                ruleset[property.trim()] = valueMap[value.trim()];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Formatters
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Adds a new formatter to the engine.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} formatter The formatter to add.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method addFormatter
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.addFormatter = function(formatter) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        // formatters.push(formatter);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        formatters[formatter.id] = formatter;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Retrieves a formatter for use.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} formatId The name of the format to retrieve.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {Object} The formatter or undefined.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method getFormatter
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.getFormatter = function(formatId){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return formatters[formatId];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Formats the results in a particular format for a single file.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} result The results returned from CSSLint.verify().
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} filename The filename for which the results apply.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} formatId The name of the formatter to use.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} options (Optional) for special output handling.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} A formatted string for the results.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method format
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.format = function(results, filename, formatId, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var formatter = this.getFormatter(formatId),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (formatter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result = formatter.startFormat();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result += formatter.formatResults(results, filename, options || {});
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            result += formatter.endFormat();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Indicates if the given format is supported.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} formatId The ID of the format to check.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {Boolean} True if the format exists, false if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method hasFormat
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.hasFormat = function(formatId){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return formatters.hasOwnProperty(formatId);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    // Verification
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Starts the verification process for the given CSS text.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} text The CSS text to verify.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} ruleset (Optional) List of rules to apply. If null, then
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *      all rules are used. If a rule has a value of 1 then it's a warning,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *      a value of 2 means it's an error.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {Object} Results of the verification.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    api.verify = function(text, ruleset){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var i       = 0,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parser = new parserlib.css.Parser({ starHack: true, ieFilters: true,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                                underscoreHack: true, strict: false });
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        // normalize line endings
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        lines = text.replace(/\n\r?/g, "$split$").split('$split$');
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ruleset = applyEmbeddedRuleset(text, ruleset);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        ruleset.errors = 2;       //always report parsing errors as errors
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if(ruleset.hasOwnProperty(i) && ruleset[i]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    rules[i].init(parser, reporter);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //capture most horrible error type
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            parser.parse(text);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        } catch (ex) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.error("Fatal error, cannot continue: " + ex.message, ex.line, ex.col, {});
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            messages    : reporter.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            stats       : reporter.stats,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //sort by line numbers, rollups at the bottom
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        report.messages.sort(function (a, b){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (a.rollup && !b.rollup){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (!a.rollup && b.rollup){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                return a.line - b.line;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    return api;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * An instance of Report is used to report results of the
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * verification back to the main API.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @class Reporter
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {String[]} lines The text lines of the source.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * @param {Object} ruleset The set of rules to work with, including if
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: *      they are errors or warnings.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * List of messages being reported.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.messages = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * List of statistics being reported.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @property stats
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    this.stats = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Lines of code being reported on. Used to provide contextual information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * for messages.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Information about the rules. Used to determine whether an issue is an
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * error or warning.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report an error.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} line The line number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} col The column number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    error: function(message, line, col, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.messages.push({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            message : message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report an warning.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} line The line number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} col The column number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method warn
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @deprecated Use report instead.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    warn: function(message, line, col, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.report(message, line, col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report an issue.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} line The line number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} col The column number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    report: function(message, line, col, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.messages.push({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            type    : this.ruleset[rule.id] == 2 ? "error" : "warning",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            message : message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report some informational text.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} line The line number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {int} col The column number.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    info: function(message, line, col, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.messages.push({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            message : message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report some rollup error information.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    rollupError: function(message, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.messages.push({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            message : message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report some rollup warning information.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message The message to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} rule The rule this message relates to.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method rollupWarn
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    rollupWarn: function(message, rule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.messages.push({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            type    : "warning",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            message : message,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Report a statistic.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} name The name of the stat to store.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Variant} value The value of the stat.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @method stat
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    stat: function(name, value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        this.stats[name] = value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Utility functions that make life easier.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Adds all properties from supplier onto receiver,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * overwriting if the same name already exists on
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} The object to receive the properties.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Object} The object to provide the properties.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var prop;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (supplier.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Polyfill for array indexOf() method.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Array} values The array to search.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Variant} value The value to search for.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {int} The index of the value if found, -1 if not.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    indexOf: function(values, value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (values.indexOf){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return values.indexOf(value);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (var i=0, len=values.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (values[i] === value){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Polyfill for array forEach() method.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Array} values The array to operate on.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {Function} func The function to call on each item.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    forEach: function(values, func) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (values.forEach){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return values.forEach(func);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (var i=0, len=values.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                func(values[i], i, values);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use adjoining classes (.foo.bar).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "adjoining-classes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow adjoining classes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Don't use adjoining classes.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                classCount,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (j=0; j < selector.parts.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = selector.parts[j];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        classCount = 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        for (k=0; k < part.modifiers.length; k++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            modifier = part.modifiers[k];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (modifier.type == "class"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                classCount++;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (classCount > 1){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("Don't use adjoining classes.", part.line, part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use width or height when using padding or border. 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Beware of broken box size",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Don't use width or height when using padding or border.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                padding: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-left": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-right": 1
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                padding: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-bottom": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-top": 1
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            boxSizing = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            boxSizing = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var prop, value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (heightProperties.hasOwnProperty(prop) && properties[prop]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            value = properties[prop].value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            //special case for padding
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (!(prop == "padding" && value.parts.length === 2 && value.parts[0].value === 0)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("Using height with " + prop + " can sometimes make elements larger than you expect.", properties[prop].line, properties[prop].col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (widthProperties.hasOwnProperty(prop) && properties[prop]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            value = properties[prop].value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (!(prop == "padding" && value.parts.length === 2 && value.parts[1].value === 0)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("Using width with " + prop + " can sometimes make elements larger than you expect.", properties[prop].line, properties[prop].col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (heightProperties[name] || widthProperties[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!/^0\S*$/.test(event.value) && !(name == "border" && event.value == "none")){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    properties[name] = { line: event.property.line, col: event.property.col, value: event.value };
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (/^(width|height)/i.test(name) && /^(length|percentage)/.test(event.value.parts[0].type)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    properties[name] = 1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (name == "box-sizing") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpage", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpagemargin", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endkeyframerule", endRule);         
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: box-sizing doesn't work in IE6 and IE7.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow use of box-sizing",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "The box-sizing properties isn't supported in IE6 and IE7.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    tags: ["Compatibility"],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (name == "box-sizing"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("The box-sizing property isn't supported in IE6 and IE7.", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Use the bulletproof @font-face syntax to avoid 404's in old IE
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * (http://www.fontspring.mok/blog/the-new-bulletproof-font-face-syntax)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "bulletproof-font-face",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Use the bulletproof @font-face syntax",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Use the bulletproof @font-face syntax to avoid 404's in old IE (http://www.fontspring.mok/blog/the-new-bulletproof-font-face-syntax).",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            fontFaceRule = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            ruleFailed    = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        // Mark the start of a @font-face declaration so we only test properties inside it
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            fontFaceRule = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // If we aren't inside an @font-face declaration then just return
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!fontFaceRule) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var propertyName = event.property.toString().toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value        = event.value.toString();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // Set the line and col numbers for use in the endfontface listener
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // This is the property that we care about, we can ignore the rest
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (propertyName === 'src') {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var regex = /^\s?url\(['"].+\.eot\?.*['"]\)\s*format\(['"]embedded-opentype['"]\).*$/i;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                // We need to handle the advanced syntax with two src properties
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!value.match(regex) && firstSrc) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    ruleFailed = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    firstSrc = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                } else if (value.match(regex) && !firstSrc) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    ruleFailed = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        // Back to normal rules that we don't need to test
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            fontFaceRule = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (ruleFailed) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("@font-face declaration doesn't follow the fontspring bulletproof syntax.", line, col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Include all mokpatible vendor prefixes to reach a wider
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * range of users.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/ 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "mokpatible-vendor-prefixes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require mokpatible vendor prefixes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Include all mokpatible vendor prefixes to reach a wider range of users.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function (parser, reporter) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            mokpatiblePrefixes,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            variations,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            inKeyFrame = false,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            arrayPush = Array.prototype.push,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            applyTo = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        // See http://peter.sh/experiments/vendor-prefixed-css-property-overview/ for details
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        mokpatiblePrefixes = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation"                  : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-delay"            : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-direction"        : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-duration"         : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-fill-mode"        : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-iteration-count"  : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-name"             : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-play-state"       : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "animation-timing-function"  : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "appearance"                 : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-image"               : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-radius"              : "webkit",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-start"               : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-start-color"         : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-start-style"         : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "border-start-width"         : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "box-align"                  : "webkit moz ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "box-ordinal-group"          : "webkit moz ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "box-pack"                   : "webkit moz ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "box-shadow"                 : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "column-gap"                 : "webkit moz ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "line-break"                 : "webkit ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "margin-end"                 : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "margin-start"               : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "marquee-speed"              : "webkit wap",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "marquee-style"              : "webkit wap",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "padding-end"                : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "padding-start"              : "webkit moz",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "tab-size"                   : "moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "text-size-adjust"           : "webkit ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transform"                  : "webkit moz ms o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transform-origin"           : "webkit moz ms o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transition"                 : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transition-delay"           : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transition-duration"        : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transition-property"        : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "transition-timing-function" : "webkit moz o",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            "word-break"                 : "epub ms",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (prop in mokpatiblePrefixes) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (mokpatiblePrefixes.hasOwnProperty(prop)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                variations = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                prefixed = mokpatiblePrefixes[prop].split(' ');
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    variations.push('-' + prefixed[i] + '-' + prop);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                mokpatiblePrefixes[prop] = variations;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                arrayPush.apply(applyTo, variations);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function () {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframes", function (event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            inKeyFrame = event.prefix || true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endkeyframes", function (event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            inKeyFrame = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function (event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (CSSLint.Util.indexOf(applyTo, name.text) > -1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                // e.g., -moz-transform is okay to be alone in @-moz-keyframes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!inKeyFrame || typeof inKeyFrame != "string" || 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        name.text.indexOf("-" + inKeyFrame + "-") !== 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    properties.push(name);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", function (event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var propertyGroups = {},
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                name,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                variations,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                actual,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                name = properties[i];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (prop in mokpatiblePrefixes) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (mokpatiblePrefixes.hasOwnProperty(prop)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        variations = mokpatiblePrefixes[prop];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (CSSLint.Util.indexOf(variations, name.text) > -1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                    full : variations.slice(0),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                    actual : [],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                    actualNodes: []
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (CSSLint.Util.indexOf(propertyGroups[prop].actual, name.text) === -1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                propertyGroups[prop].actual.push(name.text);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                propertyGroups[prop].actualNodes.push(name);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (propertyGroups.hasOwnProperty(prop)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    value = propertyGroups[prop];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    full = value.full;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    actual = value.actual;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (full.length > actual.length) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (CSSLint.Util.indexOf(actual, item) === -1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                propertiesSpecified = (actual.length === 1) ? actual[0] : (actual.length == 2) ? actual.join(" and ") : actual.join(", ");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("The property " + item + " is mokpatible with " + propertiesSpecified + " and should be included as well.", value.actualNodes[0].line, value.actualNodes[0].col, rule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Certain properties don't play well with certain display values. 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * - float should not be used with inline-block
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * - height, width, margin-top, margin-bottom, float should not be used with inline
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * - vertical-align should not be used with block
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * - margin, float should not be used with table-*
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "display-property-grouping",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require properties appropriate for display",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Certain properties shouldn't be used with certain display property values.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var propertiesToCheck = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                display: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "float": "none",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                margin: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "margin-left": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "margin-right": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "margin-bottom": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "margin-top": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                padding: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-left": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-right": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-bottom": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding-top": 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "vertical-align": 1
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function reportProperty(name, display, msg){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (properties[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (typeof propertiesToCheck[name] != "string" || properties[name].value.toLowerCase() != propertiesToCheck[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    reporter.report(msg || name + " can't be used with display: " + display + ".", properties[name].line, properties[name].col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var display = properties.display ? properties.display.value : null;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (display){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                switch(display){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    case "inline":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //height, width, margin-top, margin-bottom, float should not be used with inline
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("height", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("width", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("margin", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("margin-top", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("margin-bottom", display);              
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("float", display, "display:inline has no effect on floated elements (but may be used to fix the IE6 double-margin bug).");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    case "block":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //vertical-align should not be used with block
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("vertical-align", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    case "inline-block":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //float should not be used with inline-block
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reportProperty("float", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    default:
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        //margin, float should not be used with table
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (display.indexOf("table-") === 0){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("margin", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("margin-left", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("margin-right", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("margin-top", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("margin-bottom", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reportProperty("float", display);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (propertiesToCheck[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                properties[name] = { value: event.value.text, line: event.property.line, col: event.property.col };                    
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endkeyframerule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpagemargin", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpage", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Disallow duplicate background-images (using url).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "duplicate-background-images",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow duplicate background images",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Every background-image should be unique. Use a mokmon class for e.g. sprites.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            stack = {};
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value = event.value,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (name.match(/background/i)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (i=0, len=value.parts.length; i < len; i++) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (value.parts[i].type == 'uri') {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (typeof stack[value.parts[i].uri] === 'undefined') {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            stack[value.parts[i].uri] = event;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reporter.report("Background image '" + value.parts[i].uri + "' was used multiple times, first declared at line " + stack[value.parts[i].uri].line + ", col " + stack[value.parts[i].uri].col + ".", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Duplicate properties must appear one after the other. If an already-defined
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * property appears somewhere else in the rule, then it's likely an error.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "duplicate-properties",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow duplicate properties",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Duplicate properties must appear one after the other.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastProperty;            
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule);        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var property = event.property,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                name = property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (properties[name] && (lastProperty != name || properties[name] == event.value.text)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("Duplicate property '" + event.property + "' found.", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            properties[name] = event.value.text;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastProperty = name;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Style rules without any properties defined should be removed.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow empty rules",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Rules without any properties specified should be removed.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: There should be no syntax errors. (Duh.)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Parsing Errors",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "This rule looks for recoverable syntax errors.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("error", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.error(event.message, event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "fallback-colors",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require fallback colors",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "For older browsers that don't support RGBA, HSL, or HSLA, provide a fallback color.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastProperty,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                background: 1,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "background-color": 1
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastProperty = null;    
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule);        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var property = event.property,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                name = property.text.toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                parts = event.value.parts,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                len = parts.length;                
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if(propertiesToCheck[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (parts[i].type == "color"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if ("alpha" in parts[i] || "hue" in parts[i]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (/([^\)]+)\(/.test(parts[i])){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                colorType = RegExp.$1.toUpperCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (!lastProperty || (lastProperty.property.text.toLowerCase() != name || lastProperty.colorType != "mokpat")){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("Fallback " + name + " (hex or RGB) should precede " + colorType + " " + name + ".", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            event.colorType = "mokpat";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastProperty = event;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: You shouldn't use more than 10 floats. If you do, there's probably
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * room for some abstraction.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "floats",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow too many floats",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "This rule tests if the float property is used too many times",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var count = 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //count how many times "float" is used
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (event.property.text.toLowerCase() == "float" &&
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    event.value.text.toLowerCase() != "none"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.stat("floats", count);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.rollupWarn("Too many floats (" + count + "), you're probably using them for layout. Consider using a grid system instead.", rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Avoid too many @font-face declarations in the same stylesheet.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "font-faces",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Don't use too many web fonts",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Too many different web fonts in the same stylesheet.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.rollupWarn("Too many @font-face declarations (" + count + ").", rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: You shouldn't need more than 9 font-size declarations.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow too many font sizes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Checks the number of font-size declarations.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.stat("font-sizes", count);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.rollupWarn("Too many font-size declarations (" + count + "), abstraction needed.", rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: When using a vendor-prefixed gradient, make sure to use them all.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "gradients",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require all gradient definitions",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "When using a vendor-prefixed gradient, make sure to use them all.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            gradients;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            gradients = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (/\-(moz|o|webkit)(?:\-(?:linear|radial))\-gradient/i.test(event.value)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                gradients[RegExp.$1] = 1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (/\-webkit\-gradient/i.test(event.value)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                gradients.oldWebkit = 1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var missing = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!gradients.moz){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!gradients.webkit){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                missing.push("Webkit (Safari 5+, Chrome)");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!gradients.oldWebkit){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                missing.push("Old Webkit (Safari 4+, Chrome)");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!gradients.o){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                missing.push("Opera 11.1+");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("Missing vendor-prefixed CSS gradients for " + missing.join(", ") + ".", event.selectors[0].line, event.selectors[0].col, rule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow IDs in selectors",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Selectors should not contain IDs.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (j=0; j < selector.parts.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = selector.parts[j];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        for (k=0; k < part.modifiers.length; k++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            modifier = part.modifiers[k];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    reporter.report(idCount + " IDs in the selector, really?", selector.line, selector.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use @import, use <link> instead.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow @import",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Don't use @import, use <link> instead.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("import", function(event){        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.report("@import prevents parallel downloads, use <link> instead.", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Make sure !important is not overused, this could lead to specificity
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * war. Display a warning on !important declarations, an error if it's
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * used more at least 10 times.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "important",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow !important",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Be careful when using !important declaration",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //warn that important is used and increment the declaration counter
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (event.important === true){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("Use of !important", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //if there are more than 10, show an error
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.stat("important", count);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.rollupWarn("Too many !important declarations (" + count + "), try to use less than 10 to avoid specificity issues.", rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Properties should be known (listed in CSS3 specification) or
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * be a vendor-prefixed property.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require use of known properties",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Properties should be known (listed in CSS3 specification) or be a vendor-prefixed property.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            // the check is handled entirely by the parser-lib (https://github.mok/nzakas/parser-lib)
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (event.invalid) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report(event.invalid.message, event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: outline: none or outline: 0 should only be used in a :focus rule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: *       and only if there are other properties in the same rule.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow outline: none",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    tags: ["Accessibility"],
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            lastRule;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                lastRule = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    outline: false
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                lastRule = null;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (lastRule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (lastRule.outline){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (lastRule.selectors.toString().toLowerCase().indexOf(":focus") == -1){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reporter.report("Outlines should only be modified using :focus.", lastRule.line, lastRule.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    } else if (lastRule.propCount == 1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reporter.report("Outlines shouldn't be hidden unless other visual changes are made.", lastRule.line, lastRule.col, rule);                        
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value = event.value;                
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (lastRule){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                lastRule.propCount++;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (name == "outline" && (value == "none" || value == "0")){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    lastRule.outline = true;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpage", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpagemargin", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endkeyframerule", endRule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use classes or IDs with elements (a.foo or a#foo).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "overqualified-elements",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow overqualified elements",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Don't use classes or IDs with elements (a.foo or a#foo).",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            classes = {};
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (j=0; j < selector.parts.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = selector.parts[j];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        for (k=0; k < part.modifiers.length; k++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            modifier = part.modifiers[k];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (part.elementName && modifier.type == "id"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                reporter.report("Element (" + part + ") is overqualified, just use " + modifier + " without element name.", part.line, part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            } else if (modifier.type == "class"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                if (!classes[modifier]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                    classes[modifier] = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                classes[modifier].push({ modifier: modifier, part: part });
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var prop;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (prop in classes){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (classes.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    //one use means that this is overqualified
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (classes[prop].length == 1 && classes[prop][0].part.elementName){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reporter.report("Element (" + classes[prop][0].part + ") is overqualified, just use " + classes[prop][0].modifier + " without element name.", classes[prop][0].part.line, classes[prop][0].part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Headings (h1-h6) should not be qualified (namespaced).
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "qualified-headings",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow qualified headings",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Headings should not be qualified (namespaced).",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (j=0; j < selector.parts.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = selector.parts[j];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (part.elementName && /h[1-6]/.test(part.elementName.toString()) && j > 0){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reporter.report("Heading (" + part.elementName + ") should not be qualified.", part.line, part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Selectors that look like regular expressions are slow and should be avoided.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow selectors that look like regexs",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Selectors that look like regular expressions are slow and should be avoided.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (j=0; j < selector.parts.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    part = selector.parts[j];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        for (k=0; k < part.modifiers.length; k++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            modifier = part.modifiers[k];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            if (modifier.type == "attribute"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                                    reporter.report("Attribute selectors with " + RegExp.$1 + " are slow!", modifier.line, modifier.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Total number of rules should not exceed x.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Rules Count",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Track how many rules there are.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //count each rule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            reporter.stat("rule-count", count);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Warn people with approaching the IE 4095 limit 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "selector-max-approaching",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Warn when approaching the 4095 selector limit for IE",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Will warn when selector count is >= 3800 selectors.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this, count = 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener('startrule', function(event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("You have " + count + " selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.",0,0,rule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Warn people past the IE 4095 limit 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "selector-max",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Error when past the 4095 selector limit for IE",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this, count = 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener('startrule',function(event) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("You have " + count + " selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.",0,0,rule); 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Use shorthand properties where possible.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "shorthand",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require shorthand properties",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Use shorthand properties where possible.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            mapping = {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "margin": [
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "margin-top",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "margin-bottom",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "margin-left",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "margin-right"
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "padding": [
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "padding-top",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "padding-bottom",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "padding-left",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    "padding-right"
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //initialize propertiesToCheck 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        for (prop in mapping){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (mapping.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                for (i=0, len=mapping[prop].length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    propertiesToCheck[mapping[prop][i]] = prop;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //event handler for end of rules
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var prop, i, len, total;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            //check which properties this rule has
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (prop in mapping){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (mapping.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    total=0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    for (i=0, len=mapping[prop].length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        total += properties[mapping[prop][i]] ? 1 : 0;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (total == mapping[prop].length){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reporter.report("The properties " + mapping[prop].join(", ") + " can be replaced by " + prop + ".", event.line, event.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.toString().toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value = event.value.parts[0].value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (propertiesToCheck[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                properties[name] = 1;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);     
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use properties with a star prefix.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "star-property-hack",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow properties with a star prefix",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Checks for the star property hack (targets IE6/7)",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //check if property name starts with "*"
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var property = event.property;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (property.hack == "*") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("Property with star prefix found.", event.property.line, event.property.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use text-indent for image replacement if you need to support rtl.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow negative text-indent",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Checks for text indent less than -99px",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            textIndent = false;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //event handler for end of rules
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.report("Negative text-indent doesn't work well with RTL. If you use text-indent for image replacement explicitly set direction for that item to ltr.", textIndent.line, textIndent.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.toString().toLowerCase(),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                value = event.value;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (name == "text-indent" && value.parts[0].value < -99){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            } else if (name == "direction" && value == "ltr"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use properties with a underscore prefix.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "underscore-property-hack",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow properties with an underscore prefix",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Checks for the underscore property hack (targets IE6)",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //check if property name starts with "_"
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var property = event.property;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (property.hack == "_") {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Headings (h1-h6) should be defined only once.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "unique-headings",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Headings should only be defined once",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Headings should be defined only once.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var headings =  {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = selector.parts[selector.parts.length-1];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (part.elementName && /(h[1-6])/i.test(part.elementName.toString())){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    for (j=0; j < part.modifiers.length; j++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (part.modifiers[j].type == "pseudo"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            break;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        headings[RegExp.$1]++;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (headings[RegExp.$1] > 1) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reporter.report("Heading (" + part.elementName + ") has already been defined.", part.line, part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endstylesheet", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var prop,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                messages = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (prop in headings){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (headings.hasOwnProperty(prop)){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (headings[prop] > 1){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        messages.push(headings[prop] + " " + prop + "s");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (messages.length){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                reporter.rollupWarn("You have " + messages.join(", ") + " defined in this stylesheet.", rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use universal selector because it's slow.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "universal-selector",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow universal selector",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "The universal selector (*) is known to be slow.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = selector.parts[selector.parts.length-1];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (part.elementName == "*"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    reporter.report(rule.desc, part.line, part.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: Don't use unqualified attribute selectors because they're just like universal selectors.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "unqualified-attributes",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow unqualified attribute selectors",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "Unqualified attribute selectors are known to be slow.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var selectors = event.selectors,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                part = selector.parts[selector.parts.length-1];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (part.type == parser.SELECTOR_PART_TYPE){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    for (k=0; k < part.modifiers.length; k++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        modifier = part.modifiers[k];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        if (modifier.type == "attribute" && (!part.elementName || part.elementName == "*")){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                            reporter.report(rule.desc, part.line, part.col, rule);                               
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: When using a vendor-prefixed property, make sure to
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * include the standard one.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Require standard property with vendor prefix",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "When using a vendor-prefixed property, make sure to include the standard one.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-border-radius": "border-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-border-top-left-radius": "border-top-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-border-top-right-radius": "border-top-right-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-border-bottom-left-radius": "border-bottom-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-border-bottom-right-radius": "border-bottom-right-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-border-radius": "border-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-border-top-left-radius": "border-top-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-border-top-right-radius": "border-top-right-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-border-bottom-left-radius": "border-bottom-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-border-bottom-right-radius": "border-bottom-right-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-border-radius": "border-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-border-radius-topleft": "border-top-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-border-radius-topright": "border-top-right-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-border-radius-bottomleft": "border-bottom-left-radius",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-border-radius-bottomright": "border-bottom-right-radius",                
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-column-gap": "column-gap",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-column-gap": "column-gap",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-column-span": "column-span",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-box-shadow": "box-shadow",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-box-shadow": "box-shadow",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-transform" : "transform",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-transform" : "transform",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-transform" : "transform",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-ms-transform" : "transform",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-moz-transform-origin" : "transform-origin",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-webkit-transform-origin" : "transform-origin",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-o-transform-origin" : "transform-origin",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                "-ms-transform-origin" : "transform-origin",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //event handler for beginning of rules
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        function startRule(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //event handler for end of rules
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var prop,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                standard,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                actual,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                needsStandard = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    needsStandard.push({ actual: prop, needed: propertiesToCheck[prop]});
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            for (i=0, len=needsStandard.length; i < len; i++){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                needed = needsStandard[i].needed;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                actual = needsStandard[i].actual;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    reporter.report("Missing standard property '" + needed + "' to go along with '" + actual + "'.", properties[actual][0].name.line, properties[actual][0].name.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    //make sure standard property is last
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (properties[needed][0].pos < properties[actual][0].pos){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        reporter.report("Standard property '" + needed + "' should moke after vendor-prefixed property '" + actual + "'.", properties[actual][0].name.line, properties[actual][0].name.col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startrule", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startfontface", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpage", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startpagemargin", startRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("startkeyframerule", startRule);         
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var name = event.property.text.toLowerCase();
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!properties[name]){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                properties[name] = [];
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            properties[name].push({ name: event.property, value : event.value, pos:num++ });
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endrule", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endfontface", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpage", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endpagemargin", endRule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("endkeyframerule", endRule);         
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js: * Rule: You don't need to specify units when a value is 0.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addRule({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //rule information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Disallow units for 0 values",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    desc: "You don't need to specify units when a value is 0.",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //initialization
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    init: function(parser, reporter){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var rule = this;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //count how many times "float" is used
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        parser.addListener("property", function(event){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var parts = event.value.parts,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                len = parts.length;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if ((parts[i].units || parts[i].type == "percentage") && parts[i].value === 0 && parts[i].type != "time"){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    reporter.report("Values of 0 shouldn't have units specified.", parts[i].line, parts[i].col, rule);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Replace special characters before write to output.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *  - single quotes is the escape sequence for double-quotes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *  - &amp; is the escape sequence for &
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *  - &lt; is the escape sequence for <
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     *  - &gt; is the escape sequence for >
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param {String} message to escape
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return escaped message as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    var xmlEscape = function(str) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        return str.replace(/[\"&><]/g, function(match) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            switch (match) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "\"":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "&":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    return "&amp;";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case "<":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                case ">":
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        name: "Checkstyle XML format",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Return opening root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        startFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Return closing root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        endFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Returns message when there is a file read error.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {String} filename The name of the file that caused the error.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {String} message The error message
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return {String} The error message.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        readError: function(filename, message) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return "<file name=\"" + xmlEscape(filename) + "\"><error line=\"0\" column=\"0\" severty=\"error\" message=\"" + xmlEscape(message) + "\"></error></file>";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param options {Object} (UNUSED for now) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Generate a source string for a rule.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * Checkstyle source strings usually resemble Java class names e.g
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * net.csslint.SomeRuleName
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @param {Object} rule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:             * @return rule source as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            var generateSource = function(rule) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!rule || !('name' in rule)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                return 'net.csslint.' + rule.name.replace(/\s/g,'');
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (messages.length > 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output.push("<file name=\""+filename+"\">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                CSSLint.Util.forEach(messages, function (message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    if (!message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                      output.push("<error line=\"" + message.line + "\" column=\"" + message.col + "\" severity=\"" + message.type + "\"" +
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                          " message=\"" + xmlEscape(message.message) + "\" source=\"" + generateSource(message.rule) +"\"/>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    id: "mokpact",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Compact, 'porcelain' format",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return content to be printed before all file results.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    startFormat: function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return content to be printed after all file results.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    endFormat: function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param options {Object} (Optional) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Capitalize and return given string.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param str {String} to capitalize
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return {String} capitalized
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var capitalize = function(str) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return str.charAt(0).toUpperCase() + str.slice(1);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (messages.length === 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return options.quiet ? "" : filename + ": Lint Free!";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        CSSLint.Util.forEach(messages, function(message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += filename + ": " + capitalize(message.type) + " - " + message.message + "\n";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += filename + ": " + "line " + message.line + 
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    ", col " + message.col + ", " + capitalize(message.type) + " - " + message.message + "\n";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "CSSLint XML format",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return opening root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    startFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return closing root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    endFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param options {Object} (UNUSED for now) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Replace special characters before write to output.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - single quotes is the escape sequence for double-quotes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &amp; is the escape sequence for &
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &lt; is the escape sequence for <
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &gt; is the escape sequence for >
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {String} message to escape
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return escaped message as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var escapeSpecialCharacters = function(str) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return str.replace(/\"/g, "'").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (messages.length > 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            output.push("<file name=\""+filename+"\">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            CSSLint.Util.forEach(messages, function (message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<issue severity=\"" + message.type + "\" reason=\"" + escapeSpecialCharacters(message.message) + "\" evidence=\"" + escapeSpecialCharacters(message.evidence) + "\"/>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<issue line=\"" + message.line + "\" char=\"" + message.col + "\" severity=\"" + message.type + "\"" +
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        " reason=\"" + escapeSpecialCharacters(message.message) + "\" evidence=\"" + escapeSpecialCharacters(message.evidence) + "\"/>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "JUNIT XML format",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return opening root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    startFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return closing root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    endFormat: function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param options {Object} (UNUSED for now) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                'failure': 0
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Generate a source string for a rule.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * JUNIT source strings usually resemble Java class names e.g
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * net.csslint.SomeRuleName
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {Object} rule
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return rule source as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var generateSource = function(rule) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (!rule || !('name' in rule)) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return 'net.csslint.' + rule.name.replace(/\s/g,'');
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Replace special characters before write to output.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - single quotes is the escape sequence for double-quotes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &lt; is the escape sequence for <
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &gt; is the escape sequence for >
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {String} message to escape
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return escaped message as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var escapeSpecialCharacters = function(str) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return str.replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (messages.length > 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            messages.forEach(function (message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                // since junit has no warning class
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                // all issues as errors
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                var type = message.type === 'warning' ? 'error' : message.type;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (!message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    // build the test case seperately, once joined
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    // we'll add it to a custom array filtered by type
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<testcase time=\"0\" name=\"" + generateSource(message.rule) + "\">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<" + type + " message=\"" + escapeSpecialCharacters(message.message) + "\"><![CDATA[" + message.line + ':' + message.col + ':' + escapeSpecialCharacters(message.evidence)  + "]]></" + type + ">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("</testcase>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            output.unshift("<testsuite time=\"0\" tests=\"" + messages.length + "\" skipped=\"0\" errors=\"" + tests.error + "\" failures=\"" + tests.failure + "\" package=\"net.csslint\" name=\"" + filename + "\">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Lint XML format",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return opening root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    startFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return closing root XML tag.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    endFormat: function(){
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param options {Object} (UNUSED for now) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * Replace special characters before write to output.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - single quotes is the escape sequence for double-quotes
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &amp; is the escape sequence for &
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &lt; is the escape sequence for <
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         *  - &gt; is the escape sequence for >
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @param {String} message to escape
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:         * @return escaped message as {String}
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var escapeSpecialCharacters = function(str) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return str.replace(/\"/g, "'").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (messages.length > 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            output.push("<file name=\""+filename+"\">");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            CSSLint.Util.forEach(messages, function (message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                if (message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<issue severity=\"" + message.type + "\" reason=\"" + escapeSpecialCharacters(message.message) + "\" evidence=\"" + escapeSpecialCharacters(message.evidence) + "\"/>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                    output.push("<issue line=\"" + message.line + "\" char=\"" + message.col + "\" severity=\"" + message.type + "\"" +
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                        " reason=\"" + escapeSpecialCharacters(message.message) + "\" evidence=\"" + escapeSpecialCharacters(message.evidence) + "\"/>");
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:/*global CSSLint*/
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:CSSLint.addFormatter({
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    //format information
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    name: "Plain Text",
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return content to be printed before all file results.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to prepend before all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    startFormat: function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Return content to be printed after all file results.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @return {String} to append after all results
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    endFormat: function() {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * Given CSS Lint results for a file, return output for this format.
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param results {Object} with error and warning messages
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param filename {String} relative file path
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:     * @param options {Object} (Optional) specifies special handling of output
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:    formatResults: function(results, filename, options) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var messages = results.messages,
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        if (messages.length === 0) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            return options.quiet ? "" : "\n\ncsslint: No errors in " + filename + ".";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        output = "\n\ncsslint: There are " + messages.length  +  " problems in " + filename + ".";
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        var pos = filename.lastIndexOf("/"),
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            shortFilename = filename;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            pos = filename.lastIndexOf("\\");       
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            shortFilename = filename.substring(pos+1);
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:        CSSLint.Util.forEach(messages, function (message, i) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            output = output + "\n\n" + shortFilename;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:            if (message.rollup) {
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += "\n" + (i+1) + ": " + message.type;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += "\n" + message.message;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += "\n" + (i+1) + ": " + message.type + " at line " + message.line + ", col " + message.col;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += "\n" + message.message;
ruau/ruau-util/src/main/resources/org/ruauframework/util/css/csslint.js:                output += "\n" + message.evidence;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * Copyright (C) 2013 salesforce.mok, inc.
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * you may not use this file except in mokpliance with the License.
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * You may obtain a copy of the License at
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * See the License for the specific language governing permissions and
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java: * limitations under the License.
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:package configuration;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.ServiceLoaderImpl.RuueConfiguration;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.ServiceLoaderImpl.Impl;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.adapter.SourceControlAdapter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.adapter.SourceControlAdapterImpl;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.json.DefaultJsonSerializer;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.Converter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.ArrayListToBooleanArrayConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.ArrayListToDateArrayConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.ArrayListToIntegerArrayConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.ArrayListToStringArrayConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.BigDecimalToIntegerConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.BigDecimalToLongConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.BigDecimalToStringConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.BooleanToStringConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.IntegerToStringConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.LongToDateConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.LongToIntegerConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.LongToStringConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToArrayListConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToBigDecimalConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToBooleanConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToCalendarConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToDateConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToDateOnlyConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToDoubleConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToHashMapConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToHashSetConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToIntegerConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToListConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToLongConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:import org.ruauframework.util.type.converter.StringToStringArrayConverter;
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:@RuueConfiguration
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:public class RuueUtilConfig {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static DefaultJsonSerializer ruauUtilDefaultJsonSerializer() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new DefaultJsonSerializer();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static SourceControlAdapter ruauUtilSourceControlAdapter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new SourceControlAdapterImpl();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilArrayListToBooleanArrayConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new ArrayListToBooleanArrayConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilArrayListToDateArrayConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new ArrayListToDateArrayConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilArrayListToIntegerArrayConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new ArrayListToIntegerArrayConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilArrayListToStringArrayConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new ArrayListToStringArrayConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilBigDecimalToIntegerConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new BigDecimalToIntegerConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilBigDecimalToLongConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new BigDecimalToLongConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilBigDecimalToStringConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new BigDecimalToStringConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilBooleanToStringConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new BooleanToStringConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilIntegerToStringConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilLongToDateConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new LongToDateConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilLongToIntegerConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilLongToStringConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToArrayListConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToArrayListConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToBigDecimalConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToBigDecimalConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToBooleanConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToBooleanConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToCalendarConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToCalendarConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToDateConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToDateConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToDateOnlyConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToDateOnlyConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToDoubleConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToHashMapConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToHashMapConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToHashSetConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToHashSetConverter();
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToIntegerConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToListConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToLongConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:    public static Converter<?, ?> ruauUtilStringToStringArrayConverter() {
ruau/ruau-util/src/main/java/configuration/RuueUtilConfig.java:        return new StringToStringArrayConverter();
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * Copyright (C) 2013 salesforce.mok, inc.
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * you may not use this file except in mokpliance with the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * You may obtain a copy of the License at
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * See the License for the specific language governing permissions and
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java: * limitations under the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java:package org.ruauframework.util;
ruau/ruau-util/src/main/java/org/ruauframework/util/Utf8InputStreamReader.java:import java.io.IOException;
