ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:     "attributes":{"values": {"value":"New tab content"}}});        
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:        <p>To add a tab dynamically, set the tab's parameters and fire the <code>addTab</code> event. The new tab will be added after the last tab. To change its position,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:        set <code>index: 0</code> in <code>e.setParams()</code>, which adds a tab at the head of the tabset in this case.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:var e = cmp.find("myTabSet").get("e.addTab");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:e.setParams({tab: {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:                    "name": name,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:                               "componentDef": { descriptor:"markup://ruau:text" },
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:                                 "attributes": {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:                                     "values": { "value": content }
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:    </ruau:description>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:    <ruau:example name="tabset" ref="uiExamples:tabsetExample" label="Using ui:tabset">
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:        <p>This example shows different ways to implement a tabset.</p>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:    </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	helper.initTabs(cmp);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    closeTab: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	helper.closeTab(cmp, helper.getTabIndexFromEvent(cmp, evt));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    removeTab: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        helper.removeTab(cmp, helper.getTabIndexFromEvent(cmp, evt));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    addTab: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	helper.addTab(cmp, evt.getParam("index"), evt.getParam("tab"), evt.getParam("callback"));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    getActiveTab: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	var callback = evt.getParam("callback");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	if (typeof callback === "function") {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	    var tab = helper.getActiveTab(cmp);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	    var index = cmp._tabCollection.getTabIndex({"tab": tab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	    callback({"index": index, "tab": tab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    activateTab: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        var index = helper.getTabIndexFromEvent(cmp, evt);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        var params = evt.getParams();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        params.index = index;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        if (helper.fireBeforeActiveEvent(cmp, params)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    onTabActivated: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        var index = evt.getParam("index");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:        if (helper.fireBeforeActiveEvent(cmp, evt.getParams())) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    onTabClosed: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetController.js:    	helper.removeTabBody(cmp, evt.getParam("index"));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Set tab as active or deactive
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Component} cmp An instance of ui:tabset componen.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Number} index Index position of the tab to activate. 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         var active = option.active;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         var index = option.index;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         var tab = option.tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         if (typeof active === "undefined") {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             //default to true
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             active = true;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         if (!tab) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             tab = cmp._tabCollection.getTab(index);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         if (tab && this.fireBeforeActiveEvent(cmp, {"tab": tab, "oldTab": this.getActiveTab(cmp)}, tab)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            // set active tabItem
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var e = cmp.find('tabBar').get('e.setActive');
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            e.setParams({"index": index, "active": active, "focus": option.focus}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            // activate body
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            this.setActiveTabBody(cmp, {"index":index, "active": active, "tab": tab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //fire tabset onActivate event
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp.get("e.onActivate").setParams({"tab": tab}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Add new tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Number} [index] The index of the new tab to insert to.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Object} tab The configuration for the new tab. If the "componentDef" is not defined, "ui:tab" is used. 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    addTab: function(cmp, index, tab, callback) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	var self = this, size = cmp._tabCollection.getSize();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	this.createTabComponent(cmp, tab, function(newTab) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:	    	// insert tab into current tab list
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	    cmp._tabCollection.insertTab(index, newTab);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		// add tab into tabBar
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	    var active = newTab.get("v.active");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	var e = cmp.find("tabBar").get("e.addTab");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	e.setParams({"index": index, "active": active, "tab": self.getTabItemConfig(cmp, newTab)}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	if (newTab.get("v.active")) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	    this.setActiveTabBody(cmp, {"index": index, "tab": newTab, "active": true});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	if (typeof callback === "function") {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        	    callback({"tab": newTab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Remove tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Component} cmp 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Integer} index Index position of tab to remove
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    removeTab: function(cmp, index) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var self = this, e = cmp.find('tabBar').get('e.closeTab');
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var callback = function(succeed) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                self.removeTabBody(cmp, index);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        e.setParams({"index": index, "callback": callback}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Returns the active tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    getActiveTab: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        return cmp._activeTab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    //=============================Private Functions==============================
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    fireBeforeActiveEvent: function(cmp, params, target) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var activate = true;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var target = target || cmp;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var callback = function(doActivate) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                activate = doActivate;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var tab = typeof params.index === "number" ? cmp._tabCollection.getTab(params.index) : params.tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var oldTab = typeof params.oldTab === "number" ? cmp._tabCollection.getTab(params.oldTab) : params.oldTab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        target.get("e.beforeActivate").setParams({"tab": tab, "oldTab": oldTab, "callback": callback}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        return activate;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    getTabIndexFromEvent: function(cmp, evt) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var index = evt.getParam("index"), name = evt.getParam("name"), tab = evt.getParam("tab");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:       //work around bug where Integer type param passed in as string
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            index = parseInt(index);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            index = cmp._tabCollection.getTabIndex({"name": name, "tab": tab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    setActiveTabBody: function(cmp, option) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        // set active tab body;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var tab = option.tab, evt;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (!tab.isRendered() && option.active) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            // manually render tab component instead of setting v.body to avoid rerendering of all the tabs
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            this.renderTabBody(cmp, tab);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (option.active) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //deactivate current tabBody
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            if (cmp._activeTab && cmp._activeTab.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                evt = cmp._activeTab.get("e.setActive");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                evt.setParams({"active": false}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //fire event to curent tab to update status 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tab.get('e.setActive').setParams({active: true}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //save current active tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp._activeTab = tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        } else if (option.active === false && cmp._activeTab === tab){
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //deactivate tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tab.get('e.setActive').setParams({active: false}).fire();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp._activeTab = null;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    removeTabBody: function(cmp, index) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var activeIndex = cmp._tabCollection.getTabIndex({"tab": cmp._activeTab});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        cmp._tabCollection.removeTab(index);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	var size = cmp._tabCollection.getSize();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	if (size > 0 && index === activeIndex) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	    //activate next tab, or previous tabif the removed tab is the last one
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Initialize tabs
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    initTabs: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var tabConfigs = cmp.get("v.tabs");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        cmp._tabCollection = this.createTabCollection();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (tabConfigs&&tabConfigs.length > 0) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            this.createTabsFromAttribute(cmp, tabConfigs);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            //iterate v.body to find instances of ui:tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var result = this.getTabsFromBody(cmp);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp._activeTabIndex = result.activeIndex;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp._tabCollection.init(result.tabs, result.tabIds, result.tabNames);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cmp.set('v.tabItems', result.tabItemConfigs, true);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    createTabsFromAttribute: function(cmp, tabConfigs) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:      //construct tabs from pass-in tab objects
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var tabComponents = [], tabIds = [], tabItems = [], tabNames = [], activeIndex = 0, 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            lazyRendering = cmp.get("v.lazyRenderTabs"),
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            count = 0, total = tabConfigs.length - 1;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var callback = function(newTab) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var id = newTab.getGlobalId(),
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                name = newTab.get("v.name");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tabIds.push(id);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tabComponents[id] = newTab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tabItems.push(this.getTabItemConfig(cmp, newTab));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            if (name) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                tabNames[name] = {"tabId": id};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            if (newTab.get("v.active")) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                activeIndex = count;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            if (count === total) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                cmp._activeTabIndex = activeIndex;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                cmp._tabCollection.init(tabComponents, tabIds, tabNames);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                cmp.set('v.tabItems', tabItems);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                if (!lazyRendering) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                    cmp.set('v.body', tabComponents);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        for (var i=0; i<tabConfigs.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            this.createTabComponent(cmp, tabConfigs[i], callback);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    getTabsFromBody: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	var tabs = [], tabIds = [], tabItemConfigs =[], tabNames = [],
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	    //default active tab to first tab
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	    activeTab = 0;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	// get all instances of ui:tab in the body
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	tabCmps = this.getTabComponents(cmp.getConcreteComponent().get('v.body'));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	for (var i=0, len=tabCmps.length; i<len; i++) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		var tab = tabCmps[i],
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		    id = tab.getGlobalId(),
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		    name = tab.get("v.name");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		if (tab.get('v.active')) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    			activeTab = i;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		if (name) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		    tabNames[name] = {"tabId": id, "index": i};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		tabIds.push(id);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		tabItemConfigs.push(this.getTabItemConfig(cmp, tab));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		tabs[id] = tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	return {"tabs": tabs, "tabIds": tabIds, "activeIndex": activeTab, "tabItemConfigs": tabItemConfigs, "tabNames": tabNames};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    createTabComponent: function(cmp, tabConfig, callback, async) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var cd, config;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (!$A.util.isObject(tabConfig)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (tabConfig.componentDef) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            cd = tabConfig.componentDef;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            delete tabConfig.componentDef;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (!tabConfig.body) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            tabConfig.body = [];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        config = {"componentDef": cd, attributes: {values: tabConfig}};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        $A.componentService.newComponentAsync(this, callback, config);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Get configurations for ui:tabbar to construct tabItems
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @param {Object} tab ui:tab component
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    getTabItemConfig: function(cmp, tab) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	var config={}, values = {},
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		tabItemDef = this.CONSTANTS.TAB_ITEM_DEF;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		// Iterate all the attributes ui:tabItem and find the values in ui:tab component
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		var attrDefs = compService.getDef(tabItemDef).getAttributeDefs();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		attrDefs.each(function(def){
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    			var name = def.getDescriptor().getName();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    			//don't want to pass the body to tabItems
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    			if (name != "body") {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                    values[name] = tab.get("v." + name);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		values["ariaControlId"] = tab.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		config["attributes"] = {"values": values};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		config["componentDef"] = tabItemDef;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    getTabComponents: function(body) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var type = "ui:tab";
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var ret = [];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        for(var i=0;i<body.length;i++) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var c = body[i];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var inst = this._getTabComponent(c, type);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                ret = ret.concat(this.getTabComponents(this._getSuperest(c).get('v.body')));
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    _getTabComponent: function(cmp, type) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        if (cmp.isInstanceOf(type)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var s = cmp.getSuper();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                return this._getTabComponent(s, type);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:        var s = cmp.getSuper();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            var ancestor = this._getSuperest(s);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:            if (ancestor) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                return ancestor;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Render tab component to tabContainer
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    renderTabBody: function(cmp, tabComponent) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js://cmp.find("tabContainer").set("v.body",tabComponent);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	var container = cmp.find("tabContainer").getElement(),
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    		docFrag = document.createDocumentFragment();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	$A.render(tabComponent, docFrag);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:		$A.afterRender(tabComponent);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:		container.appendChild(docFrag);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * Clean up
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	 cmp._tabCollection.destroy();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:    	 delete cmp._tabCollection;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:      * Returns an object that wraps the a collection of tabs.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:      * @private
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:     createTabCollection: function() {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         var TabCollection = function(){
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             this.tabComponents = [];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             this.tabIds = [];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             this.tabNames = [];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         TabCollection.prototype = {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             init: function(tabs, tabIds, tabNames) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 this.tabComponents = tabs;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 this.tabIds = tabIds;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 this.tabNames = tabNames;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             getTabIndex: function(option) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 var index = -1;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 if (option.name) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     var name = this.tabNames[option.name];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     if (name) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                         index = $A.util.arrayIndexOf(this.tabIds, name.tabId);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 } else if ($A.util.isComponent(option.tab)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     var gId = option.tab.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     index = $A.util.arrayIndexOf(this.tabIds, gId);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             getTab: function(index){
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 var tab = null;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     tab = this.tabComponents[this.tabIds[index]];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 return tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             removeTab: function(index) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 var total = this.tabIds.length;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 if ($A.util.isNumber(index) && index >=0 && index < this.tabIds.length) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     var id = this.tabIds.splice(index, 1);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     var tab = this.tabComponents[id[0]];
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     tab.destroy(true);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:             insertTab: function(index, tab) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 if ($A.util.isComponent(tab)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     var id = tab.getGlobalId(),
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                         name = tab.get("v.name");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     if (name) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                         this.tabNames[name] = {"tabId": id};
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     this.tabIds.splice(index, 0, id);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     this.tabComponents[id] = tab;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 return this.tabIds.length;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 var tabs = this.tabComponents;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 for (var id in tabs) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                     if (tabs.hasOwnProperty(id)) {
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                         tabs[id].destroy(true);
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 this.tabIds = null;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:                 this.tabComponents = null;
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         return new TabCollection();
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         TAB_DEF : "markup://ui:tab",
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetHelper.js:         TAB_ITEM_DEF : "markup://ui:tabItem"
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:<ruau:component extensible="true" implements="ui:visible" support="GA" description="A tab set that displays a list of tabs in an unordered list.">
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:attribute name="tabs" type="List" description="The collection of objects to construct tabs." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:attribute name="tabItems" access="private" type="List" description="Use internally for passing a list of tab items to ui:tabBar component." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:attribute name="class" type="String" description="A CSS style to be attached to the component. This style is added in addition to base styles output by the component." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:attribute name="lazyRenderTabs" type="Boolean" default="false" description="If true, contained ui:tab components are rendered only when they are activated." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="addTab" type="ui:tabsetEvent" description="Add new tab to the component." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="removeTab" type="ui:tabsetEvent" description="Remove a tab from the component." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="activateTab" type="ui:tabsetEvent" description="Activate a tab." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="getActiveTab" type="ui:tabsetEvent" description="Get the currently active tab." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="beforeActivate" type="ui:tabsetEvent" description="The event is triggered before the tab is activated. Can be canceled to prevent the tab from activating." />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:registerevent name="onActivate" type="ui:tabsetEvent" description="The event is triggered when the tab is activated."/>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.onInit}" />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:handler name="addTab" action="{!c.addTab}" />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:handler name="removeTab" action="{!c.removeTab}" />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:handler name="activateTab" action="{!c.activateTab}" />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <ruau:handler name="getActiveTab" action="{!c.getActiveTab}" />
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:    <div class="{!v.class}" ruau:id="tabContainer">
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:        <ui:tabBar ruau:id="tabBar" tabs="{!v.tabItems}"
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:           onTabActivated="{!c.onTabActivated}"
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:           onTabClosed="{!c.onTabClosed}" 
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:        <ruau:if isTrue="{!v.lazyRenderTabs == false}">
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:        </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabset.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js:    afterRender : function(cmp, helper){
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js:        helper.setActive(cmp, {"index": cmp._activeTabIndex});
ruau/ruau-components/src/nAmE/components/ui/tabset/tabsetRenderer.js:    	} finally {
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:<ruau:event type="COMPONENT" description="Used to trigger initialization of async component.">
ruau/ruau-components/src/nAmE/components/ui/load/load.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/select/select.evt:<ruau:event type="COMPONENT" extends="ui:baseDOMEvent" support="GA" description="Indicates that the user has made a selection."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:<ruau:component template="ruaudev:blankTemplate" extensible="true">
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:<ruau:attribute name="lastMod" type="String" default=""/>
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:<ruau:attribute name="resourceURLs" type="String" default=""/>CACHE MANIFEST
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:# LAST MOD: {!v.lastMod}
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:/ruauFW/resources/ruau/resetCSS.css
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:/ruauFW/resources/ruau/normalize.css
ruau/ruau-components/src/nAmE/components/ui/manifest/manifest.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:<ruau:interface support="GA">
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="class" type="String" access="GLOBAL" description="A CSS style to be attached to the component. This style is added in addition to base styles output by the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="dir" type="String" default="ltr" description="The direction in which the component should be read. Possible values are &quot;rtl&quot; (right to left) and &quot;ltr&quot; (left to right). Default value is &quot;ltr&quot;."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="label" type="String" description="The text displayed on the component. In the rendered HTML output, where possible the label is associated with the HTML element to improve accessibility."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="namespaceOverride" type="String" description="Overrides the namespace for this component with the supplied text."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="actionable" type="Boolean" default="true" description="Specifies whether the component can have an action performed on it. For example, to control whether the component can be clicked."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="role" type="String" description="Defines the component to help orient the user. Use this attribute for accessibility or component description. Possible values: header, main, note, and so on."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="ariaDescribedBy" type="String" default="" description="Identifies the HTML element (or elements) that describes the component. Use this attribute for accessibility or component description."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="value" type="Object" description="References the controller class variable that is associated with the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:attribute name="visible" type="Boolean" default="true" description="Controls the visibility of the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="click" type="ui:click" access="GLOBAL" description="The event fired when the user clicks on the component." />
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="dblclick" type="ui:dblclick" access="GLOBAL" description="The event fired when the user double-clicks the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="mousedown" type="ui:mousedown" access="GLOBAL" description="The event fired when the user clicks a mouse button over the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="mousemove" type="ui:mousemove" access="GLOBAL" description="The event fired when the user moves the mouse pointer over the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="mouseout" type="ui:mouseout" access="GLOBAL" description="The event fired when the user moves the mouse pointer away from the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="mouseover" type="ui:mouseover" access="GLOBAL" description="The event fired when the user moves the mouse pointer over the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:    <ruau:registerEvent name="mouseup" type="ui:mouseup" access="GLOBAL" description="The event fired when the user releases the mouse button over the component."/>
ruau/ruau-components/src/nAmE/components/ui/visible/visible.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/mouseout/mouseout.evt:<ruau:event type="COMPONENT" extends="ui:baseMouseEvent" support="GA" description="Indicates that the user has moved the mouse pointer away from the component."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:    handleClick: function (component) {
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:        if ($A.util.getBooleanValue(concreteCmp.get("v.stopClickPropagation"))) {
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:            $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:        this.handleTriggerPress(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:        var pressEvent = component.get("e.menuTriggerPress");
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerHelper.js:        pressEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerController.js:        var concreteHelper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js:        helper.addTriggerDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTriggerRenderer.js:        helper.addTriggerDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:<ruau:component access="GLOBAL" support="GA" extensible="true" extends="ui:popupTrigger" description="A trigger that expands and collapses a menu, used in a ui:menu component.">
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    <ruau:registerevent access="GLOBAL" name="menuTriggerPress" type="ui:menuTriggerPress" description="The event that is fired when the trigger is clicked."/>
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    <ruau:handler name="click" action="{!c.onClick}"/>
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    <ruau:set attribute="trigger">
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:        <div id="{!globalId}" ruau:id="menuTrigger" aria-haspopup="true">
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:    </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/menuTrigger/menuTrigger.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: .THIS thead {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: 	background-color: #f0f1f2;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:.THIS .calGrid {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:    border-collapse: collapse;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:.THIS .calGrid th {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:    font-family: 'ProximaNovaSoft-Semibold';
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:    padding: 7px;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:    text-align: center;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css: .THIS .calGrid .calRow td {    
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:@media only screen and (max-width: 999px) and (orientation: portrait) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:    .THIS .calGrid {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.css:        border-collapse: collapse;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:<ruau:component extensible="true" description="Provides the monthly grid view in a ui:datePicker component.">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="class" type="String" description="A CSS style to be attached to the component."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="date" type="Integer" description="The currently highlighted date."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="hasTime" type="Boolean" default="false" description="Indicate if the parent datePicker component supports time picker."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="month" type="Integer" description="The currently rendered month."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="year" type="Integer" description="The currently rendered year."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="selectedDate" type="Date" description="The selected date."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <!-- private attributes -->
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:attribute name="_setFocus" type="Boolean" default="true" description="Control if we should focus any date when we render the month."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:registerevent name="hide" type="ui:change" description="The event fired when the date picker is hidden from view."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:registerevent name="focus" type="ui:focus" description="The event fired when a date is focused."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:registerevent name="selectDate" type="ui:selectDate" description="The event fired when a date is selected."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:registerevent name="updateCalendar" type="ui:updateCalendar" description="The event fired when the calendar is updated."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:registerevent name="updateCalendarTitle" type="ui:updateCalendarTitle" description="The event fired when the calendar month and year are updated."/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:handler name="focus" action="{!c.focus}"/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <ruau:handler name="updateCalendar" action="{!c.updateCalendar}"/>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <div class="{!v.class}">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    <table class="calGrid" ruau:id="datePickerGrid">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:        <thead>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <ruau:iteration items="{!$Locale.nameOfWeekdays}" var="day">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                    <th scope="col" class="dayOfWeek">{!day.shortName}</th>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                </ruau:iteration>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:        </thead>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow1" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="0" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="1" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="2" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="3" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="4" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="5" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="6" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow2" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="7" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="8" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="9" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="10" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="11" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="12" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="13" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow3" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="14" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="15" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="16" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="17" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="18" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="19" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="20" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow4" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="21" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="22" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="23" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="24" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="25" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="26" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="27" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow5" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="28" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="29" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="30" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="31" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="32" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="33" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="34" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:            <tr ruau:id="calRow6" class="calRow">
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="35" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="36" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="37" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="38" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="39" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="40" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:                <td><ui:dayInMonthCell ruau:id="41" label="0"/></td>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:    </table>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGrid.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:        var shouldRender = false;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:        var attributes = component.getDef().getAttributeDefs();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:        attributes.each(function(attributeDef) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:            var name = attributeDef.getDescriptor().getName();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridRenderer.js:            if (name !== "date" && component.isDirty("v." + name)) { // if only date changes, no need to rerender
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    WeekdayLabels: [{
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Sunday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Sun"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Monday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Mon"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Tuesday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Tue"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Wednesday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Wed"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Thursday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Thu"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Friday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Fri"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        fullName: "Saturday",
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        shortName: "Sat"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    changeCalendar: function(component, localId, deltaMonth, deltaYear) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var cellCmp = component.find(localId);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = cellCmp.get("v.label");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        this.changeMonthYear(component, deltaMonth, deltaYear, date);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    changeMonthYear: function(component, monthChange, yearChange, date) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var currentDate = new Date(component.get("v.year"), component.get("v.month"), date);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var targetDate = new Date(currentDate.getFullYear() + yearChange,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                                  currentDate.getMonth() + monthChange,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var daysInMonth = moment(targetDate).daysInMonth();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (daysInMonth < date) { // The target month doesn't have the current date. Just set it to the last date.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            date = daysInMonth;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        component.set("v.year", targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        component.set("v.month", targetDate.getMonth());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        component.set("v.date", date);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        this.updateTitle(component, targetDate.getMonth(), targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    dateCompare: function(date1, date2) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (date1.getFullYear() != date2.getFullYear()) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            return date1.getFullYear() - date2.getFullYear();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            if (date1.getMonth() != date2.getMonth()) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                return date1.getMonth() - date2.getMonth();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                return date1.getDate() - date2.getDate();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:     * Java style date comparisons. Compares by day, month, and year only.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    dateEquals: function(date1, date2) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        return date1 && date2 && this.dateCompare(date1, date2) === 0;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:     * Find the cell component for a specific date in a month.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:     * @date - Date object
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    findDateComponent: function(component, date) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var firstDate = new Date(date.getTime());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        firstDate.setDate(1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var initialPos = firstDate.getDay();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var pos = initialPos + date.getDate() - 1;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:     * generates the days for the current selected month.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    generateMonth: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var dayOfMonth = component.get("v.date");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var month = component.get("v.month");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var year = component.get("v.year");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = new Date(year, month, dayOfMonth);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var selectedDate;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var mDate = moment(component.get("v.selectedDate"), "YYYY-MM-DD");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (mDate.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            selectedDate = mDate.toDate();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var today = new Date();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var d = new Date();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        d.setDate(1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        d.setFullYear(year);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        // java days are indexed from 1-7, javascript 0-6
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        // The startPoint will indicate the first date displayed at the top-left
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        // corner of the calendar. Negative dates in JS will subtract days from
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var startOfWeek = 0;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var startPoint = startOfWeek - d.getDay() + 1;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        d.setDate(startPoint);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        for (var i = 0; i < 42; i++) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var cellCmp = component.find(i);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                var dayOfWeek = d.getDay();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                var className;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                if (dayOfWeek == 0 || dayOfWeek == 6) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className = "weekend";
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className = "weekday";
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                if (d.getMonth() == month - 1 || d.getFullYear() == year - 1) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className += " prevMonth"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                } else if (d.getMonth() == month + 1 || d.getFullYear() == year + 1) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className += " nextMonth"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                if (this.dateEquals(d, today)) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className += " todayDate";
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                if (this.dateEquals(d, selectedDate)) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    className += " selectedDate"
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    cellCmp.set("v.tabIndex", 0);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    cellCmp.set("v.tabIndex", -1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                cellCmp.set("v.class", className);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                cellCmp.set("v.label", d.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                cellCmp.set("v.value", d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                var setFocus = component.get("v._setFocus");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                if (this.dateEquals(d, date) && setFocus === true) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                    cellCmp.set("v.ariaSelected", false);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            d.setDate(d.getDate() + 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    getEventTarget: function(e) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        return (window.event) ? e.srcElement : e.target;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    goToFirstOfMonth: function(component, localId) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = new Date(component.get("v.year"), component.get("v.month"), 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var targetId = date.getDay();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var targetCellCmp = component.find(targetId);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        targetCellCmp.getElement().focus();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        component.set("v.date", 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    goToLastOfMonth: function(component, localId) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = new Date(component.get("v.year"), component.get("v.month") + 1, 0);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var targetCellCmp = this.findDateComponent(component, date);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (targetCellCmp) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            targetCellCmp.getElement().focus();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.date", targetCellCmp.get("v.label"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    handleArrowKey: function(component, localId, deltaDays) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var currentYear = component.get("v.year");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var currentMonth = component.get("v.month");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var cellCmp = component.find(localId);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = new Date(currentYear, currentMonth, cellCmp.get("v.label"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var targetDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() + deltaDays);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (targetDate.getFullYear() != currentYear || targetDate.getMonth() != currentMonth) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.year", targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.month", targetDate.getMonth());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.date", targetDate.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.updateTitle(component, targetDate.getMonth(), targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var targetCellCmp = component.find(parseInt(localId,10) + deltaDays);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            targetCellCmp.getElement().focus();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.date", targetCellCmp.get("v.label"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    handleESC: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:     * Support keyboard interaction.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    handleKeydown: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var cellCmp = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var keyCode = event.getParam("keyCode");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var shiftKey = event.getParam("shiftKey");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var ctrlKey = event.getParam("ctrlKey");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var domEvent = event.getParam("domEvent");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var localId = cellCmp.getLocalId();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (keyCode == 39) {  // right arrow key
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleArrowKey(component, localId, 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 37) { // left arrow key
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleArrowKey(component, localId, -1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 38) { // up arrow key
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleArrowKey(component, localId, -7);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 40) { // down arrow key
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleArrowKey(component, localId, 7);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 9 && shiftKey == true) { // Tab + shift
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 33 && shiftKey == true) { // Page Up + shift
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.changeCalendar(component, localId, 0, -1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 34 && shiftKey == true) { // Page Down + shift
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.changeCalendar(component, localId, 0, 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 32) { // space bar
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleSpaceBar(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.goToFirstOfMonth(component, localId);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.goToLastOfMonth(component, localId);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 33 && shiftKey != true) { // Page Up
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.changeCalendar(component, localId, -1, 0);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else if (keyCode == 34 && shiftKey != true) { // Page Down
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.changeCalendar(component, localId, 1, 0            );
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            domEvent.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            this.handleESC(component);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    handleSpaceBar: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var hasTime = $A.util.getBooleanValue(component.get("v.hasTime"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (hasTime === true) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        this.selectDate(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        this.generateMonth(component);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    selectDate: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var source = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var hasTime = $A.util.getBooleanValue(component.get("v.hasTime"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (hasTime === true) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var firstDate = new Date(component.get("v.year"), component.get("v.month"), 1);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var firstDateId = parseInt(firstDate.getDay(),10);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var lastDate = new Date(component.get("v.year"), component.get("v.month") + 1, 0);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var lastDateCellCmp = this.findDateComponent(component, lastDate);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var lastDateId = parseInt(lastDateCellCmp.getLocalId(),10);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var currentId = parseInt(source.getLocalId(),10);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var currentDate = source.get("v.label");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            if (currentId < firstDateId) { // previous month
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                var targetDate = new Date(component.get("v.year"), component.get("v.month") - 1, currentDate);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.year", targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.month", targetDate.getMonth());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.date", targetDate.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                this.updateTitle(component, targetDate.getMonth(), targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            } else if (currentId > lastDateId) { // next month
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                var targetDate = new Date(component.get("v.year"), component.get("v.month") + 1, currentDate);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.year", targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.month", targetDate.getMonth());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.date", targetDate.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                this.updateTitle(component, targetDate.getMonth(), targetDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:                component.set("v.date", currentDate);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            component.set("v.selectedDate", component.get("v.year") + "-" + (component.get("v.month") + 1) + "-" + component.get("v.date"));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        } else { // fire selectdate event
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            var selectDateEvent = component.getEvent("selectDate");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            selectDateEvent.setParams({"value": source.get("v.value")});
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            selectDateEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var date = component.get("v.date");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        if (!date) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:            date = 1;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var year = component.get("v.year");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var month = component.get("v.month");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var cellCmp = this.findDateComponent(component, new Date(year, month, date));
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:    updateTitle: function(component, month, year) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        var updateTitleEvent = component.get("e.updateCalendarTitle");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        updateTitleEvent.setParams({month: month, year: year});
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridHelper.js:        updateTitleEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        for (var i = 0; i < 42; i++) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:            var cellCmp = component.find(i);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:                cellCmp.addHandler("click", component, "c.handleClick");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:                cellCmp.addHandler("keydown", component, "c.handleKeydown");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:                cellCmp.addHandler("focus", component, "c.handleFocus");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:                cellCmp.addHandler("blur", component, "c.handleBlur");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:    handleBlur: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var source = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:            source.set("v.ariaSelected", false);            
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:    handleClick: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        helper.selectDate(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:    handleFocus: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var source = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:            source.set("v.ariaSelected", true);            
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:    handleKeydown: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        helper.handleKeydown(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:    updateCalendar: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var date = component.get("v.date");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        if (!date) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:            date = 1;
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var monthChange = event.getParam("monthChange");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var yearChange = event.getParam("yearChange");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        var setFocus = event.getParam("setFocus");
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        if (setFocus === false) {
ruau/ruau-components/src/nAmE/components/ui/datePickerGrid/datePickerGridController.js:        helper.changeMonthYear(component, monthChange, yearChange, date);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:    	var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:        if ($A.util.getBooleanValue(concreteCmp.get("v.stopClickPropagation"))) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:            $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:        _helper.handleClick(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:     * popupToggle.evt is an event that custom trigger events can broadcast
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:     * which is caught by popup and responded to accordingly
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerController.js:    	helper.handlePopupToggle(component, event);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js:        helper.addTriggerDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerRenderer.js:        helper.addTriggerDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    addTriggerDomEvents : function(component) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:        var events = ["click", "keydown"];
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:        for (var i=0, len=events.length; i < len; i++) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            if (!component.hasEventHandler(events[i])) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:                this.addDomHandler(component, events[i]);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:     * preEventFiring is a method from ui:interactive that is meant to be overridden
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:     * it allows developers to respond to dome events that are registered by addTriggerDomeEvents (see above)
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            if (event.keyCode === 32) { // space key
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:                event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            	event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            	this.firePopupEvent(component, "e.popupTargetShow"); // for key arrows, we want to only show the target since the menu should stay visible so users can interact with it 
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            } else if (event.keyCode === 9 || event.keyCode === 27) { // tab or escape 
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            	this.firePopupEvent(component, "e.popupTargetHide");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            this.firePopupEvent(component, "e.popupKeyboardEvent", {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    handleClick: function(component) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:        this.handleTriggerPress(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    handleTriggerPress: function(component) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    showTarget: function(component) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    	this.firePopupEvent(component, "e.popupTargetShow");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    hideTarget: function(component) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    	this.firePopupEvent(component, "e.popupTargetHide");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    handlePopupToggle: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    	var triggerParams = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:			localTriggerDiv = component.find('popupTriggerElement').getElement(),
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:			eventTriggerDiv = triggerParams.component.getElement();
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:		if ($A.util.contains(localTriggerDiv, eventTriggerDiv)) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:			if (triggerParams.show) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:				this.showTarget(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:				this.hideTarget(component);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    firePopupEvent: function(component, eventName, params) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    	var event = component.getConcreteComponent().get(eventName);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:    	if (params) {
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTriggerHelper.js:            event.setParams(params);
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:<ruau:component extensible="true" extends="ui:interactive" description="A trigger that expands and collapses a menu, used in a ui:menu component." support="GA">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:attribute access="GLOBAL" name="title" type="String" default="" description="The text to display as a tooltip when the mouse pointer hovers over this component."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:attribute name="trigger" type="Ruue.Component[]" description="Used to override the default HTML and trigger event handling. If used, developer must trigger show/hide events for popup target since v.trigger is not wrapped in a link tag, it is wrapped in a plain div."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:attribute name="stopClickPropagation" type="Boolean" default="false" description="Prevents the click event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:registerEvent name="popupTriggerPress" type="ui:popupTriggerPress" description="The event fired when a popup trigger is pressed."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:registerEvent name="popupTargetShow" type="ui:popupTargetShow" description="The trigger fires this event to show the target."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:registerEvent name="popupTargetHide" type="ui:popupTargetHide" description="The trigger fires this event to hide the target."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:registerEvent name="popupKeyboardEvent" type="ui:popupKeyboardEvent" description="The event fired when a user interacts with a popup via the keyboard."/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <ruau:handler event="ui:popupTargetToggle" action="{!c.onPopupToggle}"/>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:    <div id="{!globalId}" ruau:id="popupTrigger" aria-haspopup="true">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    <ruau:if isTrue="{!v.trigger.length > 0}">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    	<div ruau:id="popupTriggerElement">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    	<ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    		<a ruau:id="popupTriggerElement" title="{!v.title}" class="{!v.class}" onclick="{!c.onClick}">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    	<ruau:if isTrue="{!v.label != null}">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    		{!v.label}
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    		<ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    		</ruau:set>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    	</ruau:if>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:			    	<span class="assistiveText">{!v.title}</span>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:		    	</a>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    	</ruau:set>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:	    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/popupTrigger/popupTrigger.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:<ruau:event type="COMPONENT">
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    <ruau:attribute name="monthChange" type="Integer"/>
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    <ruau:attribute name="yearChange" type="Integer"/>
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:    <ruau:attribute name="setFocus" type="Boolean" default="true"/>
ruau/ruau-components/src/nAmE/components/ui/updateCalendar/updateCalendar.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:     * After the initial render, add the active DOM attribute if necessary
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:    afterRender : function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:        var active = cmp.get('v.active');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:        if (active) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:            cmp.getElement().setAttribute('active', 'true');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:     * When the active node changes, we may need to scroll it into view.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:     * Expansion changes and the like mean we must wait until rerender time to
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:     * react to this event.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:        if (cmp.isDirty("v.active")) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:            var active = $A.util.getBooleanValue(cmp.get("v.active"));
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:            var elem = cmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:            if (active) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:                elem.setAttribute('active', 'true');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:					elem.scrollIntoView(false);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeRenderer.js:                elem.removeAttribute('active');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * When the input selection changes, update the expanded attribute
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * accordingly.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:    handleInputChange : function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        cmp.set('v.expanded', event.target.checked);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * Event handler to construct a visitor/traverser pair.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * Both are currently defined as structural types. Visitors have the
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * methods: boolean visit(node), void accept(node), void endVisit(node).
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * Traversers have the method: void traverse(node).
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * Meta-Comment: Any way to usefully define & expose real types, especially
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param cmp
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     *            the treeNode cmp that triggered this action.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param event
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     *            the ui:makeVisitor event
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param helper
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:    makeVisitor : function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var visitor;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var visitorParam = event.getParam('visitor');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        if ($A.util.isUndefinedOrNull(visitorParam)) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:            visitor = helper["init" + visitorParam]();
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        // For now, we only allow traversers defined in the treeNode bundle.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var traverser = helper["init" + event.getParam("traverser")]();
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var callback = event.getParam("callback");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        callback({
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:            'traverser' : traverser
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * The action handler for ui:traverseEvent.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * The event parameters 'visitor' and 'traverser' define the visitation
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * behavior and traversal logic. In general, the given traverser will
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * recursively fire the traverseEvent on this node's children.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param cmp
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     *            the treeNode to traverse
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param event
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     *            the ui:traverseEvent containing the visitor and traverser pair
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * @param helper
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:    traverse : function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var visitor = event.getParam("visitor");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var traverser = event.getParam("traverser");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        traverser.visitor = visitor;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        traverser.traverse(cmp);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:     * Return an array containing the children nodes of this node to the callback.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        var ret = helper.getChildren(cmp);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeController.js:        event.getParam('callback')(ret);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.css:    padding-bottom: 4px;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:<ruau:component extensible="true" implements="ui:visitable">
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="href" type="String"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	   description="For a leaf node, the link associated with the element. Unsupported for non-leaf nodes." />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="title" type="String" description="The label to display in the UI." />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="leafClass" type="String" description="A custom class to apply if the node is a leaf" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="class" type="String" description="A custom class to apply to this node" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="expanded" type="Boolean" default="false"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	   description="The expansion state of the node. Changing this is a no-op for leaf nodes." />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:    <ruau:attribute name="active" type="Boolean"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:       description="The active state of the node. If true, then this node's &lt;li&gt; will have the DOM attribute active='true' and the node will scroll into view if necessary. "/>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="hidden" type="Boolean" default="false"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:attribute name="item" type="java://org.ruauframework.components.ui.TreeNode"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	   description="For nodes generated via a server-side model, the dictionary representing the TreeNode object." />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:handler name="traverse" action="{!c.traverse}" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:handler name="makeVisitor" action="{!c.makeVisitor}" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:registerEvent name="getChildren" type="ui:getChildren" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:handler name="getChildren" action="{!c.getChildren}" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	<ruau:if isTrue="{!!v.hidden}">
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:		<li class="{!(v.item.href != null || v.href != null ? 'file' : 'folder') + ' ' + v.class}" expanded='{!v.expanded}'>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:			<ruau:if isTrue="{!v.item.href != null || v.href != null}">
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:				<a href="{!v.item.href + v.href}" class="{!v.leafClass}">{!v.item.title + v.title}</a>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:				<ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:					<label for="{!'node_' + globalId}">{!v.item.title + v.title}</label>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	    		    <input type="checkbox" checked="{!v.expanded}" id="{!'node_' + globalId}"
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	    		        onchange="{!c.handleInputChange}"/>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:				</ruau:set>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:			</ruau:if>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:				<ruau:iteration items="{!v.item.children}" var="child">
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:					<ui:treeNode item="{!child}" ruau:id="modelNode" />
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:				</ruau:iteration>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:	</ruau:if>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNode.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Return the given node's children as an array. If the node is a leaf, then
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * return an empty array.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * @param node
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        // Start with the model nodes.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var ret = [].concat(node.find('modelNode') || []);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var children = node.get("v.body") || [];
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        for (var i = 0, n = children.length; i < n; i++) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            var child = children[i];
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            // Is it possible to simply make it an error to put anything but
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            // treenodes in the body at component validation time?
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            if (child.isInstanceOf("ui:treeNode")) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * All of the init* methods in this helper can be accessed by clients by
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * passing the latter portion (sans init) of the name as the appropriate
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * string argument to makeVisitor for the visitor or the traverser.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Meta-comment: This construction shows that the helper definition syntax
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * has some awkwardness:
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * 1) We have to jump through hoops to define real objects and resort to a
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * flyweight attachment of the object definition to the helper.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * 2) Ideally we could expose these objects as part of the public API.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Instead, we rely here on a manual string based API to expose the provided
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * traversers and visitors.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Return a new instance of a PostOrderTraverser.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:    initPostOrderTraverser : function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        if (!helper.PostOrderTraverser) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * The PostOrderTraverser will walk the tree by accepting all of
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * this node's children before accepting this node.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.PostOrderTraverser = function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.PostOrderTraverser.prototype.traverse = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                // traverse
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                var children = helper.getChildren(node);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                for ( var i = 0, n = children.length; i < n; i++) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                    var child = children[i];
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                    child.getEvent("traverse").setParams({
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                        "traverser" : this,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                // accept this node
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                this.visitor.accept(node);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        return new helper.PostOrderTraverser();
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Return a new instance of a PreOrderTraverser.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:    initPreOrderTraverser : function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        if (!helper.PreOrderTraverser) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.PreOrderTraverser = function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * The PreOrderTraverser will first accept this node and then accept
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * all of this node's children.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.PreOrderTraverser.prototype.traverse = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                // accept this node
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                this.visitor.accept(node);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                // traverse the children
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                var children = helper.getChildren(node);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                for (var i = 0, n = children.length; i < n; i++) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                    var child = children[i];
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                    child.getEvent("traverse").setParams({
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                        "traverser" : this,
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        return new helper.PreOrderTraverser();
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Return a new instance of a PrintVisitor.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * The PrintVisitor is a dummy visitor for debugging purposes: it
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * simply prints the title of the node and its level in the tree.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.PrintVisitor.prototype.accept = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:     * Return a new instance of an ApplyVisitor.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * The ApplyVisitor applies the given function to every node
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * accepted by the traverser.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * Use this visitor when the visitation need not be stateful or
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * conditional.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.ApplyVisitor.prototype.accept = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:    initCollapseVisitor : function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        if (!helper.CollapseVisitor) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * The CollapseVisitor intelligently collapses the tree: if we
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:             * encounter a collapsed node, then there is no need to visit any of
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.CollapseVisitor = function() {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.CollapseVisitor.prototype.visit = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                var expanded = node.get('v.expanded');
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                // we only need to visit expanded nodes.
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                return expanded;
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.CollapseVisitor.prototype.accept = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:                node.set("v.expanded", false);
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:            helper.CollapseVisitor.prototype.endVisit = function(node) {
ruau/ruau-components/src/nAmE/components/ui/treeNode/treeNodeHelper.js:        return new helper.CollapseVisitor();
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:<ruau:event type="COMPONENT" description="Event fired indicating that a component that handles showMore has no additional content to load.">
ruau/ruau-components/src/nAmE/components/ui/noMoreContent/noMoreContent.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:<ruau:event type="APPLICATION" description="Event fired to close a dialog window. Handled by ui:dialogManager.">
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    <ruau:attribute name="dialog" type="Ruue.Component" description="The dialog that should be closed."/>
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    <!-- create a separate event for alerts only that extend this event. move confirmClicked to that new one -->
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:    <ruau:attribute name="confirmClicked" type="Boolean" description="This property is 'true' if the confirmation button in an alert dialog was clicked, 'false' otherwise."/>
ruau/ruau-components/src/nAmE/components/ui/closeDialog/closeDialog.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:<ruau:component abstract="true" extensible="true" extends="ui:interactive" description="The base component of most output components." support="GA">
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:    <ruau:attribute name="value" type="Object" required="true" access="GLOBAL" description="The value displayed when the output is rendered."/>
ruau/ruau-components/src/nAmE/components/ui/output/output.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:<ruau:event type="APPLICATION" description="The event used by ui:panelManager to instantiate and show panel overlays, modal overlays, and panel sliders.">
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="title" type="String" description="the title of the window"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="titleDisplay" type="Boolean" description="Flag to hide title for accessibility"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="detail" type="String" description="the description of the window"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="icon" type="String" description="the icon for the panel The values need to match the iconFont glyphs(keys)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="body" type="Object" description="The main content of the panel/modal (normally an Array of ActionButtons or a component"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="headerActions" type="Ruue.Component[]" description="buttons to add to the header of the panel(only when modal is enabled)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="buttons" type="Ruue.Component[]" description="Buttons to add to the bottom of the window (only when panel is enabled"/>    
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="class" type="String" description="Additional css classes"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="animation" type="String" description="Animation to apply (default: from bottom)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:	<ruau:attribute name="isModal" type="Boolean" description="Indicates whether the panel is modal if true or non-modal if false"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:	<ruau:attribute name="isDialog" type="Boolean" description="Indicates whether the panel is a panelDialog"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="referenceElement" type="Object" description="The reference node to which the dialog should be positioned" />
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="isSlider" type="Boolean" description="True if panel is a panelSlider"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="closeOnClickOut" type="Boolean" description="Add listener to close on click outside"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="isScrollable" type="Boolean" description="Flag to create a scroller inside (default true)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="isTransient" type="Boolean" description="Flag to indicate if panel is one-time use and should be destroyed when hidden"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="removeHeader" type="Boolean" description="Flag to remove the header of the panel (non-modal)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="callbacks" type="Object" description="Panel callbacks fired during different phases of its lifecycle"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="show" type="Boolean" description="True if panel should be made visible after creation (default is false)."/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="instance" type="Ruue.Component[]" description="Existing panel instance to be displayed."/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="isFullScreen" type="Boolean" default="true" description="Indicates whether full screen is used on non-phone devices"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:	<ruau:attribute name="isVisible" type="Boolean" description="panel is visible or not"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:	<ruau:attribute name="closeOnModalClick" type="Boolean" description="Whether a click button in the modal area will close the panel"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:  	<ruau:attribute name="body" type="Ruue.Component[]" description="buttons to add to the header of the panel(only when modal is enabled)"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="button" type="Ruue.Component[]" description="Buttons to add to the bottom of the window (only when panel is enabled"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="buttonColor" type="String" description="CSS Background string for the button"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="buttonClass" type="String" description="CSS class string"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="slideFrom" type="String" description="String that identifies the animation values (defaults to right): left|right|top|bottom"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="iconKey" type="String" description="Default icon from the current font to put into the button"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="panelOutAltText" type="String" description="Alt text for icon when panel is open/slide out for accessibility"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="panelInAltText" type="String" description="Alt text for icon when panel is closed for accessibility"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="iconAltText" type="String" description="Icon alt text in panel"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:    <ruau:attribute name="iconTransformation" type="String" description="Css transformation on icon e.g flip,rotate or any other custom"/>
ruau/ruau-components/src/nAmE/components/ui/openPanel/openPanel.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:<ruau:event type="COMPONENT" support="Proto" description="Trigger a data fetching on autocomplete.">
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    <ruau:attribute name="parameters" type="Object" description="The parameters data provider can use to fetch data."/>
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:    <ruau:attribute name="index" type="Integer" description="From which data provider to fetch data."/>
ruau/ruau-components/src/nAmE/components/ui/fetchData/fetchData.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/column/column.cmp:<ruau:component extensible="true" abstract="true" extends="ui:listViewColumn" provider="java://org.ruauframework.component.ui.ListViewColumnProvider,js://ui.listViewColumn" support="GA" description="A column template used to define layout behavior in ui:listView." />
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:<ruau:event type="COMPONENT" support="PROTO" description="Indicates that the popup trigger is requesting to show a target.">
ruau/ruau-components/src/nAmE/components/ui/popupTargetShow/popupTargetShow.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that a component should update its default error component.">
ruau/ruau-components/src/nAmE/components/ui/updateError/updateError.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:     * Load components if there are registered components and concurrency limit is not reached
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:    loadComponents: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:        var numOfLoadingComponents = cmp._numOfLoadingComponents || 0;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:        var registeredComponents = cmp._registeredComponents || [];
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:        var maxConcurrency = cmp.get("v.maxConcurrency");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:        var asyncCmp = "";
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:        while(numOfLoadingComponents < maxConcurrency && registeredComponents.length > 0) {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:            // get the next registered component to load
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:       	    asyncCmp = registeredComponents.shift();
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:            // fire load event
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:            if(asyncCmp) {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:                asyncCmp.get("e.load").fire();
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:                // increment loadingComponents count
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:                numOfLoadingComponents += 1;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerHelper.js:                cmp._numOfLoadingComponents = numOfLoadingComponents;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:     * Test the new async component is queued correctly 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:     * and hit the max concurrency not dequeued
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    testComponentRegisterHitMaxConcurrency: {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        attributes: {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	maxConcurrency : 0 // set to 0 to mock hitting the max concurrency
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertUndefined(cmp._registeredComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        			"Registered component initial status is not correct.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertUndefined(cmp._numOfLoadingComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:					"Number of loading component initial status is not correct.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.get("e.ui:asyncComponentRegister").setParams({
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:                "asyncComponent": "toBeRegisteredCmp"
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	// Verify hit the max concurrency, and this new component stays in the registered components
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertEquals(1, cmp._registeredComponents.length, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertEquals("toBeRegisteredCmp", cmp._registeredComponents[0], 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertUndefined(cmp._numOfLoadingComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:					"Number of loading component should not be set because of hitting the max concurrency.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:     * Test the new async component is queued correctly 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:     * and not hit the max concurrency, so also dequeued and update the loading component number
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    testComponentRegisterNotHitMaxConcurrency: {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	var mockAsyncCmp = {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertUndefined(cmp._registeredComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        			"Registered component initial status is not correct.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertUndefined(cmp._numOfLoadingComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:					"Number of loading component initial status is not correct.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.get("e.ui:asyncComponentRegister").setParams({
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:                "asyncComponent": mockAsyncCmp
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	// Verify hit the max concurrency, and this new component stays in the registered components
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertEquals(0, cmp._registeredComponents.length, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        			"regeisteredComponent should already be dequeued.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:        	$A.test.assertEquals(1, cmp._numOfLoadingComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:					"Number of loading component should be set to 1.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:     * Test when asyncComponentLoaded event is called
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    testAsyncComponentLoaded : {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    		var mockAsyncCmp = {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    		// Initial _numOfLoadingComponents 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    		cmp._numOfLoadingComponents = 1;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    		$A.get("e.ui:asyncComponentLoaded").setParams({
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:            	asyncComponent: mockAsyncCmp
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:    		$A.test.assertEquals(0, cmp._numOfLoadingComponents, 
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerTest.js:					"Number of loading component should be set to 0.");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:<ruau:component support="BETA" description="Manages the asynchronous initialization of components.">
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    <ruau:attribute name="maxConcurrency" default="1" required="true" type="Integer" description="Max number of components that can be loaded concurrently"/>
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    <ruau:handler event="ui:asyncComponentRegister" action="{!c.registerAsyncComponent}"/>
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:    <ruau:handler event="ui:asyncComponentLoaded" action="{!c.asyncComponentLoadedCallback}"/>
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManager.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        // register async component
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        var registeredComponents = cmp._registeredComponents || [];
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        var asyncComponent = event.getParam("asyncComponent");
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        if(asyncComponent) {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:            registeredComponents.push(event.getParam("asyncComponent"));
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:            // load next components if number of loading components is under concurrency limit
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:            helper.loadComponents(cmp);
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:    asyncComponentLoadedCallback: function (cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:    	// decrement loading component count
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        var loadingComponents = cmp._numOfLoadingComponents;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        loadingComponents -= 1;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        cmp._numOfLoadingComponents =loadingComponents;
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:        // load next components if number of loading components is under concurrency limit
ruau/ruau-components/src/nAmE/components/ui/asyncComponentManager/asyncComponentManagerController.js:    	helper.loadComponents(cmp);
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:<ruau:event type="COMPONENT" description="Generic event to notify of operation success or failure.">
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:	<ruau:attribute name="value" type="Object" description="Weakly typed response value. Put anything in here that may be useful."/>
ruau/ruau-components/src/nAmE/components/ui/response/response.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css:.uiOutputLabel{
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.css:    vertical-align: top;
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:<ruau:component extends="ui:output" extensible="true" support="BETA" description="Displays an element label as specified by the value attribute.">
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:    <span class="{!v.class}">{!v.value}</span>&#160;:
ruau/ruau-components/src/nAmE/components/ui/outputLabel/outputLabel.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/blur/blur.evt:<ruau:event type="COMPONENT" extends="ui:baseDOMEvent" support="GA" description="Indicates that a component has been put out of focus."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:<ruau:event type="COMPONENT" extends="ui:baseDOMEvent" support="GA">
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    <ruau:attribute name="ctrlKey" type="Boolean" description="Indicate if ctrl key is pressed."/>
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    <ruau:attribute name="keyCode" type="Integer" description="A numerical code identifying the value of the pressed key."/>
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:    <ruau:attribute name="shiftKey" type="Boolean" description="Indicate if shift key is pressed."/>
ruau/ruau-components/src/nAmE/components/ui/baseKeyboardEvent/baseKeyboardEvent.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:<ruau:event type="COMPONENT" description="Updates attributes on a dataGrid row">
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    <ruau:attribute name="index" type="Integer" description="Index of the row to update" />
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    <ruau:attribute name="className" type="String" description="Class attribute to update. An undefined or null value will leave the class attribute unchanged" />
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    <ruau:attribute name="classOp" type="String" description="Operation to do for the class: add, remove, toggle. Any other value will leave the class attribute unchanged."/>
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:    <ruau:attribute name="attributes" type="List" description="Attributes to update on the row. Each item in the list should be of the form {name: attrName, value: attrValue}. Currently, only the 'disabled' attribute is supported"/>
ruau/ruau-components/src/nAmE/components/ui/updateGridRow/updateGridRow.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:<ruau:component extensible="true">
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:attribute name="class" type="String"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:attribute name="swipeBody" type="Ruue.Component[]"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:registerEvent name="open" type="ui:open"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:registerEvent name="close" type="ui:close"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:handler name="open" action="{!c.handleOpen}"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<ruau:handler name="close" action="{!c.handleClose}"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	 ~ Each row touch event is resolved by ui:infiniteList via the class "uiInfiniteListRow" (see infiniteListRowHelper). 
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	 ~ Hence, try not to mess around with the class name. Adding an additional class name is acceptable tough.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:	<li ruau:id="containerLI" class="{!v.class}" style="{! $Browser.isWindowsPhone ? 'touch-action: pan-y' : ''}">
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:		<div ruau:id="body" class="body">{!v.body}</div>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:		<div ruau:id="swipeBody" class="swipeBody">{!v.swipeBody}</div>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * Applies CSS for opening a row.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * @param cmp {Component} Instance of ui:infiniteListRow.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * @param params {Object} Whichever values passed from ui:open / ui:command.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	open: function (cmp, params) {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		var el = cmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		this.createAndDispatch(el, 'InfiniteListRowOpen', params);
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * Applies CSS for closing a row.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * @param cmp {Component} Instance of ui:infiniteListRow.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * @param params {Object} Whichever values passed from ui:open / ui:command.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	close: function (cmp, params) {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		var el = cmp.getElement();		
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		this.createAndDispatch(el, 'InfiniteListRowClose', params);
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	 * Creates the event object and dispatches it. 
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:	createAndDispatch: function (el, name, detail) {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		var cfg = {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:				detail 		: detail,
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:				cancelable 	: true
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:			evt = new CustomEvent(name, cfg);
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowHelper.js:		el.dispatchEvent(evt);
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:	handleOpen: function (cmp, evt, hlp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:		var parameters = evt.getParam('parameters');
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:		hlp.open(cmp, parameters); 
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:	handleClose: function (cmp, evt, hlp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:		var parameters = evt.getParam('parameters');
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRowController.js:		hlp.close(cmp, parameters); 
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css:	display: block;
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css:	position: relative;
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css:	padding-left: 20%;
ruau/ruau-components/src/nAmE/components/ui/infiniteListRow/infiniteListRow.css:	position: absolute;
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:<ruau:interface support="GA" description="The column template interface definition, describes properties shared by all column templates and instances.">
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="formatters" type="String"                    description="A comma separated list of formatter functions, in dot notation, through which the field data will be processed sequentially."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="name" type="String"                          description="The name of the column."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="fieldName" type="String"                     description="The name of the field or property on the current item to which this column refers."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="title" type="Object"                         description="The title text to be displayed in the header instance for this column. Accepts text or markup."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="reorderable" type="Boolean" default="true"   description="Gets or sets whether this column can be reordered."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="resizable" type="Boolean" default="true"     description="Gets or sets whether this column can be resized."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="sortable" type="Boolean" default="false"     description="Gets or sets whether this column can be sorted."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="headers" type="String" default=""            description="Gets the accessibility header ids associated with this column."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="colSpan" type="Integer" default="1"          description="Gets the number of categories and data fields the header instance of this column will span."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="rowSpan" type="Integer" default="1"          description="Gets the number of categories and data fields the header instance of this column will span."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:    <ruau:attribute name="width" type="String"                         description="Gets or sets the width of this column."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnInterface/listViewColumnInterface.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js:    	var target = helper.getTargetComponent(component);
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js:    	var trigger = helper.getTriggerComponent(component);
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js:    	if (target && trigger) {
ruau/ruau-components/src/nAmE/components/ui/menu/menuRenderer.js:            target.set("v.referenceElement", trigger.getElement());
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.css:     position: relative;
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:    handleRefresh: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:        var menuList = this.getTargetComponent(component);
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:    setTargetEventHandlers : function(component, targetComponent) {
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:        this.addCloseHandler(component, targetComponent);
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:        var focusActionHandler = $A.expressionService.create(component, component.getConcreteComponent().get('c.focusTrigger'));
ruau/ruau-components/src/nAmE/components/ui/menu/menuHelper.js:        targetComponent.set("v.focusTrigger", focusActionHandler);
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			A <code>ui:menu</code> component contains a trigger and list items. You can wire up list items to actions in a client-side controller so that selection of the item triggers an action.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			This example shows a menu with list items, which when pressed updates the label on the trigger.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    &lt;ui:menuTriggerLink ruau:id="trigger" label="Opportunity Status"/>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:        &lt;ui:menuList class="actionMenu" ruau:id="actionMenu">
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:              &lt;ui:actionMenuItem ruau:id="item1" label="Any" click="{!c.updateTriggerLabel}"/>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:              &lt;ui:actionMenuItem ruau:id="item2" label="Open" click="{!c.updateTriggerLabel}" disabled="true"/>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:              &lt;ui:actionMenuItem ruau:id="item3" label="Closed" click="{!c.updateTriggerLabel}"/>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:              &lt;ui:actionMenuItem ruau:id="item4" label="Closed Won" click="{!c.updateTriggerLabel}"/>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:&lt;/ui:menu></pre><p>This client-side controller updates the trigger label when a menu item is clicked.</p>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    updateTriggerLabel: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:        var triggerCmp = cmp.find("trigger");
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:            var source = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:            var label = source.get("v.label");
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:            triggerCmp.set("v.label", label);
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:		    The dropdown menu and its menu items are hidden by default. You can change this by setting the <code>visible</code> attribute on the <code>ui:menuList</code> component to <code>true</code>.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:		     The menu items are shown only when you click the <code>ui:menuTriggerLink</code> component.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			To use a trigger, which opens the menu, nest the <code>ui:menuTriggerLink</code> component in <code>ui:menu</code>. For list items, use the <code>ui:menuList</code> component, and include any of these
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			list item components that can trigger a client-side controller action:
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			    <li><code>ui:actionMenuItem</code> - A menu item</li>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			    <li><code>ui:checkboxMenuItem</code> - A checkbox that supports multiple selections</li>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			    <li><code>ui:radioMenuItem</code> - A radio item that supports single selection</li>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:			To include a separator for these menu items, use <code>ui:menuItemSeparator</code>.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:	</ruau:description>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:	<ruau:example name="menu" ref="ruaudocs:demoMenu" label="Using ui:menu">
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:    	<p>This example shows several ways to create a menu.</p>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/menu/menu.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js:    	var trigger = helper.getTriggerComponent(component);
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js:    		var action = trigger.get("c.focus");
ruau/ruau-components/src/nAmE/components/ui/menu/menuController.js:    		action.runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:<ruau:component access="GLOBAL" support="GA" extensible="true" implements="ui:visible" extends="ui:popup" description="A dropdown menu list with a trigger that controls its visibility. Need to provide a menuTrigger and menuList component.">
ruau/ruau-components/src/nAmE/components/ui/menu/menu.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:     * Verify the elements used to display a textArea.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:     * Changing the element type would affect styling of third party apps.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:    testHtmlElementOfOutputTextArea:{
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:        attributes:{value : 'Salesforce.com, ....some literature about the company.'},
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            var span = cmp.find('span');
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            //Make sure a span tag is used for outputTextArea. Failure might mean breaking styling of third party app
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            ruau.test.assertEquals('SPAN', span.getElement().tagName, "OutputTextArea is expected to use a span tag to display value.");
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            ruau.test.assertEquals('Salesforce.com, ....some literature about the company.', $A.test.getText(span.getElement()));
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:     * verify that empty string value will end up as empty span.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:    testEmptyStringAsValue:{
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:        attributes:{value : ''},
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            var span = cmp.find('span');
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            ruau.test.assertNotNull(span);
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextAreaTest.js:            ruau.test.assertEquals('', $A.test.getText(span.getElement()));
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css:.uiOutputTextArea{
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.css:	white-space: pre-line;
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:output" extensible="true" description="Displays the text area as specified by the value attribute.">
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:    <span ruau:id='span' class="{!v.class}">{!v.value}</span>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:			A <code>ui:outputTextArea</code> component represents text output that is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:			This component can be used with <code>ui:inputTextArea</code>, which takes in a multi-line text input. 
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:			To display text, you can use an attribute value and bind it to the <code>ui:outputTextArea</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:		<pre>&lt;ruau:attribute name="myTextArea" type="String" default="some string"/>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:&lt;ui:outputTextArea value="{!v.myTextArea}" label="my output"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:		<pre>&lt;span class="uiOutputTextArea">some string&lt;/span></pre>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:		<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/outputTextArea/outputTextArea.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.css:.uiCalendar{
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:<ruau:component extensible="true" support="PROTO">
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:    TODO: ui:calendar
ruau/ruau-components/src/nAmE/components/ui/calendar/calendar.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	        <code>ui:infiniteList</code> provides a paging interface to navigate lists. This is a basic setup of a <code>ui:infiniteList</code> component.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:&lt;ui:infinitelist ruau:id="listData" itemVar="item">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;ruau:set attribute="dataProvider">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:      &lt;ruaudocs:demoDataProvider />
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;/ruau:set>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;ruau:set attribute="footer">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:     &lt;ui:button label="Show More" press="{!c.show}"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;/ruau:set>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;ruau:set attribute="itemTemplate">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:      &lt;ruaudocs:demoListTemplate label="{!item.label}" />
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    &lt;/ruau:set>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	        To retrieve and display more data as necessary, using event such as <code>refresh</code>, <code>showMore</code>, and <code>triggerDataProvider</code>.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	    	The <code>refresh</code> event handles a list data refresh and fires the <code>triggerDataProvider</code> event.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:var listData = cmp.find("listData");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:listData.get("e.refresh").fire();	    
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	    	The <code>showMore</code> event handles the fetching of your data and displays it, which then fires <code>triggerDataProvider</code>.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	    	<code>triggerDataProvider</code> triggers the providing of data from a data provider. It is run during component initialization and refresh. Use this event to retrieve more data.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:cmp.set("v.currentPage", targetPage);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:var listData = component.find("listData");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:listData.get("e.triggerDataProvider").fire();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:		<ruau:example name="infinitelist" ref="ruaudocs:demoList" label="Using ui:infiniteList">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    	<p>This example shows a simple implementation of a list embedded in a <code>ui:scroller</code> component. To load new data, either pull to refresh or click the Show More button.</p>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   <ruau:example name="infinitelist2" ref="uitest:infiniteListCscc_Test" label="Handing Events after ui:infiniteList Renders">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	     <p>This example shows how you can handle the component using the <code>rerenderComplete</code> attribute after it renders.</p>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   <ruau:example name="infiniteListRow" ref="uitest:infiniteListRow_Test" label="Using Row Actions">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:    	<p>This example shows a simple implementation of a list Action Row that has swipe behavior. To load new data, either pull to refresh or click the Show More button.</p>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   	<p>To use the swipe gesture in this example, emulate any mobile devices using the developer tool on your browser</p>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	DIRECTION_THRESHOLD	: 2, 	// the intent of a gesture is captured after moving 2px in a direction
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	OPEN_PERCENTAGE		: 80,	// an 'open' row is translated 80% from its initial position
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	COMMIT_PERCENTAGE 	: 20, 	// the minimum absolute distance necessary to force commitment of either opening or closing
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	SNAP_TIMEOUT		: 300,	// duration of 'snap' transition
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	CLOSE_TIMEOUT 		: 600,	// duration of the full 'close' transition of an active row 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	 * Creates the handlers needed for listening to touch/pointer events.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	initializeHandlers: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		var self = this;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		cmp._ontouchstart = function (e) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:			self.ontouchstart(cmp, e);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		// 2. make the target row the open row
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		// 3. open the row with a transition (if desired, check for e.details.useTransition
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		$A.warning('List row open is unimplemented.');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	 * Concats the new items to the list of existing items.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	 * @param {Component} cmp Potentially non-concrete (ui:abstractList) component instance.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	 * @param evt ui:dataChanged.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	 * @param {Function} callback An optional callback to invoke after 'v.items' has been replaced. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    handleDataChange: function(cmp, evt, callback) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        $A.mark("infiniteList handleDataChange " + cmp.getGlobalId());
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        var concrete = cmp.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var newData = evt.getParam("data") || [],
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		actualItems = concrete.get("v.items") || [];
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        for (var i = 0, len = newData.length; i < len; i++) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            actualItems.push(newData[i]);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        concrete.set("v.items", actualItems);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        if (callback) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	callback();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        $A.endMark("infiniteList handleDataChange " + cmp.getGlobalId());
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Attaches event listeners to their handlers.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    attachListeners: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var ul = cmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	ul.addEventListener(this.getEventNames().move, cmp._ontouchmove, false);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        ul.addEventListener(this.getEventNames().end, cmp._ontouchend, false);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        ul.addEventListener("dragstart", cmp._preventEvent, true);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Detaches event listeners to their handlers.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    detachListeners: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var ul = cmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	ul.removeEventListener(this.getEventNames().move, cmp._ontouchmove);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	ul.removeEventListener(this.getEventNames().end, cmp._ontouchend);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	ul.removeEventListener("dragstart", cmp._preventEvent, true);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * 'start' handler. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     *  Attempts to resolve the actionable row and  
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     *  attaches 'move' and 'end' listeners if a valid row was found.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    ontouchstart: function (cmp, e) {  
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var touch, rootClassName, ul, row, openRowSwipe, 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		initialPosition = 0;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Cancel when blocking is needed.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        if (cmp._isClosing || cmp._isSnapping || this.isBlocked(cmp)) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            e.preventDefault();    
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	if ((e.touches && e.touches.length == 1) || (e.pageX !== undefined)) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		rootClassName = cmp.getElement().className || 'uiInfiniteList';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		row = this.getRow(e.target, 'uiInfiniteListRow', rootClassName); 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		// Only proceed if a valid row was found.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			this.attachListeners(cmp);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			// Detect whether this interaction is on the open row.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			cmp._isInteractionOnOpenRow = cmp._openRow && cmp._previousSwipe && (cmp._previousSwipe.row === row);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                // If a different row was open, close it. Slightly different logic than above.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                    // Cancel all further events - this handler is registered in the 'capture' phase.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                    e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                    e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    		// If another swipe is occurring on the same row. Check for openness.	
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:						initialPosition = this.getPixelFromPercentage(cmp, row, this.OPEN_PERCENTAGE);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    	// Begin tracking the swipe gesture.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:					startX       	: touch.pageX,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:					startY 			: touch.pageY,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:					initialPosition : initialPosition 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * 'move' handler. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Records the touch/pointer interaction. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var point = null, // must be explicitly null
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            swipe, axis, percentage;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// If a row is closing or the interaction has been blocked, 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// bounce the event and return.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        if (cmp._isClosing || cmp._isSnapping || this.isBlocked(cmp)) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            e.preventDefault();    
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Continue tracking the swipe if the an associated row was found.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	// Calculates the diffs in horizontal (X) and vertical (Y) position.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	swipe.diffX = (swipe.startX - point.x);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	swipe.diffY = (swipe.startY - point.y),
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	swipe.absX 	= Math.abs(swipe.diffX);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	swipe.absY 	= Math.abs(swipe.diffY);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            // Lock the direction for the duration of the iteraction.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            axis = cmp._direction || this.getScrollAxis(swipe.absX, swipe.absY);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            if (axis === 'x') {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                // If a greater gesture occurred horizontally than vertically, 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                // Positive displacement is a 'open' gesture.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            	// Negative displacement is an 'close' gesture.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	percentage = this.getWidthPercentage(cmp, swipe.body, swipe.absX + swipe.initialPosition);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	swipe.percentage = -percentage;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	if (swipe.percentage >= -(this.OPEN_PERCENTAGE)) { 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                		this.translateX(cmp, swipe.body, swipe.percentage);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	percentage = this.getWidthPercentage(cmp, swipe.body, (swipe.absX + (cmp._bodyLength - swipe.initialPosition)));
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	swipe.percentage = -this.getWidthPercentage(cmp, swipe.body, swipe.absX);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                	if (cmp._isInteractionOnOpenRow && swipe.percentage <= 0 && percentage <= 100) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                		this.translateX(cmp, swipe.body, -(100 - percentage));
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            else if (cmp._isInteractionOnOpenRow) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                // Movement along the y direction on the current row will force the row closed. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            	// Cancel all further events.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * 'end' handler. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Determines if the movements is considered a swipe. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Detaches event listeners.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var swipe = cmp._swipe,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		percentage, shouldSnapOpen;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Use 'percentage' field on 'swipe' to determine the position of the row.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        if (swipe && swipe.hasOwnProperty('percentage')) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	percentage = Math.abs(swipe.percentage);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	// If the row is not completely open or not completely closed, then apply 'snap' logic.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	if (percentage !== -(this.OPEN_PERCENTAGE) && percentage !== 0) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        		swipe.body.style.transition = 'all ' + this.SNAP_TIMEOUT + 'ms';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        		// Block interactions while the transition is happening.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        		cmp._isSnapping = true;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        		// If the absolute percentage moved meets the threshold, then commit to either openning or closing. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        		if (percentage >= this.COMMIT_PERCENTAGE) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			this.translateX(cmp, swipe.body, -(this.OPEN_PERCENTAGE));
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			// Create '_openRow' reference after timeout 'snap' has completed.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			// Creating the reference too soon could cause a 'close' animation to also occur. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			shouldSnapOpen = true; 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			this.translateX(cmp, swipe.body, 0);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			$A.util.removeClass(cmp._openRow, 'open');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        				this.translateX(cmp, swipe.body, 0);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			$A.util.removeClass(cmp._openRow, 'open');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:                        this.translateX(cmp, swipe.body, -(this.OPEN_PERCENTAGE));
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			// Create '_openRow' reference after timeout 'snap' has completed.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			// Creating the reference too soon could cause a 'close' animation to also occur. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    			shouldSnapOpen = true; 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        			cmp._isSnapping = false;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        			swipe.body.style.transition = '';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        			if (shouldSnapOpen) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        				$A.util.addClass(cmp._openRow, 'open');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	// Prevent anything else from happening (clicks, etc).
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        	e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Reset '_isBlockedInteraction' so that future touch events are not cancelled.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // This is here because the touch gesture might last longer than the animation.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // A 'blocked interaction' means that all pointer events are cancelled as long as 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // the pointer is active (down).
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	this.detachListeners(cmp);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        cmp._moved = false;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        cmp._isInteractionOnOpenRow = null;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var target 		  = e.target,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		body 		  = target.querySelector('div.body'),
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		useTransition = e.detail && e.detail.useTransition;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	if (body && $A.util.hasClass(target, 'open')) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		if (useTransition) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			body.style.transition = 'all ' + this.CLOSE_TIMEOUT + 'ms';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		this.translateX(cmp, body, 0);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			if (useTransition) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    				body.style.transition = '';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			$A.util.removeClass(body, 'open');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Given an active swipe, close the row and reset.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Perform close operation.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	swipe.body.style.transition = 'all ' + this.CLOSE_TIMEOUT + 'ms';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        this.translateX(cmp, swipe.body, 0);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Null these fields as 'touchend' will not execute.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        $A.util.removeClass(cmp._openRow, 'open');
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Change the state for the duration of the close animation.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        // Use two variables to cancel all touch events.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            cmp._isClosing = false;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:            swipe.body.style.transition = '';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	return cmp._isBlockedInteraction;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	cmp._isBlockedInteraction = true;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	cmp._isBlockedInteraction = false;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Overridden implementation to remove a row with an optional animation timeout.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    removeItem: function (component, array, index, timeout, animate, callback) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var row;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Animations require a specified timeout.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	if (animate && $A.util.isUndefinedOrNull(timeout)) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		$A.warning("'animation' function specified to ui:infinteList WITHOUT the required timeout. Please specify a timeout in milliseconds.");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		if (animate) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			animate(row);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    			if (callback) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    				callback();		
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		component.set('v.items', array);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Resolve event names due to device variance.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    getEventNames: function () {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		var eventNames;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	if (this._eventNames) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		return this._eventNames;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		if (window["navigator"]["pointerEnabled"]) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    eventNames = {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		        start : 'pointerdown',
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		else if (window["navigator"]["msPointerEnabled"]) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    eventNames = {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		        start : 'MSPointerDown',
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		    eventNames = {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		        start : 'touchstart',
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		// Cache the event names on the helper.	
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		this._eventNames = eventNames;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:		return eventNames;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Normalize 'touch' and 'pointer' events.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var point = {};
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        if (e.targetTouches) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		point.x = e.targetTouches[0].clientX;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		point.y = e.targetTouches[0].clientY;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Given the absoluate value of movemnet in x and y, return the scrolling (dominant) axis.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    getScrollAxis: function (absX, absY) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        var treshold = this.DIRECTION_THRESHOLD;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        return (absX > absY + treshold) ? 'x' :
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:               (absY > absX + treshold) ? 'y' :
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Attempts to find a row given the current touch target.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @return {HTMLElement} If a row is found or null if otherwise.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    getRow: function (el, targetClassName, rootClassName) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Count prevents an infinite loop from occurring due to algorithm breakage.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// God save you if you have 100 nested elements in your component.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var count = 0,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Walk the tree until the closest target is found.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	// Escape if 100 nodes are traversed or the root is hit.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	while (count < 100 && current.className !== rootClassName) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    		if ($A.util.hasClass(current, targetClassName)) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    		break;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    	current = current.parentNode;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var ul = component.getConcreteComponent().find('ul').getElement();
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Returns the percentage coverage given the absolute value of x distance.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param cmp {Component} infinteList component instance
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param el {HTMLElement} infiniteListRow's body div
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param x {Number} the number of pixels    
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    getWidthPercentage: function (cmp, el, x) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var length = cmp._bodyLength;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:	    return Math.floor((x / length) * 100);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Returns the pixel position given the percent value.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param cmp {Component} infinteList component instance
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param el {HTMLElement} infiniteListRow's body div
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param pecentage {Number} integer value for percentage (eg. 80 for 80%).
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    getPixelFromPercentage: function (cmp, el, percentage) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	var length = cmp._bodyLength; 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    	return Math.floor(length * (percentage / 100)); 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * Translates the given element in the x direction by the given percent.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:     * @param percent {Number} percentage to apply 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:    translateX: function (cmp, el, percent) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        var style = 'translate3d(' + percent + '%, 0, 0)';
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        el.style.transform = style;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListHelper.js:        el.style.webkitTransform = style;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:<ruau:component extends="ui:abstractList"
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:				implements="ui:scrollerEmbeddable"
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    			description="A list component that iterates over and displays the items in the ui:dataProvider component.">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    <ruau:attribute name="enableRowSwipe" type="Boolean" default="false" description="Toggles touch event handlers to open and close rows."/>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    <!-- This event should probably become part of the base component definition, so any asynchronously
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:         created component can announce its completion -->
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    <ruau:registerEvent name="rerenderComplete" type="ruau:asyncRerender" description="The event fired when this component completes its asynchronous rerender."/>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:    <ruau:handler name="showMore" action="{!c.showMore}"/>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:	<ul ruau:id="ul" class="{!v.class}">
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:		<ruau:iteration items="{!v.items}"
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:						var="{!v.itemVar}"
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:						body="{!v.itemTemplate}"
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteList.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        var dataProvider = component.get("v.dataProvider[0]");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        if(dataProvider && dataProvider.getModel()) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:            component.set("v.items", dataProvider.get("m.items"));
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        $A.mark("infiniteList showMore " + component.getGlobalId());
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:		var params = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:			currentPageValue = component.get("v.currentPage"),
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:			currentPage = parseInt(currentPageValue, 10),
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:			targetPage = currentPage + 1;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        component.set("v.currentPage", targetPage, true);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        if (params.parameters && params.parameters.callback) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        	component._callback = params.parameters.callback;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        helper.triggerDataProvider(component.getSuper());
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:        $A.endMark("infiniteList showMore " + component.getGlobalId());
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListController.js:		helper.showLoading(component, false);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:	afterRender: function (cmp, hlp) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:		var list;
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:		if (cmp.get('v.enableRowSwipe')) {
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			hlp.initializeHandlers(cmp);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			// Just attach the start handler, move and end is conditionally added.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			// Attached to the capture phase in order to cancel click events if necessary. 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			// This is necessary because Ruue's FastClick implementation is attached directly
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			// to ruau:html components instead of at the window level.
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			list.addEventListener(hlp.getEventNames().start, cmp._ontouchstart, true); 
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			list.addEventListener('InfiniteListRowOpen', cmp._onInfiniteListRowOpen, false);
ruau/ruau-components/src/nAmE/components/ui/infiniteList/infiniteListRenderer.js:			list.addEventListener('InfiniteListRowClose', cmp._onInfiniteListRowClose, false);
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:<ruau:component description="Fires and handles the onaction event for the ui:dataGrid component.">
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:	<ruau:registerEvent name="onaction" type="ui:actionEvent"/>
ruau/ruau-components/src/nAmE/components/ui/actionDelegate/actionDelegate.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:<ruau:interface support="BETA"
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:                description="Interface to indicate that a component has a ui:showMore component event handler.">
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    <ruau:attribute name="canShowMore" type="Boolean" description="Can this component show more if the event was fired?"/>
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    <ruau:registerEvent name="showMore" type="ui:showMore" description="Component event used to trigger this component to load more of its content."/>
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:    <ruau:registerEvent name="noMoreContent" type="ui:noMoreContent" description="Fired when this component has no more content to show--this coincides with a change to the value of the canShowMore attribute and could be implemented using a change handler on that attribute, but this approach is less costly."/>
ruau/ruau-components/src/nAmE/components/ui/handlesShowMore/handlesShowMore.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:<ruau:event type="COMPONENT" support="GA">
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:    <ruau:attribute name="value" type="String" description="The updated text in the component."/>
ruau/ruau-components/src/nAmE/components/ui/inputChange/inputChange.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/focus/focus.evt:<ruau:event type="COMPONENT" extends="ui:baseDOMEvent" support="GA" description="Indicates that a component has been put on focus."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:<ruau:event type="COMPONENT" support="PROTO" description="Command event to instruct a component to write its data to the server.">
ruau/ruau-components/src/nAmE/components/ui/write/write.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:		var pageCmp = cmp.get('v.priv_pageComponent'),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			title = 'Page ' + cmp.get('v.pageIndex'), //TODO: localize
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			label = title;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:		if (pageCmp && pageCmp.get('v.pageModel')) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			var pageModel = pageCmp.get('v.pageModel');
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			title = pageModel.title || title;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			label = pageModel.label || label;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			if (pageModel.devNameOrId) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:				cmp.set("v.priv_id", "tab_" + pageModel.devNameOrId);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:		} else if (pageCmp) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			title = pageCmp.get('v.title') || title;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:		cmp.set('v.label', label);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:	clickHandler: function (cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        var compEvent = cmp.getEvent("pagerClicked"),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        	pageIndex = cmp.get("v.pageIndex");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        compEvent.setParams({"pageIndex":  pageIndex});
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    keyHandler: function (cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        var compEvent = cmp.getEvent("pagerKeyed"),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        	pageIndex = cmp.get("v.pageIndex");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:        compEvent.setParams({"pageIndex": pageIndex, "event": evt });
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    onPageSelected: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:		var selectedPage = evt.getParam('pageIndex'),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			pageId = evt.getParam('pageId'),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			curPage = cmp.get('v.pageIndex'),
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:			selectedItemCss = 'carousel-nav-item-selected';
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    	if (selectedPage == curPage) {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_ariaControlId", pageId);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_ariaSelected", true);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_tabIndex", 0);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_selectedClass", selectedItemCss);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		var itemEl = cmp.find('pageItem').getElement();
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_ariaControlId", '');
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_ariaSelected", false);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_tabIndex", -1);
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItemController.js:    		cmp.set("v.priv_selectedClass", "");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	display: inline-block;	
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	vertical-align: middle;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	padding: 0 0.5em;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	margin: 0 6px;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	max-width: 150px;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	white-space: nowrap;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:.THIS a {	
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	border-radius: 8px;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	background: #1e2b37;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:.THIS .carousel-nav-item-selected {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	background: #2d95d6;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:.THIS.tab a {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	height: auto;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:.THIS.tab a.carousel-nav-item {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	background: none;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	box-shadow: none;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	text-transform: uppercase;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:.THIS.tab span {
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	display: block;
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.css:	margin: 0 10px; 
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:<ruau:component extends="ui:interactive"  extensible="true"  description="A carousel page indicator item which enables tabbing through the carousel pages. This component is used in a ui:carouselPageIndicator component.">
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="pageIndex" type="Integer" description="The index of the page this component belongs to." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="title" type="String" description="The title of the page." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="label" type="String" description="The label of the page." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="navigationTab" type="Boolean" default="false" description="Navigation Tabs instead of labels"/>
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_id" type="String" description="The id of the item" />      
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_ariaSelected" type="Boolean" default="false" description="PRIVATE - aria-selected boolean" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_ariaControlId" type="String" description="PRIVATE - Aria control ID." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_tabIndex" type="Integer" default="-1" description="PRIVATE - tab index" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_pageComponent" type="Object" description="PRIVATE - Carousel page component." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:attribute name="priv_selectedClass" type="String" description="PRIVATE - CSS class for the selected indicator item." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:registerevent name="pagerClicked" type="ui:pagerClicked" description="The event fired when the pager is clicked." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:registerevent name="pagerKeyed" type="ui:pagerKeyed" description="The event fired when the pager is keyed." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the page is selected." />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:handler name="init" value="{!this}" action="{!c.onInit}" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:handler name="pageSelected"  action="{!c.onPageSelected}" />    
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:   <ruau:handler name="click" action="{!c.clickHandler}" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    <!-- aria-controls attribute is linked to the section id attribute in the page -->
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:    <li role="presentation" class="{!v.class + (v.navigationTab ? ' tab' : '')}">  
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:	    <a ruau:id="pageItem" class="{!v.priv_selectedClass + ' carousel-nav-item'}" tabindex="{!v.priv_tabIndex}" role="tab" 
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:	    	aria-controls="{!v.priv_ariaControlId}" aria-selected="{!v.priv_ariaSelected}" title="{!v.title}"
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:	    	onkeydown="{!c.keyHandler}" id="{!v.priv_id}" >    
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:					<span class="{! v.navigationTab ?  '' : 'assistiveText'}">{!v.label}</span>
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:	  	</a>
ruau/ruau-components/src/nAmE/components/ui/carouselPageIndicatorItem/carouselPageIndicatorItem.cmp:</ruau:component>    
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:<ruau:component extends="ui:listViewColumnCell" extensible="true" support="GA" description="An index column template definition, describes the (one-based) number of the current item being processed in a table data cell.">
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:    <span class="index">{!v.index+1}</span>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnIndex/listViewColumnIndex.css:    text-align:right;
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:<ruau:component extends="ui:dataGridActionColumn" description="A column of checkboxes for individual and multiple row selection in ui:dataGrid">
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:	<ruau:attribute name="selectAll" type="Boolean" description="Allows grid to control 'selectAll' visual state."/>
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:	<ruau:set attribute="header">
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:		<ui:actionCheckbox name="dataGrid:select" value="{!v.selectAll}" label="Select all rows" labelClass="assistiveText"/>
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:	</ruau:set>
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:	<ruau:attribute name="outputComponent" type="Ruue.ComponentDefRef[]">
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:		<!-- Wire 'selected' and 'index' into action. This is the secret sauce; action won't work without it. -->
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:		<ui:actionCheckbox name="dataGrid:select" value="{!selected}" index="{!index}" label="Select row" labelClass="assistiveText" disabled="{!disabled}"/>
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:	</ruau:attribute>
ruau/ruau-components/src/nAmE/components/ui/dataGridSelectionColumn/dataGridSelectionColumn.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:<ruau:interface support="GA" description="The standard interface for searching components.">
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:    <ruau:attribute name="searchTerm" type="String" description="The term on which to search."/>
ruau/ruau-components/src/nAmE/components/ui/searchInterface/searchInterface.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:	This event is used by centerStage to update the content of a panelOverlay component once its actual
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:	content has been constructed.  It can also be used by any code that needs to update the content or header
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:	of an existing panel.   
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:<ruau:event type="APPLICATION" description="Event to facilitate updating the content of an existing panelOverlay component.">
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    <ruau:attribute name="instance" required="true" type="Ruue.Component[]" description="Existing panel instance to be updated."/>
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    <ruau:attribute name="headerActions" type="Ruue.Component[]" description="Buttons to add to the header of the panel."/>
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    <ruau:attribute name="body" type="Object" description="The main content of the panel."/>
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:    <ruau:attribute name="onCreate" type="Object" description="Callback function"/>
ruau/ruau-components/src/nAmE/components/ui/updatePanel/updatePanel.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:<ruau:event type="APPLICATION">
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:	<!--Note: API options/attributes still to be defined properly, waiting due to a issue delegating ruau events. -->
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    <ruau:attribute name="config" type="Object" description="Event used by panelManager to close panel/modals"/>
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    <ruau:attribute name="destroy" type="Boolean" description="True if panel should be destroyed"/>
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    <ruau:attribute name="instance" type="Ruue.Component[]" description="Instance to be closed or destroyed"/>
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:    <ruau:attribute name="onDestroy" type="Object" description="Callback function"/>
ruau/ruau-components/src/nAmE/components/ui/closePanel/closePanel.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:<ruau:interface support="proto">
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:  <ruau:registerEvent name="traverse" type="ui:traverseEvent" />
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:  <ruau:registerEvent name="makeVisitor" type="ui:makeVisitor" />
ruau/ruau-components/src/nAmE/components/ui/visitable/visitable.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        // DCHASMAN TODO Switch this to a better singleton
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        var resizer = this.getResizer();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            // Wire up global resizer that guarantees order of evaluation for
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            // nested border layouts
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            resizer._resizing = false;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            var helper = this;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                            for (var n in resizer._resizerComponentSet) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                                var c = resizer._resizerComponentSet[n];
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                                if (c.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                                    helper.update(c);
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                        } catch (e) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                        } finally {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                            resizer._resizing = false;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            $A.util.on(window, "resize", resizer._resizer, false, 400);
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        resizer._resizerComponentSet[component.getGlobalId()] = component;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:    update : function(component) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        if (component.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            // Invoke this observer's onresize action
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            var a = component.get("v.onresize");
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            if (a) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            	//$A.log("ui:resizeObserver.update()", component);
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                a.runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        var resizer = this.getResizer();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            var id = component.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                $A.error("os:resizeObserver.remove() called with unregistered component " + id);
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:    updateSize : function(component) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        var resizer = this.getResizer();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:        if (component.isValid() && resizer._resizer) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            var id = component.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                // Initial set of all expected components that should be calling in
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                resizer._pendingUpdates = {};
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                for (var n in resizer._resizerComponentSet) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                    var c = resizer._resizerComponentSet[n];
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                    if (c.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:                        resizer._pendingUpdates[n] = c;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            delete resizer._pendingUpdates[id];
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            // Check to see if all components have called in and we're ready to
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            // actually perform the resizer() call
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            for (var n in resizer._pendingUpdates) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverHelper.js:            resizer._resizing = false;
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverRenderer.js:        helper.update(component);
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:<ruau:component support="BETA" description="Detects a window resize or orientation change event and runs the updateSize controller method. Ensures the order of component composition.">
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    <ruau:attribute name="onresize" type="Ruue.Action" description="The action that is run on resize."/>
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    <ruau:handler event="ui:updateSize" action="{!c.updateSize}" description="The event fired when a component is resized."/>
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:    <ruau:handler event="ruau:doneWaiting" action="{!c.updateSize}" description="The event fired when the client is done waiting for a response to a server request."/>
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserver.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js:    updateSize: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/resizeObserver/resizeObserverController.js:        helper.updateSize(component);
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:<ruau:event type="COMPONENT" 
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:			extends="ui:command" 
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:			description="Command event to insert or remove child items from a component (list/grid). 'parameters' attribute can be used for callback.">
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    <ruau:attribute name="index" type="Integer" description="Zero base index for where to add/remove rows."/>
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    <ruau:attribute name="count" type="Integer" description="Row count to add/remove."/>
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    <ruau:attribute name="last" type="Boolean" description="Alternative to index for simply pushing an item."/>
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    <ruau:attribute name="items" type="Object[]" description="Items to insert. Empty rows are inserted not specified."/>
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:    <ruau:attribute name="remove" type="Boolean" description="Indicate removal"/>
ruau/ruau-components/src/nAmE/components/ui/addRemove/addRemove.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:<ruau:component 
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:        implements="ui:dataProviderInterface,ui:pagingInterface,ui:sortingInterface,ui:searchInterface" 
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:        abstract="true" description="A generic list data provider">
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:    <!-- these belong on the dataProviderInterface, but were not working there... -->    
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:	<ruau:registerEvent name="provide" type="ui:dataProvide" description="The event fired when the list is intialized."/>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:	<ruau:registerEvent name="onchange" type="ui:dataChanged" description="The event fired when the list data changes."/>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js:    fireDataChangeEvent: function (dataProvider, data) {
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js:    	var dataChangeEvent = dataProvider.getEvent("onchange");
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js:    	dataChangeEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js:    		data : data
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderHelper.js:        component.getConcreteComponent().get("c.provide").runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProviderController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:			A <code>ui:dataProvider</code> component fetches and returns rows of data to a consuming component, such as <code>ui:list</code>.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:			This component can fetch data in various ways.  It can fire a server action to get rows from a server-side database, or create data in JavaScript and require no server interaction, or even some combination of the two.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:			When a <code>ui:dataProvider</code> component has new data to report (e.g., when a server action has returned), it attaches the relevant data to the <code>ui:dataChanged</code> event.  <code>ui:dataProvider</code>'s helper provides a function <code>fireDataChangeEvent(dataProvider, data)</code> to surface this event.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:			A <code>ui:dataProvider</code> can also be triggered by the wrapping component to provide data, via the <code>ui:dataProvide</code> event.  This event has a <code>parameters</code> attribute that can be used as input to the <code>ui:dataProvider</code>.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:			To customize this behavior, set the event handler in the component that extends <code>ui:dataProvider</code> by using the <code>ruau:handler</code> tag with the attribute <code>name="provide"</code>.
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:	</ruau:description>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:	<ruau:example name="example1" ref="uiExamples:dataProviderExample" label="Using ui:dataProvider">
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    	<p>This example shows how to fetch data using <code>ui:dataProvider</code> in a <code>ui:list</code> component. The data provider is represented by the <code>uitest:infiniteDataProvider</code>component, which extends <code>ui:dataProvider</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:    	<p>When the list data is initialized, the <code>provide</code> handler is called, which runs the controller-side action. This action sets the callback using the <code>action.setCallback</code> method to return any new data. In the callback, this code attaches the data to the <code>ui:dataChanged</code> event.</p>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:         data = action.getReturnValue();<br/>helper.fireDataChangeEvent(component, data);
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/dataProvider/dataProvider.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" access="GLOBAL" description="Displays the number in the default or specified format. Supports up to 18 digits before the decimal place.">
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    <ruau:attribute name="value" type="Decimal" required="true" access="GLOBAL" description="The number displayed when this component is rendered."/>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    <ruau:attribute name="format" type="String" access="GLOBAL" description="The format of the number. For example, format=&ldquo;.00&rdquo; displays the number followed by two decimal places. If not specified, the Locale default format will be used."/>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:    <span ruau:id="span" class="{!v.class}"/>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:			A <code>ui:outputNumber</code> component represents a number output that is rendered as an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:			This component can be used with <code>ui:inputNumber</code>, which takes in a number input. 
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:			<code>ui:outputNumber</code> retrieves the browser's locale information and displays the number in the given decimal format. 
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:			To display a number, you can use an attribute value and bind it to the <code>ui:outputNumber</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:		<pre>&lt;ruau:attribute name="myNum" type="Decimal" default="10.10"/>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:&lt;ui:outputNumber value="{!v.myNum}" label="my number" format=".00"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:		<pre>&lt;span class="uiOutputNumber">10.10&lt;/span></pre>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:	<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Positive test case: Assign Negative value for attribute 'value'.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testNegativeValue:{
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes: {value : -123},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('-123', $A.test.getText(component.find('span').getElement()), "Negative values not displayed correctly.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Positive test case: Assign Negative value for attribute 'value' and special negative format
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testNegativeValueWithNegativeFormat:{
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes: {value : -123.936, format:"#.0#;(#.0#)"},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('(123.94)', $A.test.getText(component.find('span').getElement()), "Negative values not displayed correctly.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Positive test case: Assign Positive value for attribute 'value'.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testValue: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 123},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('123', $A.test.getText(component.find('span').getElement()), "Positive value attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Negative test case: Assign blank value for attribute 'value'.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    //TODO W-984924 value must be set in markup. moved to js://uitest.outputCmps_EmptyStringValue for now.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    _testEmptyStringValue: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : ''},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "Expect to see an empty span.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Negative test case:Verify providing non numeric value for Value attribute.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    _testNonNumericValue: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 'foo'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('The value attribute must be assigned a numeric value', $A.test.getText(component.find('span').getElement()), "Should have displayed an error message.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Positive test case: Assign nothing to format value and verify default precision used to display decimal.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testDefaultDecimalPrecision: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 123.450},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('123.45', $A.test.getText(component.find('span').getElement()), "Value not displayed as expected when format is not specified.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Negative test case: Assign a blank value for attribute 'format'.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testEmptyStringFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 123.450, format : ''},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('123.45', $A.test.getText(component.find('span').getElement()), "Value not displayed as expected when format is a empty string.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Negative test case: Assign an invalid format value for attribute 'format'.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testInvalidFormat  : {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 123.450, format : ',,'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('Invalid format attribute', $A.test.getText(component.find('span').getElement()), "Should have displayed an error message.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 999999.9, format : '#,##0'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('1,000,000', $A.test.getText(component.find('span').getElement()), "Nines were not rounded up correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify Rounding up of lots of 9s with extra zero padding
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testRoundingLotsOfNinesAndZeroPadding: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 999999.9, format : '00000000'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('01000000', $A.test.getText(component.find('span').getElement()), "Nines were not round up correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify Rounding up of decimal part of value.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testFormat2DecimalPlaces_RoundUp: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 3.1459, format : '.00'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('3.15', $A.test.getText(component.find('span').getElement()), "Decimal part of value was not rounded up based on format.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify Rounding down of decimal part of value.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testFormat2DecimalPlaces_RoundDown: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 3.14159, format : '.00'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('3.14', $A.test.getText(component.find('span').getElement()), "Decimal part of value was not rounded down based on format.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify Rounding functionality when length of integer part is restricted by format.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testFormatDoesNotRestrictIntegerValue: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '0.0'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('22.7', $A.test.getText(component.find('span').getElement()), "Should have displayed full value but was probably truncated.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify that zeros are appended to decimal value to match format.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testAppendingZeroToMatchFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '.000'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('22.700', $A.test.getText(component.find('span').getElement()), "Should have appended two zeros to match format.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Test big value that is too large for a js number and is represented instead by a string
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testBigDecimal:{
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : '1234567890123456789012345678901234567890.12', format : '.00'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('1234567890123456789012345678901234567890.12', $A.test.getText(component.find('span').getElement()), "Unexpected value.");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify that when the value changes it is rerendered with the new value
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testUpdateValue: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '##,#0,00.00#####'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            component.set("v.value", 49322);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('4,93,22.00', $A.test.getText(component.find('span').getElement()), "Value not updated after changed");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify that when the value doesn't change it is rerendered with the same value
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testUpdateValueWithSame: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '##,#0,00.00#####'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            component.set("v.value", 22.7);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not updated after changed");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify that when the format changes it is rerendered using the new format
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testUpdateFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '##,#0,00.00#####'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            component.set("v.format", "meh #.#");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('meh 22.7', $A.test.getText(component.find('span').getElement()), "Value not updated after format changed");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:     * Verify that when the format doesn't change it is rerendered using the same format
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:    testUpdateFormatWithSame: {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:        attributes : {value : 22.7, format : '##,#0,00.00#####'},
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not formatted correctly");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            component.set("v.format", "##,#0,00.00#####");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberTest.js:            ruau.test.assertEquals('0,22.70', $A.test.getText(component.find('span').getElement()), "Value not updated after format changed");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var span = this.superRender()[0];
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var f = cmp.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var num = cmp.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var formatted;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                var nf;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    nf = $A.localizationService.getNumberFormat(f);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                } catch (e) {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    formatted = "Invalid format attribute";
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    formatted = nf.format(num);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                formatted = $A.localizationService.formatNumber(num);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:            span.textContent = span.innerText = formatted;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        return span;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var val = cmp.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var f = cmp.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var formatted = '';
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        if (($A.util.isNumber(val) || $A.util.isString(val)) && !$A.util.isEmpty(val)) {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                var nf;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    nf = $A.localizationService.getNumberFormat(f);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                } catch (e) {
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    formatted = "Invalid format attribute";
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                    formatted = nf.format(val);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:                formatted = $A.localizationService.formatNumber(val);
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        var span = cmp.find("span");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumberRenderer.js:        span.getElement().textContent = span.getElement().innerText = formatted;
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputNumber/outputNumber.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Initialization Methods
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Initializes the different caches we use to store row and column
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * data for faster retrieval
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	initializeCaches: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var concrete = cmp.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Flat references to leaf (cell) components to cleanup later.		
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._allChildrenCmps 	= [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// References to data needed to render each row's components
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._rowData = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// References to column and component template data
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._columnNames = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._selectionData = this.createSelectionData();
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Initializes columns. 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Action instances are not ready at provide invocation.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	initializeNewColumns: function (concrete) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var columns 				= this.getColumns(concrete),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			handleColumnSortChange 	= concrete.get('c.handleColumnSortChange'),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			headerRow				= concrete.find("headerRow").getElement();
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// TODO cleanup components properly
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		$A.util.forEach(columns, function (c, i) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			var name = c.get('v.name'),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// Match up the correct component to use based on the mode.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// Copy the references to _row for easier access later. 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (isEditMode && c.get('v.editable') && inputComponent && inputComponent.length > 0) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (name) {	
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				concrete._columnNames[i] = name.split('.');			
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				concrete._columnOrder[name] = i;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				concrete._columns[name] = c; 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				c.set('v.onsortchange', handleColumnSortChange);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (c.isInstanceOf('ui:dataGridSelectionColumn')) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				concrete._selectionData.selectionColumns.push(c);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Attach action delegate for easier access.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	initializeActionDelegate: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var actionDelegate = cmp.get('v.actionDelegate');
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (actionDelegate && actionDelegate.length > 0) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			cmp._actionDelegate = actionDelegate[0];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Create the row data for the initial items in the grid and stores them in
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * concrete._rowData
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    initializeRowData: function(concrete) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    	var self				= this,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		isEditMode			= false; //mode.indexOf('EDIT') === 0; not yet fully supported
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    	concrete._rowData = self.createRowData(concrete, items, isEditMode);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Event Handlers
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Component} cmp
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Object} params ({index, count, last (Boolean), items, remove (Boolean)}) 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	handleAddRemove: function (cmp, params) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		params.index = params.last ? 'last' : parseInt(params.index);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (params.last) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			params.index = 'last';
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			params.index = parseInt(params.index, 10);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		params.count = parseInt(params.count, 10);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (params.remove) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			this.removeRows(concrete, params.index, params.count);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			this.insertRowsAndUpdateData(concrete, params.index, params.count, params.items, true);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Respond to changed on to and within the items array.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Object} params change event parameters
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	handleItemsChange: function (cmp, params) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var self = this,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// If adding or removing rows, escape.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (cmp._addRemove) { 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Loaded once is meant to ensure the first data loaded doesn't break.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (!cmp._hasDataProvider || cmp._loadedOnce) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (!params.index) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				newLength = (params.value ? params.value.length : 0);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				// Check for a larger or smaller list.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				if (cmp._rowData.length !== newLength) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					this.updateValueProvidersFromItems(cmp);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		this.selectAll(concrete, false);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			cmp._sorting = false;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (!cmp._loadedOnce) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			cmp._loadedOnce = true;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	handleSortByChange: function (concrete) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var columns = this.getColumns(concrete),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			sort = this.parseSortBy(sortBy);	
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// Reset all columns.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			$A.util.forEach(columns, function (c) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				var name = c.get('v.name'),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					direction = sort[name] || '';
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			this.selectAll(concrete, false);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Refresh to force fetch from data provider (if available).
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Component} cmp
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Object} cfg { name: String, index: number, value: String, globalId: String }
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	handleAction: function (cmp, cfg) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var name = cfg.name, 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			value = cfg.value, 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			globalId = cfg.globalId,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (name === 'dataGrid:select') {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (typeof value === 'string') {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				value = (value == 'true');
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// An empty index implies that this is select all. 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				this.selectAll(cmp, value);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				// Don't worry about calling 'selectOne'.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				// hlp.selectOne(cmp, index, value);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				this.setSelectedItems(cmp, value, [index]);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		} else if (name && index && globalId) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// Use value object incase change handlers are important.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// For the dataGrid implementation, we provide the internal row object.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			if (item && cmp._actionDelegate) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				cmp._actionDelegate.getEvent('onaction').setParams({
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					name 		: name,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					value 		: value, 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					component 	: $A.getCmp(globalId)
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @return {Array} columns
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var columns = concrete.get('v.columns'),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Handle force:recordLayout
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// TODO: make adapter? 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			$A.util.forEach(columns, function (column) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				var recordLayoutBody; 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				if (column.getDef().getDescriptor().getPrefix() === 'layout') {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					recordLayoutBody = column.getSuper().get('v.body');
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					$A.util.forEach(recordLayoutBody, function (col) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Cache the [input/output] components at each cell to avoid re-creating them later.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	setCellComponents: function(concrete, rowIndex, columnIndex, key, value) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var rowData = concrete._rowData,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			columns, cellData;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (!rowData[rowIndex]) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			// TODO index validation
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			$A.warning("dataGrid row index out of bounds");
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		cellData = rowData[rowIndex].columnData[columnIndex];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (!cellData.components) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		cellData.components[key] = value;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Returns a cell's specific data.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	getCellData: function(concrete, rowIndex, columnIndex) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		return concrete._rowData[rowIndex].columnData[columnIndex];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Initializes the structures to manage dataGrid selection
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	// TODO: See why we need selectionColumns as array
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	createSelectionData: function() {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Changes the selected status of all items in the grid. 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Component} cmp
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Boolean} value selected status to propagate 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	selectAll: function (cmp, value) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		this.setSelectedItems(cmp, value);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Commits selected status changes to the public 'selectedItems' attribute.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Uses an internal set to ensure items only appear once in the array. 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Component} cmp
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Boolean} value Value 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Array} rows (optional) Rows to apply the value to. A null or undefined value will apply the value to all rows
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	// TODO rework, internal set doesn't work in preventing duplicates
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	setSelectedItems: function (cmp, value, rows) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			rowData = concrete._rowData,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			selectionData = concrete._selectionData;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Apply the value either to the specified rows or to all rows depending on whether the rows parameter was defined
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var rowsLength = rows ? rows.length : rowData.length;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		for (var i = 0; i < rowsLength; i++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			var index = rows ? rows[i] : i;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			rowData[index].vp.set("selected", value);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			selectionData.selectedIndexes[index] = value;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var items = concrete.get("v.items") || [],
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			selectedItems = rows ? retrieveSelected(selectionData.selectedIndexes, items) : (value ? items : []);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var isSelectAll = (selectedItems.length == items.length);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		for (var i = 0; i < selectionData.selectionColumns.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			selectionData.selectionColumns[i].set("v.selectAll", isSelectAll);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		 * @return {Array} The selected row items on the grid.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		function retrieveSelected(selectedCache, items) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			var selected = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			for (var index in selectedCache) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				if (selectedCache[index]) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:     * Data Methods
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:     * Sets up the row data needed to display and work with the specified items
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:     * @param {Component} concrete
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:     * @param {Array} items
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:     * @param {Boolean} isEditMode
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    createRowData: function(concrete, items, isEditMode) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    	var self				= this,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowDataArray		= [],
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		targetComponents 	= isEditMode ? concrete._inputComponents : concrete._outputComponents,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    	for (var rowIndex = 0; rowIndex < items.length; rowIndex++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowData = {};
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowData.vp = self.createPassthroughValue(concrete, items[rowIndex], rowIndex);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowData.classes = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowData.columnData = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		for (var colIndex = 0; colIndex < concrete._columnCount; colIndex++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    			cdrs = targetComponents[colIndex];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    				// Columns do not need to define inputComponents and outputComponents.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    				// Attempt to fallback if the target is empty (likely for action columns).
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    				// Swap keys to set the correct property on child.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    			rowData.columnData[colIndex] = {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    		rowDataArray[rowIndex] = rowData;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:    	return rowDataArray;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Shift row data down in preparation for adding new rows or to remove rows from the grid.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	shiftRowData: function(concrete, index, count, remove) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var rowData = concrete._rowData,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			args = [index, remove ? count : 0],
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			columnData, cmpsToUnrender = [];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			for (var i=0; i<count; i++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				args.push(null);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			for (var i=0; i<count; i++) {	
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				columnData = rowData[index + i].columnData;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				for (var j=0; j<columnData.length; j++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:					components = columnData[j].components;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:						$A.util.forEach(components['output'], function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:						$A.util.forEach(components['input'], function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		rowData.splice.apply(rowData, args);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * TODO: index validation
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * TODO: works for removing just the rowData without the items, but questionably
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var tbody = concrete.find('tbody').getElement(),
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Remove value providers and children which are no longer needed.
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// TODO: refactor this function
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		this.shiftRowData(concrete, index, count, true);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		for (var i = index + count - 1; i >= index; i--) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * Inserts rows at the specified index. Inserts the data from newItems or empty
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Component} concrete
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Number} index zero-based index to begin insertion
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Number} count number of rows/items being inserted
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Array} newItems (optional) objects to be inserted 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Boolean} insertItems (optional) whether data should be inserted (if items already exist in v.items, we don't want to insert)
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * @param {Function} callback (optional) callback after all the rows have been inserted
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * TODO add index validation
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	 * TODO could use a more thorough refactor
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	insertRowsAndUpdateData: function (concrete, index, count, newItems, insertItems, callback) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:            //insertRowsAndUpdateData might be called before the table is actually rendered to the dom
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:            //If that's the case, this method will fail.  Instead, we just ignore it
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:            //and we'll end up calling this method when the dataGrid is rendered anyway
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var self = this,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			rowDataLength = concrete._rowData.length,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			resolved = 0, realIndex, tr, node, item, newRowData, newRowElements;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Create a skeleton for the new data if none are provided
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			for (var i = 0; i < count; i++) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				newItems[i] = concrete.get('v.itemShape');
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Convert possible index enums to actual indexes
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			realIndex = 0;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		} else if (index === 'last') {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			realIndex = rowDataLength; 
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			realIndex = index;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._addRemove = true;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Set up new row data for the new items and generate the DOM elements
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		newRowData = self.createRowData(concrete, newItems, isEditMode);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		newRowElements = self.createAndRenderTableRows(concrete, newRowData, isEditMode);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		// Cache the new row data in the correct place and insert the DOM elements into the grid
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (index === 'last') {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				items = items.concat(newItems);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			concrete._rowData = concrete._rowData.concat(newRowData);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			tbody.appendChild(newRowElements);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			//self.appendRowData(concrete, newRowData);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				Array.prototype.splice.apply(items, [realIndex, 0].concat(newItems));
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			Array.prototype.splice.apply(concrete._rowData, [realIndex, 0].concat(newRowData));
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			node = tbody.children[realIndex];
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			//self.insertRowData(concrete, newRowData, realIndex);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		concrete._addRemove = false;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (callback) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			callback();
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:	// TODO rename to something more accurate
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		var self = this,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			rowDataLength = concrete._rowData.length,
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:		if (itemsLength > rowDataLength) {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			diff = itemsLength - rowDataLength;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			this.insertRowsAndUpdateData(concrete, 'last', diff, null, false, function () {
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:				self.updateValueProvidersFromItems(concrete);
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			diff = rowDataLength - itemsLength;
ruau/ruau-components/src/nAmE/components/ui/dataGrid/dataGridHelper.js:			index = rowDataLength - diff;
