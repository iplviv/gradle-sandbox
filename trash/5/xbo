ruau/ruau-components/src/nAmE/components/ui/message/messageController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/message/messageController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/message/messageController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/message/messageController.js:        var theMessage = cmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/message/messageController.js:        $A.util.addClass(theMessage,"hide");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    // locators used for component elements, passed to querySelectorAll
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        message : "rgb(238, 238, 238)",
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        warning : "rgb(255, 255, 220)",
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    	var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        hex = hex.replace(shorthandRegex, function(m, r, g, b) {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        return result ? ['rgb(', parseInt(result[1], 16),  ', ',
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                         parseInt(result[2], 16), ', ',
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                         parseInt(result[3], 16), ')'].join('')
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    assertBasicChecks : function(component, expectedTitle){
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var rootDiv = component.getElement();
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        // verify aria attributes
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        $A.test.assertEquals("alert", rootDiv.getAttribute("role"),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "ui:message rendered with wrong aria role attribute");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        // verify severity CSS class
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var severity = component.get("v.severity");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        $A.test.assertTrue($A.util.hasClass(rootDiv, severity),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "ui:message rendered with wrong severity CSS class");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        // verify icon alt text
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var icon = component.find("messageIcon").getElement();
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        $A.test.assertEquals(severity, icon["alt"],
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "ui:message rendered with wrong icon alt text");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        // verify closable icon is present or not, based on closable attribute
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var closable = component.get("v.closable");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        $A.test.assertEquals(closable, !$A.util.isUndefinedOrNull(component.find("closeMessageLink").getElement()),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "ui:message closable attribute is not being respected");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        // verify background color is correct, based on severity attribute
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var cStyle = this.getComputedStyle(rootDiv);
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var backgroundColor = cStyle ? cStyle['background-color'] || cStyle['backgroundColor'] : null;
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        if (backgroundColor && backgroundColor.indexOf("#") == 0) {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        	backgroundColor = this.hexToRGB(backgroundColor);
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            severity = "message";
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        $A.test.assertEquals(this.bgColors[severity], backgroundColor,
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "ui:message rendered with wrong background color for severity '" + component.get("v.severity") + "'");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        var title = component.find("h4Title").getElement();
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            $A.test.assertEquals(expectedTitle, $A.test.getText(title),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "os:message rendered with wrong title text");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            $A.test.assertTrue($A.util.isUndefinedOrNull(title),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                "os:message expecting no title");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:     * Message with no severity value defaults to "message" severity.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    testMessage : {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        attributes : {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            title : "Just a message."
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            this.assertBasicChecks(component, "Just a message.");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:     * Error message with no title value is displayed with no title.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        attributes : {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            this.assertBasicChecks(component, "");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:     * Message with custom severity value is rendered with implied class.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    testMessageWithCustomSeverity:{
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        attributes : {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            this.assertBasicChecks(component, "nooooo!");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:     * Confirm message with class value is rendered with additional classes.
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:    testConfirmWithClasses:{
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:        attributes : {
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            "class" : "6pence _suffix -able"
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            this.assertBasicChecks(component, "yes or no");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            var div = component.getElement();
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            $A.test.assertTrue($A.util.hasClass(div, "6pence"),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                    "ui:message rendered without 6pence CSS class");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            $A.test.assertTrue($A.util.hasClass(div, "_suffix"),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                    "ui:message rendered without _suffix CSS class");
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:            $A.test.assertTrue($A.util.hasClass(div, "-able"),
ruau/ruau-components/src/nAmE/components/ui/message/messageTest.js:                    "ui:message rendered without -able CSS class");
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:			The <code>severity</code> attribute indicates a message's severity level and determines the style to use when displaying the message. 
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:	If the <code>closable</code> attribute is set to true, the message can be dismissed by pressing the &times; symbol.  
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    	<p>This example shows a success message when a condition evaluates to true or an error message otherwise.</p>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:<pre>&lt;ruau:component>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    &lt;ruau:attribute name="myBool" type="Boolean" default="true"/>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    &lt;ruau:renderIf isTrue="!{v.myBool}">
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:        &lt;ui:message title="Success" severity="confirm">
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:           The operation is successful.
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:        &lt;/ui:message>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:        &lt;ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:            &lt;ui:message title="Error" severity="error">
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:                This is an error.
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:            &lt;/ui:message>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:        &lt;/ruau:set>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    &lt;/ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:&lt;/ruau:component></pre>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:		<ruau:example name="message" ref="ruaudocs:demoMessage" label="Using ui:message">
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:    	<p>This example shows messages in varying severity levels.</p>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/message/message.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:<ruau:event type="COMPONENT" support="BETA" description="Indicates that the scroller has been ended.">	
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    <ruau:attribute name="currentPageX" type="Integer"  description="The desired page to be set."/>
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:    <ruau:attribute name="currentPageY" type="Integer"  description="The desired page to be set."/>
ruau/ruau-components/src/nAmE/components/ui/scrollEnd/scrollEnd.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:	 * Test currency formatted correctly.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    	attributes : {value : 1234},
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		var value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		$A.test.assertEquals(1234, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		$A.test.assertEquals("$1,234.00", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:	 * Test currency formatted correctly with custom format.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    testCurrencyWithFormat: {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    	attributes : {value : 1234, format : "$#,###.0000"},
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		var value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		$A.test.assertEquals(1234, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    		$A.test.assertEquals("$1,234.0000", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     * Verify that when the value changes it is re-rendered with the non-formatted new value
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    testUpdateValue: {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    	attributes : {value : 1234, format : "$#,###.0000"},
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   var value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals(1234, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals("$1,234.0000", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           component.set("v.value", 5678);
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           var value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           $A.test.assertEquals(5678, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals("5678", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     * Verify that when the format changes it is not re-rendered with the new format
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    testUpdateFormat: {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:    	attributes : {value : 1234, format : "$#,###.0000"},
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   var value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals(1234, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals("$1,234.0000", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           component.set("v.format", '£#,###.00');
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           value = component.getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:           $A.test.assertEquals(1234, component.get("v.value"), "Cmp value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyTest.js:     	   $A.test.assertEquals("$1,234.0000", value, "Element value does not equal expected");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:			A <code>ui:inputCurrency</code> component represents an input field for a number as a currency, which is rendered as an HTML <code>input</code> tag of type <code>text</code>.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:			The browser's locale is used by default. To render the output from a <code>ui:inputCurrency</code> component, use the <code>ui:outputCurrency</code> component.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		<p>This is a basic set up of a <code>ui:inputCurrency</code> component, which renders an input field with the value <code>$50.00</code> when the browser's currency locale is <code>$</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		<pre>&lt;ui:inputCurrency ruau:id="amount" label="Amount" class="field" value="50"/></pre>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		<p>This example results in the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:<pre>&lt;div class="uiInput uiInputText uiInputNumber">
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    &lt;label class="uiLabel-left uiLabel">
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:        &lt;span>Amount&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    &lt;/label>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    &lt;input class="field" aria-describedby="" max="99999999999999" step="1" placeholder="" type="text" min="-99999999999999">
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		<p>To override the browser's locale, set the new format on the <code>v.format</code> attribute of the <code>ui:inputCurrency</code> component.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		   This example renders an input field with the value <code>£50.00</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:<pre>var curr = component.find("amount");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:curr.set("v.format", '£#,###.00');</pre>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:		<ruau:example name="inputTextExample" ref="uiExamples:inputExample" label="Using ui:inputCurrency">
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:    	<p>This example shows a <code>ui:inputCurrency</code> component and a corresponding <code>ui:outputCurrency</code> component.</p>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:    doUpdate: function(component, value) {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:            var regex = new RegExp("\\" + $A.get("$Locale.currency"), "g");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:            value = value.replace(regex, '');
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:        component.set("v.value", value);
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:    getDefaultFormatter: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrencyHelper.js:        return $A.localizationService.getDefaultCurrencyFormat();
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:inputNumber" extensible="true" description="An input field for entering a currency.">
ruau/ruau-components/src/nAmE/components/ui/inputCurrency/inputCurrency.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:<ruau:event type="COMPONENT" 
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:            description="A classification of event in which one component is attempting to command another to perform some action. Extend this event to provide concrete commands. Known concretes: ui:open, ui:close, ui:refresh, ui:showMore.">
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:    <ruau:attribute name="parameters" type="Object" description="Untyped object of any parameters needed by the target component."/>
ruau/ruau-components/src/nAmE/components/ui/command/command.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:<ruau:event type="APPLICATION" support="PROTO" description="Fired from a custom popup triggers.">
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    <ruau:attribute name="component" type="Ruue.Component[]" description="The custom popup trigger." />
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:    <ruau:attribute name="show" type="Boolean" description="Whether to show or hide the target." />
ruau/ruau-components/src/nAmE/components/ui/popupTargetToggle/popupTargetToggle.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js:	 * Toggle between CKEditor and plain textarea
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js:	 * Triggered by the application event "ui:toggleRichText"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextController.js:		helper.toggle(cmp, evt.getParam('isRichText'));		
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	addDomHandler : function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var	editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		if (editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            editorInstance.on(event, this.editorEventHandler, cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            // defer binding editor events until the dom is created so that
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            // we can bind directly and receive faster events effectively
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            // bypassing the 200ms delay on blur events
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            editorInstance.on('contentDom', function() {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:                var concreteCmp = this.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:                var helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:                var editable = editorInstance.editable();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:                editable.attachListener(editable, event, helper.editorEventHandler, concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			var el = this.getInputElement(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	        $A.util.on(el, event, this.domEventHandler);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	handleUpdate : function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var helper = cmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        var updateOn = helper.getUpdateOn(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        // if this is an event we're supposed to update on
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        if ($A.util.arrayIndexOf(updateOn, event.name || event.type) > -1) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        	var value = cmp.get('v.value');
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        	//TODO: Do we need to compare content here?
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        	var content = helper.getContent(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        	if (value !== content) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		//setting the attribute value will trigger the change event and also rerender the component
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		//use a flag here prevent the component rerender every time the value is changed
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		//It is also used to prevent the editor content getting set again in the value change handler
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		//change event still fires even if "ignoreChange"(third argument) is set to true if v.value is an expression
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		cmp._updatingValue = true;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		cmp.set('v.value', content);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        		cmp._updatingValue = false;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	editorEventHandler : function(event) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var cmp = this.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		if (cmp.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			var helper = cmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	        // extended components can do some event processing before the Ruue event gets fired
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	        var e = cmp.getEvent(event.name);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Retrieve editor config and instantiate CKEditor instance.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Also creates a CKEditor-based event listener to update
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * the value attribute onchange of CKEditor contents.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Called from renderer (afterRender) and controller (toggle)
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		if ($A.util.getBooleanValue(cmp.get('v.isRichText'))) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!this.isLibraryLoaded(cmp)) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				$A.warn("Richtext editor library is not loaded");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			var editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				var helper = cmp.getConcreteComponent().getDef().getHelper() || this;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				editorInstance = CKEDITOR.replace(helper.getEditorId(cmp),  helper.getEditorConfig(cmp));
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	isLibraryLoaded: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			var plainText;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				//Get the plain text before destroy
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				plainText = editorInstance.document.getBody().getText();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				editorInstance.destroy();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				plainText = cmp.get('v.value');
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			// TODO: determine if we want the <p></p> surrounding plain text when we toggle to rich text
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			// Set the textarea contents to be the plaintext b/c ckeditor doesn't
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			document.getElementById(this.getEditorId(cmp)).value = plainText;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			cmp.set('v.value', plainText);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	getEditorInstance : function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		return typeof CKEDITOR === "undefined" ? null : CKEDITOR.instances[this.getEditorId(cmp)];
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Retrieves the CKEditor (or textarea if toggled off) contents
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Called by the onchange listener to save contents to the value attribute
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * which is autowired to save
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		return editorInstance ? editorInstance.getData() : this.getDomElementValue(this.getInputElement(cmp)) || '';
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		if (editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			editorInstance.setData(content);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	getLocale : function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		return $A.get("$Locale.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Main config method that creates CKEditor config object
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Called from renderer and controller (toggle)
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Returns a config object
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var toolbarConfig = this.getToolbarConfig(cmp),
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			locale = this.getLocale(cmp),
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarLocation = cmp.get('v.toolbarLocation');
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var config = {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				language : locale,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				bodyClass: 'inputRichTextBody',
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				toolbar : toolbarConfig,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				toolbarLocation : toolbarLocation,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				toolbarCanCollapse : false,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				resize_enabled : false,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				forcePasteAsPlainText : false,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    		forceSimpleAmpersand : true,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    	     * Deactivate:
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    	     * - The Element path component (RTE's "status bar")
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    	     * - Resizing ability (editing area maximization, resizing)
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    		removePlugins : 'elementspath,maximize,resize,about,liststyle,tabletools,scayt,contextmenu',
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    	     * Hide some dialog tabs:
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    	     * - Link dialog: advanced and target tabs
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    		removeDialogTabs : 'link:advanced;image:advanced;table:advanced;tableProperties:advanced',
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    		enterMode : CKEDITOR.ENTER_BR, //to use <br/> instead of <p> each enter
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				forcePasteAsPlainText : false,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	    		forceSimpleAmpersand : true
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Copies all the properties of source to target if they don't already exist.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	merge: function(target, source) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        var property;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        if (target) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:            	target[property] = source[property];
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:        return target;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Get toolbar config based on value of toolbar attribute.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	 * Called by getEditorConfig()
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	getToolbarConfig : function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var toolbar = cmp.get("v.toolbar");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var toolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		switch (toolbar) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		case 'basic':
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!this.basicToolbarConfig) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				this.basicToolbarConfig = [
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'basicstyles', items : ['Bold', 'Italic', 'Underline', 'Strike']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'links', items : ['Link']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'insert', items : ['Image']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'paragraph', items : ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'Indent', 'Outdent']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'list', items : ['BulletedList', 'NumberedList']}
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarConfig = this.basicToolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			break;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		case 'standard':
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!this.standardToolbarConfig) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				this.standardToolbarConfig = [
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'basicstyles', items : ['Bold', 'Italic']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'links',       items : [ 'Link','Unlink','Anchor']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'insert', items : ['Image']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'paragraph', items : ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'Indent', 'Outdent', 'BulletedList', 'NumberedList']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'styles', items : [ 'Styles','Format','Font','FontSize' ] }
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarConfig = this.standardToolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			break;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		case 'full' :
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!this.fullToolbarConfig) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				this.fullToolbarConfig = [
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'clipboard',   items : [ 'Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'editing',     items : [ 'Find','Replace','-','SelectAll'] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'forms',       items : [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'basicstyles', items : [ 'Bold','Italic','Underline','Strike','Subscript','Superscript','-','RemoveFormat' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'paragraph',   items : [ 'NumberedList','BulletedList','-','Outdent','Indent','-','Blockquote','CreateDiv','-','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock','-','BidiLtr','BidiRtl' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'links',       items : [ 'Link','Unlink','Anchor' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'insert',      items : [ 'Image','Flash','Table','HorizontalRule','Smiley','SpecialChar','PageBreak' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'styles',      items : [ 'Styles','Format','Font','FontSize' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'colors',      items : [ 'TextColor','BGColor' ] },
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			        { name: 'tools',       items : [ 'Maximize', 'ShowBlocks'] }
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarConfig = this.fullToolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			break;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		case 'email':
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			if (!this.emailToolbarConfig) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:				this.emailToolbarConfig = [
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'format', items : ['Font', 'FontSize']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'basicstyles', items : ['Bold','Italic','Underline']},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:	               	 {name: 'paragraph', items : ['JustifyLeft','JustifyCenter', 'JustifyRight','BulletedList', 'NumberedList', 'Indent', 'Outdent']}
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarConfig = this.emailToolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			break;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		default:
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			toolbarConfig = toolbar;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		return toolbarConfig;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		var editorInstance = this.getEditorInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:		if (editorInstance) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextHelper.js:			editorInstance.destroy();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		italic: "cke_button__italic_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		removeFormat: "cke_button__removeformat_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		fontFormat: "cke_combo__format",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		paste: "cke_button__paste_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		pasteText: "cke_button__pastetext_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		pasteWord: "cke_button__pastefromword_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		replace: "cke_button__replace_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		selectAll: "cke_button__selectall",		
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		anchor: "cke_button__anchor_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		image: "cke_button__image_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		div: "cke_button__creatediv_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		radio: "cke_button__radio_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		textArea: "cke_button__textarea_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		imageButton: "cke_button__imagebutton_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		flash: "cke_button__flash_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		table: "cke_button__table_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		horizontalRule: "cke_button__horizontalrule_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		specialChar: "cke_button__specialchar_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		pageBreak: "cke_button__pagebreak_icon"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:	ckeDefaultButtons:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		italic: "cke_button__italic_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:	ckeBasicButtons:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		italic: "cke_button__italic_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		image: "cke_button__image_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:	ckeStandardButtons:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		italic: "cke_button__italic_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		anchor: "cke_button__anchor_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		image: "cke_button__image_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		fontFormat: "cke_combo__format",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:	ckeEmailButtons:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:		italic: "cke_button__italic_icon",
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test basic tool bar is loaded.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarTypeBasic:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbar: "basic"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertButtonsOnToolBar(this.ckeBasicButtons);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test full tool bar is loaded.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarTypeFull:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbar: "full"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertButtonsOnToolBar(this.ckeButtons);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test standard tool bar is loaded.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarTypeStandard:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbar: "standard"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertButtonsOnToolBar(this.ckeStandardButtons);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test email tool bar is loaded.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarTypeEmail:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbar: "email"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertButtonsOnToolBar(this.ckeEmailButtons);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test default tool bar is loaded.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    // TODO : @ctatlah - uncomment after john pushes fix
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    _testToolbarTypeDefault:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbar: ""},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertButtonsOnToolBar(this.ckeDefaultButtons);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Valid toolbar location value. ckeditor is loaded with toolbar in proper place bottom.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarLocationBottom:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbarLocation: "outerspace"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertToolbarPresent(false);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Invalid toolbar location value. ckeditor is loaded but no toolbar present.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testToolbarLocationInvalid:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {toolbarLocation: "outerspace"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertToolbarPresent(false);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Disable richText.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testDisableRichText:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {isRichText: false},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertCkeEditorPresent(false);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Test invalid dimensions.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:     * Exclude IE 7, 8 since they don't support negative dimensions
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    testRichTextInvalidDimensions:{
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {width: -100, height:-10},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		// just verify ckeditor loaded
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	attributes : {value: "<h3 style='color:red;'><span style='font-family:courier new,courier,monospace;'><span style='font-size:8px;'>test content</span></span></h3>"},
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		this.assertRickTextInitalized();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		var content = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNotNull(content, 
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			"Content should be present (note: can not verify styling)");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    assertRickTextInitalized : function() {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	$A.test.addWaitFor(true, function(){
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			$A.test.getElementByClass("cke_wysiwyg_frame"));
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    assertCkeEditorPresent : function(isPresent) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	var elem = $A.test.getElementByClass("cke_wysiwyg_frame");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNotNull(elem, "ck editor should be present");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNull(elem, "There should be NO ck editor");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    assertToolbarPresent : function(isPresent) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	var elem = $A.test.getElementByClass("cke_toolbox");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNotNull(elem, "Toolbar should be present");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNull(elem, "Toolbar should NOT be present");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    assertButtonsOnToolBar : function(expectedButtons) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	for (var b in this.ckeButtons) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			this.assertButtonPresent(expectedButtons[b], false);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			this.assertButtonPresent(expectedButtons[b], true);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    assertButtonPresent : function(button, isPresent) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    	var elem = $A.test.getElementByClass(button);
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNotNull(elem, 
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			button + " button in toolbar should be present");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    		$A.test.assertNull(elem, 
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextTest.js:    			button + " button in toolbar should NOT be present");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:inputTextArea" extensible="true" description="An input field for entering rich text.">
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    <ruau:clientLibrary name="CkEditor" type="JS" />
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:	<ruau:attribute name="toolbar" type="String" default="basic" description="Specify the toolbar config to be used. Possible values: standard, full, email. Default value is &quot;basic&quot;. Custom config can be added in inputRichTextHelper."/>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:	<ruau:attribute name="toolbarLocation" type="String" default="top" description="Location of the toolbar. Possible options are &quot;top&quot; and &quot;bottom&quot;." /> 
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:	<ruau:attribute access="GLOBAL" name="width" type="String"  description="The editor UI outer width. This can be an integer, for pixel sizes, or any CSS-defined unit. If isRichText is set to false, use the cols attribute instead." />
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:	<ruau:attribute access="GLOBAL" name="height" type="String" default="200" description="The height of the editing area (that includes the editor content). This can be an integer, for pixel sizes, or any CSS-defined length unit." />
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:	<ruau:attribute name="isRichText" type="Boolean" default="true" description="Indicates if the input is in rich text or plain text. If set to false, a text area replaces the rich text editor." />	
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp: 	<ruau:handler event="ui:toggleRichText" action="{!c.toggle}" description="Handler for ui:toggleRichText event" />
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:     <ruau:renderif isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:        <textarea ruau:id="textAreaElem"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            class="{!v.class+(v.resizable?'':' noresize')}"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            disabled="{!v.disabled}"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            readonly="{!v.readonly}"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            maxlength="{!v.maxlength}"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            placeholder="{!v.placeholder}"
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:            aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:        <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:        </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:    </ruau:renderif>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:	afterRender : function(cmp, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:		if (cmp.getConcreteComponent()._updatingValue) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:			//don't rerender when updating value
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:		var shouldRender = false;
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:        var attributes = cmp.getDef().getAttributeDefs();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:        attributes.each(function(attributeDef) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            var name = attributeDef.getDescriptor().getName();
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            if (name !== "value" && cmp.isDirty("v." + name)) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            } else if (name === "value" && cmp.isDirty("v.value")) {
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            	//Cannot listen to v.value change event to update content
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            	//since the parent component inputTextArea also listens v.value change event and update v.value again
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichTextRenderer.js:            	helper.setContent(cmp, cmp.get("v.value"));
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:		    By default, <code>ui:inputRichText</code> renders a WYSIWYG editor for entering rich text. 
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:		    Setting <code>isRichText="false"</code> uses the <code>ui:inputTextArea</code> component instead of a WYSIWYG editor.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:			The width and height of the rich text editor are independent of those on the <code>ui:inputTextArea</code> component.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:		  	To set the width and height of the component when you set <code>isRichText="false"</code>, use the <code>cols</code> and <code>rows</code> attributes.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:		    Otherwise, use the <code>width</code> and <code>height</code> attributes.    	
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:			<code>ui:outputRichText</code> supports a list of HTML tags that are supported by CKEditor.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    	   Tags such as <code>&lt;script&gt;</code> are removed.
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:		<ruau:example name="inputRichText" ref="ruaudocs:demoInputRT" label="Using ui:inputRichText">
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:    	<p>This example shows a text area and WYSIWYG editor.</p>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputRichText/inputRichText.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:<ruau:event type="APPLICATION">
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:	<ruau:attribute name="isVisible" type="Boolean" description="panel is visible or not"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:	<ruau:attribute name="isModal" type="Boolean" description="modal glass behind the actual panel"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:	<ruau:attribute name="closeOnModalClick" type="Boolean" description="Whether a click button in the modal area will close the panel"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:  	<ruau:attribute name="body" type="Ruue.Component[]" description="buttons to add to the header of the panel(only when modal is enabled)"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="button" type="Ruue.Component[]" description="Buttons to add to the bottom of the window (only when panel is enabled"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="buttonColor" type="String" description="CSS Background string for the button"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="buttonClass" type="String" description="CSS class string"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="slideFrom" type="String" description="String that identifies the animation values (defaults to right): left|right|top|bottom"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="iconKey" type="String" description="Default icon from the current font to put into the button"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="callback" type="Object" description="Callback that will be called once the panel has been rendered. Can be Ruue.Action | function" />
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="panelOutAltText" type="String" description="Alt text for icon when panel is open/slide out for accessibility"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="panelInAltText" type="String" description="Alt text for icon when panel is closed for accessibility"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="iconAltText" type="String" description="Icon alt text in panel"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="iconTransformation" type="String" description="Css transformation on icon e.g flip,rotate or any other custom"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:    <ruau:attribute name="onCreate" type="Object" description="Callback function"/>
ruau/ruau-components/src/nAmE/components/ui/createPanelSlider/createPanelSlider.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/cut/cut.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the user has cut content to the clipboard."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:<ruau:component extensible="true" support="PROTO" description="The label displayed on a field component.">
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:    TODO: ui:fieldLabel
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/fieldLabel/fieldLabel.css:.uiFieldLabel{
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:<ruau:event type="COMPONENT" description="Used to trigger providing of data from a list dataProvider.">
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:    <ruau:attribute name="parameters" type="Object" description="The parameters data provider can use to fetch data."/>
ruau/ruau-components/src/nAmE/components/ui/dataProvide/dataProvide.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioHelper.js:	getDomElementValue: function(element) {
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:			A <code>ui:inputRadio</code> component represents a radio button whose state is controlled by the <code>value</code> and <code>disabled</code> attributes. It's rendered as an HTML <code>input</code> tag of type <code>radio</code>.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:		<p>This is a basic set up of a radio button.</p>		
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:		<pre>&lt;ui:inputRadio label="Yes"/></pre>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:		<p>This example results in the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:		<pre>&lt;div class="uiInput uiInputRadio">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    &lt;label class="uiLabel-left uiLabel">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:        &lt;span>Yes&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    &lt;/label>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    &lt;input aria-describedby="" type="radio">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:	<p>This example shows a list of radio buttons whose labels are provided by a component attribute.</p>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:	<pre>&lt;!-- Component Markup -->
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:&lt;ruau:attribute name="stages" type="String[]" default="Any,Open,Closed,Closed Won"/>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:&lt;ruau:iteration items="{!v.stages}" var="stage">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    &lt;ui:inputRadio label="{!stage}" change="{!c.doSomething}" />
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:&lt;/ruau:iteration></pre>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:	</ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:	<ruau:example name="inputExample" ref="ruaudocs:demoSelect" label="Using ui:inputRadio">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    		This example shows how you can retrieve the value of an <code>ui:inputRadio</code> component.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:    </ruau:example>		
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:     * Verify setting disabled attribute.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    testDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:        attributes : {disabled: true},
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:            ruau.test.assertTrue(component.find("radio").getElement().disabled, "Element not correctly disabled");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:     * Verify not setting disabled attribute.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    testNotDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    	attributes : {disabled: false},
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    		ruau.test.assertFalse(component.find("radio").getElement().disabled, "Element not correctly enabled");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:     * Verify radio button is clickable
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    	attributes : {name: "testRadio"},
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    		radioElement = component.find("radio").getElement();
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    		$A.test.clickOrTouch(radioElement);
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadioTest.js:    		ruau.test.assertTrue(radioElement.checked, "Radio Element was not clickable");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.css:.uiInputRadio{
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:input" implements="ui:inputBaseOption" extensible="true" description="The radio button used in the input.">
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    <ruau:attribute access="GLOBAL" name="disabled" type="Boolean" default="false" description="Specifies whether this radio button should be displayed in a disabled state. Disabled radio buttons can't be clicked. Default value is &quot;false&quot;."/>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    <input ruau:id="radio" 
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   class="{!v.class}"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   name="{!v.name}"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   type="radio"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   value="{!v.text}"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   checked="{!v.value}"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   disabled="{!v.disabled}"
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:    	   aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputRadio/inputRadio.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:<ruau:event type="COMPONENT"  description="">
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:	<ruau:attribute name="pageModel" type="Object" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:	<ruau:attribute name="pageComponent" type="Object" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:	<ruau:attribute name="pageIndex" type="Integer" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:	<ruau:attribute name="pageId" type="String" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:	<ruau:attribute name="pageSize" type="Object" />
ruau/ruau-components/src/nAmE/components/ui/carouselPageEvent/carouselPageEvent.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:<ruau:component access="GLOBAL" support="GA" extensible="true" abstract="true" extends="ui:interactive" provider="js://ui.menuItem" description="A UI menu item in a ui:menuList component.">
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:registerevent name="menuSelect" type="ui:menuSelect" description="The event that is fired when the menu item is selected."/>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:attribute access="GLOBAL" name="selected" type="Boolean" default="false" description="The status of the menu item. True means this menu item is selected; False is not selected."/>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:attribute access="GLOBAL" name="type" type="String" description="The concrete type of the menu item. Accepted values are 'action', 'checkbox', 'radio', 'separator' or any namespaced component descriptor, e.g. ns:xxxxmenuItem."/>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:attribute access="GLOBAL" name="hideMenuAfterSelected" type="Boolean" default="false" description="Set to true to hide menu after the menu item is selected." />
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:attribute access="GLOBAL" name="label" type="String" description="The text displayed on the component."/>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:    <ruau:handler name="mouseover" action="{!c.handleMouseover}"/>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js:        helper.setDisabled(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js:        helper.addMenuItemDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js:        helper.setDisabled(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemRenderer.js:        helper.addMenuItemDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js:        var helper = component.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js:        var type = component.get("v.type")||'';
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js:            return helper.typeMap["action"];
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemProvider.js:            var menuItemDef = helper.typeMap[type];
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemController.js:    handleMouseover: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    display:block;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    padding:3px 9px;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    text-decoration:none;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a.selectable {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    text-decoration:none;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a:focus,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a:active {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    border-radius:8px;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    background-color:#CFEEF8;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    padding:3px 9px;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a.selectable:focus,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:.THIS a.selectable:active {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    border-radius:8px;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    text-decoration:underline;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItem.css:    background-color:#CFEEF8;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    typeMap : {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        "action": "ui:actionMenuItem",
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        "radio": "ui:radioMenuItem",
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        "separator": "ui:menuItemSeparator"
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    addMenuItemDomEvents : function(component) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var events = ["click", "keydown", "mouseover"];
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        for (var i=0, len=events.length; i < len; i++) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:            // We need to fire these events for status update anyway
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:            if (!component.hasEventHandler(events[i])) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                this.addDomHandler(component, events[i]);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        if (component.get("v.disabled") === true && event.type !== "mouseover") {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var e = component.getEvent(event.type);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        helper.setEventParams(e, event);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    	var options = options || {};
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var e = component.getEvent("menuSelect");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:            e.setParams({
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:     * Select the menu item when Space bar is pressed
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    handleSpacekeydown: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        if (component.get("v.disabled") === true) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var e = component.getEvent("click");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        this.setEventParams(e, event);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        this.supportKeyboardInteraction(component, event);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    setDisabled : function(component) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    	var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var linkCmp = this.getAnchorElement(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var elem = linkCmp ? linkCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:            var disabled = concreteCmp.get("v.disabled");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:            if (disabled === true) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                $A.util.removeClass(elem, "selectable");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                elem.setAttribute("aria-disabled", "true");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                $A.util.addClass(elem, "selectable");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                elem.removeAttribute("aria-disabled");
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var linkCmp = this.getAnchorElement(component);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var elem = linkCmp ? linkCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    	//Walk up the component ancestor to find the contained component by localId
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    	var localId = "link", c =  component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    	var retCmp = null;    	
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    		retCmp = c.find(localId);
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    			break;
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:     * Handle keyboard interactions
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:    supportKeyboardInteraction: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:        	if (event.keyCode === 32) {  // space key: select the menu item
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/menuItem/menuItemHelper.js:                this.handleSpacekeydown(concreteCmp, event);
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js:    handleClick : function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItemController.js:    	var hideMenu = component.getConcreteComponent().get("v.hideMenuAfterSelected");
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:menuItem" extensible="true" description="​A menu item that triggers an action. This component is nested in a ui:menu component.">
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    <ruau:handler name="click" action="{!c.handleClick}"/>
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    <ruau:attribute access="GLOBAL" name="hideMenuAfterSelected" type="Boolean" default="true" description="Set to true to hide menu after the menu item is selected." />
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:    <li ruau:id="listitem" class="{!v.class}" role="presentation">
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:        <a ruau:id="link" role="menuitem">
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:            <ruau:renderIf isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:                {!v.label}
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:                <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:                </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:            </ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/actionMenuItem/actionMenuItem.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:<ruau:event type="COMPONENT" support="PROTO">
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:	<ruau:attribute name="name" type="String"/>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:    <ruau:attribute name="index" type="Integer"/>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:	<ruau:attribute name="value" type="String"/>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:	<ruau:attribute name="item" type="Object"/>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:	<ruau:attribute name="component" type="Ruue.Component[]" description="ui:action which fired the event"/>
ruau/ruau-components/src/nAmE/components/ui/actionEvent/actionEvent.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.css:.uiInputRange{
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:<ruau:component extends="ui:inputNumber" extensible="true" support="BETA" description="The range used in the input.">
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    <ruau:attribute name="min" type="Integer" default="0" description="Specifies the minimum integer allowed. Default value is &#8220;0&#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    <ruau:attribute name="max" type="Integer" default="100" description="Specifies the maximum integer allowed. Default value is &#8220;100&#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    <ruau:attribute name="step" type="Integer" default="1" description="Specifies the allowed integer intervals. Default value is &#8220;1&#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    <ruau:attribute name="value" type="Integer" default="0" description="The input value of the integer."/>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    <input type="range"
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    	   class="{!v.class}"
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    	   max="{!v.max}"
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    	   value="{!v.value}" 
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:    	   aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputRange/inputRange.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:menuItem" extensible="true" description="​A menu item with a radio button that indicates a mutually exclusive selection and can be used to invoke an action. This component is nested in a ui:menu component.">
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    <ruau:handler name="click" action="{!c.handleClick}"/>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:    <li ruau:id="listitem" class="{!v.class}" role="presentation">
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:        <a ruau:id="link" role="menuitemradio">
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:            <ruau:renderIf isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:                <b></b>{!v.label}
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:                <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:                </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:            </ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js:    handleClick : function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js:    	var concrete = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js:        var concreteHelper = concrete.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemController.js:        concreteHelper.handleClick(concrete);
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:	handleClick : function(component) {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:		var current = component.get("v.selected");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:        if (current === false) {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:        var selected = concreteCmp.get("v.selected");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:        var linkCmp = component.find("link");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:            var elem = linkCmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:                $A.util.addClass(elem, "selected");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:                elem.setAttribute("aria-checked", "true");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:                $A.util.removeClass(elem, "selected");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItemHelper.js:                elem.setAttribute("aria-checked", "false");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:.THIS a b {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:    float: left;
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:    display: block;
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:    margin-right: 2px;
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:.THIS a.selected b {
ruau/ruau-components/src/nAmE/components/ui/radioMenuItem/radioMenuItem.css:    background: url('/ruauFW/resources/ruau/images/menuitem-check.png') no-repeat center center;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:<ruau:component extends="ui:radioMenuItem" support="BETA" description="​A menu item that indicates a mutually exclusive selection + toggle state. This component is nested in a ui:menu component.">
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    <ruau:attribute name="isAscending" type="Boolean" default="true" description="Component can be either in a true or false set (independent of being selected)"/>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    <ruau:attribute name="ascLabel" type="String" default="Ascending" description="Label for ascending state"/>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    <ruau:attribute name="descLabel" type="String" default="Descending" description="Label for descending state"/>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    <ruau:handler name="change" value="{!v.isAscending}" action="{!c.updateDirection}"/>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:    <li ruau:id="listItem" class="{!v.class}" role="presentation">
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        <a ruau:id="link" class="menuItemAnchor" role="menuitemradio">
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        	<span class="labelSpan">{!v.label}</span>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        	<span class="stateIndicator">
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        		<span class="indicatorBox">
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        			<span ruau:id="arrowSpan" class="indicatorArrow"/>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        			<span ruau:id="ascLabel" class="indicatorLabel visible">{!v.ascLabel}</span>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        			<span ruau:id="descLabel" class="indicatorLabel">{!v.descLabel}</span>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        		</span>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        	</span>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding: 14px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	background-color: #e8eaeb;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS a {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	display: block;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding: 0;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	margin: 0;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	text-align: left;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	text-decoration: none;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS a.menuItemAnchor:active,
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS a.menuItemAnchor:focus {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding: 0;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	border-radius: 0;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	text-decoration: none;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	background-color: transparent;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .labelSpan {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	float: left;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .stateIndicator {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	float: left;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:    display: none;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS a.selected .stateIndicator {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	display: block;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .indicatorBox {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	float: right;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding-bottom: 3px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding-left: 7px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	padding-right: 7px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	background-color: white;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	border-radius: 20px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .indicatorLabel {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	display: none;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	line-height: 14px !important;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	margin-left: 3px;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .indicatorArrowIcon {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	color: #2a94d6;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:@keyframes spinToUp {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:    from {transform:rotate(-90deg);}
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:    to {transform:rotate(90deg);}
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:@keyframes spinToDown {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:    from {transform:rotate(90deg);}
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:    to {transform:rotate(270deg);}
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .indicatorArrowIcon.up {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	/**animation: spinToUp 0.3s ease 0s 1;**/
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	transition: transform 0.25s ease-in-out;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	transform: rotate(90deg);
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:.THIS .indicatorArrowIcon.down {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	/**animation: spinToDown 0.3s ease 0s 1;**/
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	transition: transform 0.25s ease-in-out;
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItem.css:	transform: rotate(270deg);
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:	handleClick: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:		var current = cmp.get("v.selected");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:        if (current === false) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:        	this.toggleState(cmp);
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    toggleState: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	var ascending = $A.util.getBooleanValue(cmp.get("v.isAscending"));
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	cmp.set("v.isAscending", !ascending, true);
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	this.updateDirection(cmp, !ascending)
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    updateDirection: function(cmp, ascending) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	var asc = ascending || cmp.get("v.isAscending");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	var ascLabel = cmp.find("ascLabel").getElement();
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	var descLabel = cmp.find("descLabel").getElement();
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    	if (asc) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    		$A.util.addClass(ascLabel, "visible");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    		$A.util.removeClass(descLabel, "visible");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    		$A.util.addClass(descLabel, "visible");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemHelper.js:    		$A.util.removeClass(ascLabel, "visible");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js:	updateDirection: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/radioToggleMenuItem/radioToggleMenuItemController.js:		helper.updateDirection(cmp);
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:<ruau:event type="APPLICATION" description="The event used by ui:panelManager to destroy all panels.">
ruau/ruau-components/src/nAmE/components/ui/panelDestroy/panelDestroy.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnCell/listViewColumnCell.cmp:<ruau:component extends="ui:listViewColumn" extensible="true" support="GA" description="A simple column template definition, describes a barebones table data cell."><td class="{!v.class?v.class:null}" headers="{!v.headers?v.headers:null}" width="{!v.width?v.width:null}" title="{!v.tooltip?v.tooltip:null}">{!v.body}</td></ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:	 * @param {Component} component An instance of ui:inputDate
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:	displayDatePicker: function (component) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:		var self 		= this,
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:			value 		= component.getConcreteComponent().get('v.value'),
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:			currentDate = value ? $A.localizationService.parseDateTime(value, 'yyyy-MM-dd') : new Date();
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:		$A.get('e.ui:showDatePicker').setParams({
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:			value      	: self.getDateString(currentDate),
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTriggerHelper.js:				component.getConcreteComponent().set('v.value', evt.getParam('value'));
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:<ruau:documentation> 
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:			Use only one instance of <code>ui:datePickerManager</code> to manage multiple instances of <code>ui:inputDateTrigger</code>.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:			This renders only one date picker in the DOM, which improves load time if you have multiple date pickers in a component. The date picker is opened when you click the date picker icon on each date field.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:		<ruau:example name="datePicker" ref="uiExamples:datePicker" label="Using the Date Picker">
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:    	<p>This example shows managed date pickers. Only one instance of <code>ui:datePickerManager</code> is required to manage date pickers on a component.</p>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:<ruau:component extends="ui:inputDate" description="Represents a date input component that can be used with the date picker manager, ui:datePickerManager.">
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:	<ruau:set attribute="displayDatePicker" value="true"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:	<ruau:set attribute="loadDatePicker" value="false"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTrigger/inputDateTrigger.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/mouseover/mouseover.evt:<ruau:event type="COMPONENT" extends="ui:baseMouseEvent" support="GA" description="Indicates that the user has moved the mouse pointer over the component."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:<ruau:interface support="GA" description="Common interface across date components.">
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    <ruau:attribute name="format" type="String" access="GLOBAL" description="A string (pattern letters are defined in java.text.SimpleDateFormat) used to format the date and time of the value attribute."/>
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:    <ruau:attribute name="langLocale" type="String" access="GLOBAL" description="The language locale used to format date value."/>
ruau/ruau-components/src/nAmE/components/ui/outputDateComponent/outputDateComponent.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:    addOptionDomEvents : function(component) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var events = ["mouseover", "mouseout"];
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        for (var i=0, len=events.length; i < len; i++) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            if (!component.hasEventHandler(events[i])) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                this.addDomHandler(component, events[i]);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:    displayText: function(component, keyword) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var keyword = concreteCmp.get("v.keyword");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var optionCmp = concreteCmp.find("option");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var elem = optionCmp ? optionCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            var label = concreteCmp.get("v.label");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                elem.textContent = label;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            var regex;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            } catch (e) { // if keyword is not a legal regular expression, display the original label
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                elem.textContent = label;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            var searchResult = regex.exec(label);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            if (searchResult && searchResult[0].length > 0) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                var displayText = this.htmlEscape(label.substring(0, searchResult.index)) +
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                                  "<mark class=\"data-match\">" + 
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                                  this.htmlEscape(searchResult[0]) + 
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                                  "</mark>" +
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                                  this.htmlEscape(label.substr(searchResult.index + searchResult[0].length));
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                elem.innerHTML = displayText;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:                elem.textContent = label;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:    handleMouseover: function(component) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var optionCmp = component.find("option");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var elem = optionCmp ? optionCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            $A.util.addClass(optionCmp, "mouseovered");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:    handleMouseout: function(component) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var optionCmp = component.find("option");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        var elem = optionCmp ? optionCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            $A.util.removeClass(optionCmp, "mouseovered");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:    htmlEscape: function(str) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:        return String(str).replace(/&/g, '&amp;')
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            .replace(new RegExp('"', "g"), '&quot;')
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            .replace(new RegExp("'", "g"), '&#39;')
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            .replace(/</g, '&lt;')
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionHelper.js:            .replace(/>/g, '&gt;');
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    display: none;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:.THIS a {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    display:block;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    padding:3px 9px;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    text-decoration:none;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:.THIS.highlighted a {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    background-color:#0683C5;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    text-decoration:underline;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    padding:3px 9px;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:.THIS a.mouseovered {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    background-color: #A9D0F5;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:.THIS.default .data-match {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    border-radius: 2px;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.css:    background-color: #B5DAEE;
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:<ruau:component extends="ui:interactive" extensible="true" support="beta"
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    implements="ui:autocompleteOptionTemplate" 
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    description="This component represents list options in an ui:autocomplete component. The options are displayed when an input keyword matches an item in the data provider.">
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <ruau:attribute name="displayText" type="String" description="The displayed text string for this option."/>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <ruau:attribute name="label" type="String" required="true" description="The text displayed on the component. This attribute's value is used to do matching."/>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <ruau:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <ruau:handler name="mouseover" action="{!c.handleMouseover}"/>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <ruau:handler name="mouseout" action="{!c.handleMouseout}"/>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:    <li role="presentation" class="{!v.class + ' ' + v.theme + (v.visible == false ? ' invisible' : '') + (v.highlighted == false ? '' : ' highlighted')}">
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:        <a id="{!globalId}" class="{!v.class}" ruau:id="option" href="javascript:void(0);" role="option">
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:            <ruau:renderIf isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:                {!v.displayText}
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:                <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:                </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:            </ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOption.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:    handleMouseover: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        _helper.handleMouseover(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:    handleMouseout: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionController.js:        _helper.handleMouseout(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        helper.addOptionDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        var ret = this.superAfterRender();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        _helper.displayText(component);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        helper.addOptionDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/autocompleteOption/autocompleteOptionRenderer.js:        _helper.displayText(component);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Note: currently dateTimePicker, requires the user to manually put the time they are looking for. The
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * following tests are just a stub for future functionality.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testInitialValue:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        attributes : {value: '2012-09-10T14:00:00.000Z', format: 'MM/dd/yyyy HH:mm:ss', timezone: 'Europe/Berlin'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        	ruau.test.addWaitFor(false,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        				return $A.util.isUndefinedOrNull(cmp.find("inputText").getElement().value);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        				ruau.test.addWaitFor(true,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        						function(){return cmp.find("inputText").getElement().value.length > 0;},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        							var inputDateStr = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        							ruau.test.assertEquals("09/10/2012 16:00:00", inputDateStr, "Incorrect initial date/time display.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'Value' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testEmptyStringValue: {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        attributes: {value: ''},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    		ruau.test.assertEquals('', inputDateStr, "Expected an empty inputText.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'Value' attribute is assigned a Garbage value.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testInvalidValue: {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        attributes: {value: 'cornholio'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:				var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals('cornholio', inputDateStr, "Value must be an ISO8601-formatted string or a number of milliseconds from Epoch.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'timezone' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    _testInvalidTimeZone:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {displayDatePicker:'true', timezone: 'dummy', format:'MMM dd, yyyy h:mm:ss a'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        cmp.find("datePicker").get('c.selectToday').runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = $A.localizationService.formatDateTime(new Date(), 'MMM DD, YYYY') + " 12:00:00 AM";
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Should have used default timezone.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'timezone' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testInvalidTimeZoneUsingValue:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', timezone: 'dummy'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var timezone = $A.get("$Locale.timezone");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    			ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", inputDateStr, "Should have used default timezone.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	else if(timezone  == "America/Los_Angeles"){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    			ruau.test.assertEquals("Sep 23, 2004 9:30:00 AM", inputDateStr, "Should have used default timezone.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	else{// For any other time zone we just make sure it has some value
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        		ruau.test.assertTrue(inputDateStr.length > 0, "Should have used default timezone.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'timezone' is assigned a empty string.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {displayDatePicker:'true', timezone: '', format:'MMM dd, yyyy h:mm:ss a'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        cmp.find("datePicker").get('c.selectToday').runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var dt            = $A.localizationService.formatDateTime(new Date(), 'MMM DD, YYYY') + " 12:00:00 AM";
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Should have used default timezone.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'langLocale' is not provided.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testDefaultLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", inputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'langLocale' is assigned a empty string.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testEmptyStringLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', langLocale: '', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", inputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'langLocale' is assigned garbage.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testInvalidLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js: 	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', langLocale: 'xx', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", inputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'format' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testEmptyFormat:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: '', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        		var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        		ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", inputDateStr, "Incorrect date/time format.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify behavior when 'format' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testInvalidFormat: {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: 'cornoio'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        		var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:        		ruau.test.assertEquals("cornoio", inputDateStr, "Invalid pattern character is output as it is.");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify Today in default time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    _testTodayInGMT:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {displayDatePicker:'true', timezone: 'GMT', format:'MMM dd, yyyy h:mm:ss a'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        cmp.find("datePicker").get('c.selectToday').runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        var dt            = $A.localizationService.formatDateTime(new Date(), 'MMM DD, YYYY') + " 12:00:00 AM";
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify Today in LA time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    _testTodayInLosAngeles:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {displayDatePicker:'true', format:'MMM dd, yyyy h:mm:ss a'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        cmp.find("datePicker").get('c.selectToday').runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var dt            = $A.localizationService.formatDateTime(new Date(), 'MMM DD, YYYY') + " 12:00:00 AM";
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify Today in NY time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    _testTodayInNewYork:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {displayDatePicker:'true', timezone: 'America/New_York', format:'MMM dd, yyyy h:mm:ss a'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        cmp.find("datePicker").get('c.selectToday').runDeprecated();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var dt            = $A.localizationService.formatDateTime(new Date(), 'MMM DD, YYYY') + " 12:00:00 AM";
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify a value in default time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', format: 'M/dd/yy h:mm A', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:				var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = '9/23/04 4:30 PM';
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify a value in LA time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', format: 'M/dd/yy h:mm A', timezone: 'America/Los_Angeles'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = '9/23/04 9:30 AM';
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify a value in NY time zone.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', format: 'M/dd/yy h:mm A', timezone: 'America/New_York'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = '9/23/04 12:30 PM';
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify a value in other language.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	testLanguage:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', timezone: 'GMT', langLocale: 'fr'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = 'sept. 23, 2004 4:30:00 PM';
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:     * Verify a value when 'format' has milliseconds.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:    testMillisecondInFormat:{
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', displayDatePicker:'true', format:'MM-dd-yyyy HH:mm:ss.SSS', timezone: 'GMT', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:			ruau.test.addWaitFor(true, function(){return cmp.find("inputText").getElement().value.length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	        	var inputDateStr  = cmp.find("inputText").getElement().value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:		        var dt            = '09-23-2004 16:30:00.000';
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeTest.js:	    		ruau.test.assertEquals(dt, inputDateStr, "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:			A <code>ui:inputDateTime</code> component represents a date and time input field, which is rendered as an HTML <code>input</code> tag of type <code>text</code>.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:			The value is displayed in the default format specified language locale of the browser. 
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:		<p>This is a basic set up of a date and time field with a date picker, which displays the current date and time in the format <code>7/29/2014 1:11 PM</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:		<pre>&lt;!-- Component markup -->
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;ruau:attribute name="today" type="DateTime" />
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;ui:inputDateTime ruau:id="expdate" label="Expense Date" class="form-control"
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:   value="{!v.today}" displayDatePicker="true" /&gt;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc: var today = new Date(); 
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:component.set("v.today", today);</pre>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:		<p>This example results in the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:		<pre>&lt;div class="uiInput uiInputDateTime">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;label class="uiLabel-left uiLabel">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    &lt;span>Expense Date&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;/label>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;input class="form-control uiInput uiInputDateTime" aria-describedby="" placeholder="M/d/yyyy h:mm a" type="text">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;a class="datePicker-openIcon" aria-haspopup="true">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    &lt;span class="assistiveText">Date Picker&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;/a>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;a class="clearIcon" href="javascript:void(0);">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    &lt;span class="assistiveText">Clear Button&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;/a>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:&lt;div class="uiDatePicker">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    &lt;!-- Date picker set to visible when icon is clicked -->
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:	</ruau:description>		
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:	<ruau:example name="inputExample" ref="uiExamples:inputExample" label="Using ui:inputDate">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    		This example shows how you can use <code>ui:inputDate</code> to get user input.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:    </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var ret = this.superAfterRender();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        _helper.formatDateTime(component);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        _helper.toggleClearButton(component);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var datePicker = concreteCmp.find("datePicker");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        if (!$A.util.isUndefinedOrNull(datePicker)) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:            datePicker.set("v.referenceElement", concreteCmp.getElement());
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var ret = this.superRerender();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        _helper.formatDateTime(component);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeRenderer.js:        _helper.toggleClearButton(component);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    displayDatePicker: function(component) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var datePicker = component.find("datePicker");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (!datePicker || datePicker.get("v.visible") === true) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var now = new Date(); // local date
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        // Later on, we will use getUTC... methods to get year/month/date
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var currentDate = new Date(Date.UTC(now.getFullYear(),
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                                            now.getDate(),
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var outputCmp = component.find("inputText");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var value = elem ? elem.value : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (!format) { // use default format
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            format = $A.get("$Locale.datetimeFormat");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var langLocale = component.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (!langLocale) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            langLocale = $A.get("$Locale.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var d = $A.localizationService.parseDateTimeUTC(value, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                currentDate = d;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        this.popUpDatePicker(component, currentDate);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:     * This can be overridden by extended component.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    displayDateTime: function(component, displayValue) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var outputCmp = component.find("inputText");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            elem.value = $A.localizationService.translateToLocalizedDigits(displayValue);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    doUpdate : function(component, value) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var v = $A.localizationService.translateFromLocalizedDigits(value);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var ret = v;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            if (!format) { // use default format
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                format = $A.get("$Locale.datetimeFormat");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var langLocale = component.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            if (!langLocale) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                langLocale = $A.get("$Locale.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var d = $A.localizationService.parseDateTimeUTC(v, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                var timezone = component.get("v.timezone");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                $A.localizationService.WallTimeToUTC(d, timezone, function(utcDate) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    utcDate = $A.localizationService.translateFromOtherCalendar(utcDate);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    component.set("v.value", $A.localizationService.toISOString(utcDate));
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                component.set("v.value", ret);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    formatDateTime: function(component) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var value = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (!value) { // Setting an empty value probably means clear out existing value
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            _helper.displayDateTime(component, "");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var d = $A.localizationService.parseDateTimeISO8601(value);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var langLocale = component.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var timezone = component.get("v.timezone");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            $A.localizationService.UTCToWallTime(d, timezone, function(walltime) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    walltime = $A.localizationService.translateToOtherCalendar(walltime);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    var displayValue = $A.localizationService.formatDateTimeUTC(walltime, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    _helper.displayDateTime(concreteCmp, displayValue);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                } catch (e) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    _helper.displayDateTime(concreteCmp, e.message);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            _helper.displayDateTime(component, value);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    getDateString: function(date) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    getUTCDateString: function(date) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        return date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    is24HourFormat: function(component) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (!format) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            format = $A.get("$Locale.datetimeFormat");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        return !($A.localizationService.isPeriodTimeView(format));
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    popUpDatePicker: function(component, date) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        var datePicker = component.find("datePicker");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (datePicker) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            datePicker.set("v.value", this.getUTCDateString(date));
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            datePicker.set("v.hours", date.getUTCHours());
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            datePicker.set("v.minutes", date.getUTCMinutes());
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            datePicker.set("v.is24HourFormat", this.is24HourFormat(component));
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            datePicker.set("v.visible", true);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:    toggleClearButton: function(component) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        if (($A.get("$Browser.isPhone") === true) || ($A.get("$Browser.isTablet") === true)) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var inputCmp = component.find("inputText");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var inputElem = inputCmp ? inputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var clearCmp = component.find("clear");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            var clearElem = clearCmp ? clearCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:            if (inputElem && clearElem) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                var openIconCmp = component.find("datePickerOpener");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                var openIconElem = openIconCmp ? openIconCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        	    var currentValue = inputElem.value;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:        	    if ($A.util.isUndefinedOrNull(currentValue) || $A.util.isEmpty(currentValue)) { // remove clear icon
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    $A.util.swapClass(clearElem, "display", "hide");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    	$A.util.swapClass(openIconElem, "hide", "display");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                    $A.util.swapClass(clearElem, "hide", "display");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeHelper.js:                        $A.util.swapClass(openIconElem, "display", "hide");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:/* The adjacent sibling selector is used for cases when no "label" attribute is passed, which changes the layout
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS + .datePicker-openIcon,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS .datePicker-openIcon {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    position: relative;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    background: url('/ruauFW/resources/ruau/images/icon_openCalendar.png') no-repeat 0 0;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS + .datePicker-openIcon + .clearIcon,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS .clearIcon {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    position: relative;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    background: url('/ruauFW/resources/ruau/images/clear.png') no-repeat 0 0;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS + .display,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:.THIS .display {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.css:    display: none;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:	clearValue: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:		component.set("v.value", "");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        helper.displayDatePicker(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        // Set placeholder
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        if (!format) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            format = $A.get("$Locale.datetimeFormat");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        component.set("v.placeholder", format);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:    openDatePicker: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        helper.displayDatePicker(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:    setValue: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var outputCmp = component.find("inputText");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var value = elem ? elem.value : null;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        if (!format) { // use default format
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            format = $A.get("$Locale.datetimeFormat");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var langLocale = component.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var secs = 0;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var ms = 0;
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            var currDate = $A.localizationService.parseDateTimeUTC(value, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            secs = currDate.getUTCSeconds();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            ms = currDate.getUTCMilliseconds();
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var dateValue = event.getParam("value");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var selectedHours = event.getParam("hours");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var selectedMinutes = event.getParam("minutes");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var newDate = $A.localizationService.parseDateTimeUTC(dateValue, "YYYY-MM-DD", langLocale);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var targetTime = Date.UTC(newDate.getUTCFullYear(),
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:                                  newDate.getUTCMonth(),
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:                                  newDate.getUTCDate(),
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var d = new Date(targetTime);
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        var timezone = component.get("v.timezone");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:        $A.localizationService.WallTimeToUTC(d, timezone, function(utcDate) {
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTimeController.js:            component.set("v.value", $A.localizationService.toISOString(utcDate));
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:input" implements="ui:inputDateComponent" extensible="true"
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    controller="java://org.ruauframework.impl.controller.TimeZoneInfoController"
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    description="An input field for entering a date and time.">    
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:attribute name="value" type="String" access="GLOBAL" description="The input value of the date/time."/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:attribute name="placeholder" type="String" description="The text that is displayed by default. Set during init based on the 'format' value."/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:attribute name="timezone" type="String" description="The timezone ID, for example, America/Los_Angeles."/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:registerEvent name="openPicker" type="ui:openPicker"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:handler name="openPicker" action="{!c.openDatePicker}"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:if isTrue="{!$Browser.isPhone || $Browser.isTablet}">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        <input ruau:id="inputText" id="{!v.domId}" class="{!v.class}" type="text" placeholder="{!v.placeholder}" readonly="true" onclick="{!c.click}" aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:            <input ruau:id="inputText" id="{!v.domId}" class="{!v.class}" type="text" placeholder="{!v.placeholder}" aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ruau:if isTrue="{!v.displayDatePicker}">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        <a ruau:id="datePickerOpener" class="datePicker-openIcon display" aria-haspopup="true" onclick="{!c.openDatePicker}">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:            <span class="assistiveText">Date Picker</span>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <a ruau:id="clear" class="clearIcon hide" onclick="{!c.clearValue}">
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:        <span class="assistiveText">Clear Button</span>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    </a>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:    <ui:datePicker ruau:id="datePicker" selectDate="{!c.setValue}" hasTime="true"/>
ruau/ruau-components/src/nAmE/components/ui/inputDateTime/inputDateTime.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.css:.uiPagerJumpToPage .pageInput {
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:    changePage:function(component,domEvent,helper){
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:        var pageInput = component.find("pager:pageInput").getElement();
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:        var targetPage = parseInt(pageInput.value, 10);
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:        if (isNaN(targetPage) || targetPage<1 || targetPage > component.get("v.pageCount")) {
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:            // Reset currentPage visualization
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:            pageInput.value=component.get("v.currentPage");
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPageController.js:        helper.changePage(component,targetPage,domEvent);
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:<ruau:component extends="ui:pager" extensible="true" support="GA" description="A pager implementation that allows the user to navigate to any page between 1 and pageCount.">
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    <ruau:attribute name="Labels_Page" type="String" default="Page " description="The text to display in the label before the page input."/>
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    <ruau:attribute name="Labels_Of" type="String" default=" of "    description="The text to display in the label between the page input and pageCount."/>
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:    <div class="{!v.class+' pagerContainer pagerJumpToPage'+(v.totalItems==0?' empty':'')}">
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:        <label>{!v.Labels_Page}
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:        <input ruau:id="pager:pageInput" class="pageInput" type="text" value="{!v.currentPage}" onchange="{!c.changePage}"/>
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:        {!v.Labels_Of}<span ruau:id="pager:pageCount">{!v.pageCount}</span></label>
ruau/ruau-components/src/nAmE/components/ui/pagerJumpToPage/pagerJumpToPage.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:<ruau:event type="APPLICATION" description="Event fired to open a dialog window. Handled by ui:dialogManager.">
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    <ruau:attribute name="dialog" type="Ruue.Component" description="The dialog that should be opened."/>
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:    <ruau:attribute name="triggerEvent" type="Object" description="The Ruue event or DOM event that triggered this application-level event. If the trigger to open a dialog is ultimately an onclick event (e.g., from an HTML button or an Ruue &lt;ui:button&gt; component) ALWAYS pass it in here. Optional otherwise."/>
ruau/ruau-components/src/nAmE/components/ui/openDialog/openDialog.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:<ruau:event type="COMPONENT" description="The event fired when the user selects a date.">
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    <ruau:attribute name="value" type="Date" description="Date value (yyyy-MM-dd) of a timestamp."/>
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    <ruau:attribute name="hours" type="Integer" description="Hour value (0 - 23) of a timestamp."/>
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:    <ruau:attribute name="minutes" type="Integer" description="minute value (0 - 59) of a timestamp."/>
ruau/ruau-components/src/nAmE/components/ui/selectDate/selectDate.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:interactive" implements="ui:inputBaseOption" extensible="true"
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    description="An HTML option element that is nested in a &lt;ui:inputSelect&gt; element. Denotes the available options in the list.">
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:    <option ruau:id="inputSelectOption" selected="{!v.value}" class="{!v.class}" value="{!v.text}" disabled="{!v.disabled}">
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:	    <ruau:renderIf isTrue="{!v.label == '' || v.label == null || v.label == undefined}">
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:	    	<ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:	    	{!v.label}
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:	    	</ruau:set>
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:		</ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/inputSelectOption/inputSelectOption.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:<ruau:event type="COMPONENT" extends="ui:command" description="Command event to instruct a component to open itself.">
ruau/ruau-components/src/nAmE/components/ui/open/open.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the menu expands.">
ruau/ruau-components/src/nAmE/components/ui/menuExpand/menuExpand.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:<ruau:component extensible="true" abstract="true" implements="ui:visible" description="An abstract component which capsulates common events." support="GA">
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:attribute name="disabled" type="Boolean" access="GLOBAL" default="false" description="Specifies whether the component should be displayed in a disabled state. Default value is &quot;false&quot;."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:	<ruau:attribute name="disableDoubleClicks" type="Boolean" default="false" description="Disables double clicking the component within 350ms"/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="blur" type="ui:blur" access="GLOBAL" description="The event fired when the user moves off from the component."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="focus" type="ui:focus" access="GLOBAL" description="The event fired when the user focuses on the component."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="keydown" type="ui:keydown" access="GLOBAL" description="The event fired when the user presses a keyboard key on the component."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="keypress" type="ui:keypress" access="GLOBAL" description="The event fired when the user presses or holds down a keyboard key on the component."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="keyup" type="ui:keyup" access="GLOBAL" description="The event fired when the user releases a keyboard key on the component."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:    <ruau:registerEvent name="select" type="ui:select" access="GLOBAL" description="The event fired when the user selects some text."/>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactive.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js:        helper.addDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveRenderer.js:        helper.addDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Adds an event handler for every DOM event for which this input has a Ruue-equivalent handler
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    addDomEvents : function(component) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var events = this.getHandledDOMEvents(component);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        //work around for bug W-1744442
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var helper = component.getConcreteComponent().getDef().getHelper() || this;
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        for (var event in events) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:            helper.addDomHandler(component, event);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Adds an event handler for the given DOM event
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    addDomHandler : function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var el = component.getElement();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        $A.util.on(el, event, this.domEventHandler);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Handles a DOM-level event and throws the Ruue-level equivalent.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * This same function is used for all DOM->Ruue event wireup on components, which has multiple benefits:
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * - decreased memory footprint
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * - no need to protect against a handler being added more than once
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * - no need to track event->handler function mappings for later removal
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    domEventHandler : function (event) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var element = event.target;
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var htmlCmp = $A.componentService.getRenderingComponentForElement(element);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var component = htmlCmp.getComponentValueProvider().getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var helper = component.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        // extended components can do some event processing before the Ruue event gets fired
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        // fire the equivalent Ruue event
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        if (event.type == "click" && component.get("v.disableDoubleClicks")) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        	window.setTimeout(function() { component._recentlyClicked = false; }, 350);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Fire the equivalent Ruue event for DOM one.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * This can be overridden by extended component
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * @param event must be a DOM event
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var e = component.getEvent(event.type);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        helper.setEventParams(e, event);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Returns the list of valid DOM events this component may handle
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * NOTE: this currently assumes that interactive.cmp only handles events that are valid DOM events.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * We may wish to change this to an explicit list at some point.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Returns an object whose keys are the lower-case names of DOM-equivalent Ruue events for which this component currently has handlers
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    getHandledDOMEvents : function(component){
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var ret = {};
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var handledEvents = component.getHandledEvents();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var domEvents = this.getDomEvents(component);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:            for(var i=0,len=domEvents.length; i<len; i++){
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                var eventName = domEvents[i].toLowerCase();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                if (handledEvents[eventName]) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                    ret[eventName] = true;
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * This method is intended to be overridden by extended components to do event related stuff before the event gets fired.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * For example, input component uses this method to update its value if the event is the "updateOn" event.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * @param event must be a DOM event
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Set event's parameters with the value from DOM event.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * The event's parameter name should be the same as the property name in DOM event.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    setEventParams : function(e, DOMEvent) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        // set parameters if there is any
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var attributeDefs = e.getDef().getAttributeDefs();
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        var params = {};
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        for (var key in attributeDefs) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                params[key] = DOMEvent;
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:            } else if (key === "keyCode") { // we need to re-visit this keyCode madness soon
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                params[key] = DOMEvent.which || DOMEvent.keyCode;
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                params[key] = DOMEvent[key];
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        e.setParams(params);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * Toggle a component's disabled state and an optional CSS class.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * @param {Component} component The component being toggled.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * @param {Boolean} disabled True to set disabled; false for enabled.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:     * @param {String} disabledCss Optional css class to apply when disabled, and remove when enabled.
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:    setDisabled: function(component, disabled, disabledCss) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        component.set('v.disabled', disabled);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:        if (disabledCss) {
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:            if(disabled){
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                $A.util.addClass(component.getElement(),disabledCss);
ruau/ruau-components/src/nAmE/components/ui/interactive/interactiveHelper.js:                $A.util.removeClass(component.getElement(), disabledCss);
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:<ruau:event type="COMPONENT" support="BETA">
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:    <ruau:attribute name="domEvent" type="Object" description="The associated DOM event."/>
ruau/ruau-components/src/nAmE/components/ui/baseDOMEvent/baseDOMEvent.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:    updateHref: function(cmp){
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:    	var value = cmp.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:            var link = cmp.find("link");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:                var element = link.getElement();
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:                if (value.search("#") != -1 || value.search("\\*") != -1) {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:                    var tel = this.removeSpaces(value);
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:     ** Remove spaces (if there is any) in value and return the no-space result.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:    removeSpaces: function(value) {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneHelper.js:        return (value || "").replace(/\s/g, "");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:			A <code>ui:outputPhone</code> component represents a phone number output that is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:			This component can be used with <code>ui:inputPhone</code>, which takes in a phone number input. The following example is
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:			a simple set up of a <code>ui:outputPhone</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:		<pre>&lt;ui:outputPhone value="415-123-4567" label="outputPhone"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:		<pre>&lt;a href="tel:415-123-4567" class="uiOutputPhone">415-123-4567&lt;/a></pre>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js:        var ret = this.superRender();
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js:        helper.updateHref(cmp);
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneRenderer.js:        helper.updateHref(cmp);
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" access="GLOBAL" description="Displays the phone number in a URL link format.">
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    <ruau:attribute name="value" type="String" required="true" access="GLOBAL" description="The phone number displayed when this component is rendered."/>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    <ruau:renderIf isTrue="{!and(v.value != null, v.value != '')}">
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:        <a ruau:id='link' class="{!v.class}" href="{!'tel:' + v.value}">{!v.value}</a>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:    </ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhone.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone blank value attribute results in nothing displayed.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testEmptyValue:{
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value: ''},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        ruau.test.assertTrue($A.util.isUndefinedOrNull(component.find('link').getElement()), "When value is initialized to an empty string, componenet should not have DOM elements.");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone displays basic phone number as link.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValue: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '+1 (415) 867-5309'},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('+1 (415) 867-5309', $A.test.getText(component.find('link').getElement()), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertTrue(ruau.test.contains(unescape(component.find('link').getElement().href),'tel:+1(415)867-5309'), "Link not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone with asterisk in value is not displayed as a link (or at least the portion following the asterisk) .
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    // https://gus.soma.salesforce.com/a07B0000000FDmFIAW
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValueContainsAsterisk: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '867-5309*222'},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('867-5309*222', $A.test.getText(component.find('link').getElement()), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('', component.find('link').getElement().href, "Number should not be linked");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone with value beginning with asterisk is not displayed as a link.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    // https://gus.soma.salesforce.com/a07B0000000FDmFIAW
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValueStartsWithAsterisk: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '*69'},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('*69', $A.test.getText(component.find('link').getElement()), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('', component.find('link').getElement().href, "Number should not be linked");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone with pound sign in value is not displayed as a link (or at least the portion following the pound sign).
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    // https://gus.soma.salesforce.com/a07B0000000FDmFIAW
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValueContainsPound: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '867-5309 # 2222'},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('867-5309 # 2222', $A.test.getText(component.find('link').getElement()), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('', component.find('link').getElement().href, "Number should not be linked");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone with value beginning with pound sign is not displayed as a link.
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    // https://gus.soma.salesforce.com/a07B0000000FDmFIAW
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValueStartsWithPound: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '#2222'},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('#2222', $A.test.getText(component.find('link').getElement()), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('', component.find('link').getElement().href, "Number should not be linked");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:     * outputPhone with leading and trailing whitespaces
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:    testValueWithWhitespaces: {
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:        attributes : {value : '   555-1234   '},
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            var link = component.find('link').getElement();
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertTrue(ruau.test.contains($A.test.getText(link), '555-1234'), "Visible phone number not correct");
ruau/ruau-components/src/nAmE/components/ui/outputPhone/outputPhoneTest.js:            ruau.test.assertEquals('tel:555-1234', link.href, "Link not correct");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.css:.uiOutputDateTime{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:			A <code>ui:outputDateTime</code> component represents a date and time output that is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:			This component can be used with <code>ui:inputDateTime</code>, which takes in a date input. <code>ui:outputDateTime</code> retrieves the browser's locale information and displays 
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:			the date accordingly.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:			To display a date and time, you can use an attribute value and bind it to the <code>ui:outputDateTime</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:		<pre>&lt;ruau:attribute name="myDateTime" type="Date" default="2014-09-29T00:17:08z"/>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:&lt;ui:outputDateTime value="{!v.myDateTime}" label="outputDateTime"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:		<pre>&lt;span class="uiOutputDateTime">Sep 29, 2014 12:17:08 AM&lt;/span></pre>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:	<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var ret = this.superAfterRender();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        _helper.formatDateTime(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var ret = this.superRerender();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeRenderer.js:        _helper.formatDateTime(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:<ruau:component extends="ui:output" implements="ui:outputDateComponent" extensible="true" support="GA"
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    access="GLOBAL" description="Displays a date, time in a specified or default format based on the user's locale.">
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    <ruau:attribute name="timezone" type="String" default="{!$Locale.timezone}" access="GLOBAL" description="The timezone ID, for example, America/Los_Angeles."/>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    <ruau:attribute name="value" type="String" required="true" access="GLOBAL" 
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:                    description="An ISO8601-formatted string representing a date time."/>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:    <span ruau:id="span" class="{!v.class}"></span>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTime.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'Value' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testEmptyStringValue: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value: ''},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "Expected an empty span.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'Value' attribute is assigned a Garbage value.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testInvalidValue: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value: 'cornholio'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:            ruau.test.assertEquals("Invalid date time value", $A.test.getText(component.find('span').getElement()), "Value must be an ISO8601-formatted string or a number of milliseconds from Epoch.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'format' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testEmptyFormat:{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: '', langLocale: 'en', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("Sep 23, 2004 4:30:00 PM", $A.test.getText(component.find('span').getElement()), "Incorrect date/time format.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'format' is given a valid time format.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: 'Z ss:mm:HH MM dd yyyy', langLocale: 'en', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("+00:00 00:30:16 09 23 2004", $A.test.getText(component.find('span').getElement()), "Incorrect date/time format in display.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'format' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testInvalidFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: 'cornoio', langLocale: 'en', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("cornoio", $A.test.getText(component.find('span').getElement()), "Invalid pattern character is output as it is.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify AM/PM in a non-English language.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testLanguage: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: 'M/dd/yy h:mm A', langLocale: 'zh_CN', timezone: 'Asia/Shanghai'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:                ruau.test.assertEquals("9/24/04 12:30 上午", $A.test.getText(component.find('span').getElement()), "Incorrect formatted datetime string.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'langLocale' attribute is changed and component is rerendered.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testChangeLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    	attributes: {value : '2004-09-23T16:30:00.000Z', format: 'M/dd/yy h:mm A', langLocale: 'zh_CN', timezone: 'Asia/Shanghai'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:                ruau.test.assertEquals("9/24/04 12:30 上午", $A.test.getText(component.find('span').getElement()), "Incorrect formatted datetime string.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:                component.set("v.langLocale", "en");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:                ruau.test.assertEquals("9/24/04 12:30 AM", $A.test.getText(component.find('span').getElement()), "Incorrect formatted datetime string.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'langLocale' is not provided.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testDefaultLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	var outputDateStr  = $A.test.getText(component.find('span').getElement());
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:		        var dt            = 'Sep 23, 2004 4:30:00 PM';
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	    		ruau.test.assertEquals(dt, outputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'langLocale' is assigned a empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testEmptyStringLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	attributes : {value:'2004-09-23T16:30:00.000Z', timezone: 'GMT', langLocale: ''},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	var outputDateStr  = $A.test.getText(component.find('span').getElement());
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:		        var dt            = 'Sep 23, 2004 4:30:00 PM';
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	    		ruau.test.assertEquals(dt, outputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'langLocale' is assigned garbage.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testInvalidLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js: 	attributes : {value:'2004-09-23T16:30:00.000Z', timezone: 'GMT', langLocale: 'kk'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	var outputDateStr  = $A.test.getText(component.find('span').getElement());
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:		        var dt            = 'Sep 23, 2004 4:30:00 PM';
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	    		ruau.test.assertEquals(dt, outputDateStr, "Should have used Default langLocale.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'timezone' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value: '2004-09-23T16:30:00.000Z', timezone: '', format: 'M/dd/yy h:mm A', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		var timezone = $A.get("$Locale.timezone");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertEquals("9/23/04 4:30 PM", $A.test.getText(component.find('span').getElement()), "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	else if(timezone  == "America/Los_Angeles"){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertEquals("9/23/04 9:30 AM", $A.test.getText(component.find('span').getElement()), "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	else{// For any other time zone we just make sure it has some value
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertTrue($A.test.getText(component.find('span').getElement()).length > 0, "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'timezone' is assigned a valid time zone.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', timezone: 'America/New_York', format: 'M/dd/yy h:mm A', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("9/23/04 12:30 PM", $A.test.getText(component.find('span').getElement()), "Incorrect date/time, failed to use specified timezone");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testTimezoneObeysDayLightSaving: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', timezone: 'America/Los_Angeles', format: 'M/dd/yy h:mm A', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("9/23/04 9:30 AM", $A.test.getText(component.find('span').getElement()), "Incorrect date/time, failed to recognize that timezone has Daylight saving in effect.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'timezone' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testInvalidTimezone: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', timezone: 'sasquatch', format: 'M/dd/yy h:mm A', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		var timezone = $A.get("$Locale.timezone");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertEquals("9/23/04 4:30 PM", $A.test.getText(component.find('span').getElement()), "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	else if(timezone  == "America/Los_Angeles"){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertEquals("9/23/04 9:30 AM", $A.test.getText(component.find('span').getElement()), "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        	else{// For any other time zone we just make sure it has some value
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:	        		ruau.test.assertTrue($A.test.getText(component.find('span').getElement()).length > 0, "Should have used default as default timezone.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:     * Verify behavior when 'format' has milliseconds..
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:    testMillisecondInFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        attributes: {value : '2004-09-23T16:30:00.000Z', format: 'MM-dd-yyyy HH:mm:ss.SSS', langLocale: 'en', timezone: 'GMT'},
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        	ruau.test.addWaitFor(true, function(){return $A.test.getText(component.find('span').getElement()).length > 0;},function(){
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeTest.js:        		ruau.test.assertEquals("09-23-2004 16:30:00.000", $A.test.getText(component.find('span').getElement()), "Incorrect date/time format in display.");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:     * This can be overridden by extended component.
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:    displayDateTime: function(component, displayValue) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var outputCmp = component.find("span");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:            elem.textContent = elem.innerText = $A.localizationService.translateToLocalizedDigits(displayValue);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:    getFormat: function(component) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        return component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:    formatDateTime: function(component) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var value = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        if (!value) { // Setting an empty value probably means clear out existing value
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:            _helper.displayDateTime(concreteCmp, "");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var format = _helper.getFormat(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var langLocale = concreteCmp.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var d = $A.localizationService.parseDateTimeISO8601(value);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        var timezone = _helper.getTimeZone(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:        $A.localizationService.UTCToWallTime(d, timezone, function(walltime) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:                walltime = $A.localizationService.translateToOtherCalendar(walltime);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:                var displayValue = $A.localizationService.formatDateTimeUTC(walltime, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:                _helper.displayDateTime(concreteCmp, displayValue);
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:            } catch (e) {
ruau/ruau-components/src/nAmE/components/ui/outputDateTime/outputDateTimeHelper.js:                _helper.displayDateTime(concreteCmp, e.message);
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:<ruau:component extensible="true" support="PROTO" description="A column in a table. A &lt;ui:dataTableColumn&gt; component must be a child of a &lt;ui:dataTableRow&gt; component.">
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    <ruau:attribute name="class" type="String" default="" description="The CSS style used to display the column in the table."/>
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    <ruau:attribute name="scope" type="String" description="Identifies whether a cell is a header for a column, row, or group of columns or rows. Valid options: col, row, colgroup, rowgroup"/>
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    <ruau:attribute name="headerValue" type="String" description="The text that appears in the column header."/>
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:    <td scope="{!v.scope}" class="{!v.class}">{!v.body}</td>
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataTableColumn/dataTableColumn.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.css:.uiOutputDate{
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        _helper.formatDate(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        var _helper = concreteCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateRenderer.js:        _helper.formatDate(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify default format.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testDefaultFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("Sep 23, 2004", $A.test.getText(component.find('span').getElement()), "Incorrect date");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify default format with a date before 1970.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testDefaultFormatWithBefore1970: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '1935-04-10'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("Apr 10, 1935", $A.test.getText(component.find('span').getElement()), "Incorrect date");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'Value' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testEmptyStringValue: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : ''},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "Expected an empty span.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'Value' attribute is set to undefined.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testUndefinedValue: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        	component.set('v.value', undefined);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        	ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "Expected an empty span.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'Value' attribute is assigned a Garbage value.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testInvalidValue: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : 'cornholio'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("cornholio", $A.test.getText(component.find('span').getElement()), "Display the original value if it is not a valid date value.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'format' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testEmptyStringForFormat:{
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: ''},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("Sep 23, 2004", $A.test.getText(component.find('span').getElement()), "Incorrect date format, should use use Ruue default format.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'format' is given a valid date format.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MM dd yyyy'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("09 23 2004", $A.test.getText(component.find('span').getElement()), "Incorrect date format in display.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'format' is given a valid date format.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * ww-(week of year)
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * DDD-(day of year)
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * EEEE-(day in week)
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testAllPossibleFormats: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'yyyy MMMM EEEE DDD ww'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("2004 September Thursday 267 39", $A.test.getText(component.find('span').getElement()), "Incorrect date format in display.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'format' attribute is assigned a garbage value.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testInvalidFormat: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'bb'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("bb", $A.test.getText(component.find('span').getElement()), "Expected the garbage format value.");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'langLocale' attribute is assigned a value.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testDefaultLangLocale: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MMMM d, yyyy'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("September 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'langLocale' attribute is assigned a value.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testLangLocale: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MMM d, yyyy', langLocale: 'fr'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("sept. 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'langLocale' attribute is changed and component is rerendered.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testChangeLangLocale: {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MMM d, yyyy', langLocale: 'en'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("Sep 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            component.set("v.langLocale", "fr");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("sept. 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'langLocale' attribute is assigned an empty string.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testEmptyLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MMMM d, yyyy', langLocale: ''},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("September 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:     * Verify behavior when 'langLocale' attribute is assigned an invalid value.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:    testInvalidLangLocale:{
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:        attributes: {value : '2004-09-23', format: 'MMMM d, yyyy', langLocale: 'xx'},
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateTest.js:            ruau.test.assertEquals("September 23, 2004", $A.test.getText(component.find('span').getElement()), "Dates are not the same and they should be");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:    formatDate: function(component) {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var value = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var format = component.get("v.format");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var langLocale = component.get("v.langLocale");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var displayValue = value ? value : ""; 
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        if (value) {
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:            var d = $A.localizationService.parseDateTimeUTC(value, "YYYY-MM-DD", langLocale);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:                d = $A.localizationService.translateToOtherCalendar(d);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:                var v = $A.localizationService.formatDateUTC(d, format, langLocale);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:                displayValue = v ? v : displayValue;
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var outputCmp = component.find("span");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDateHelper.js:            elem.textContent = elem.innerText = $A.localizationService.translateToLocalizedDigits(displayValue);
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:<ruau:component extends="ui:output" implements="ui:outputDateComponent" extensible="true" support="GA" access="GLOBAL" description="Displays a date in the default or specified format based on the user's locale.">
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    <ruau:attribute name="value" type="String" required="true" access="GLOBAL" description="The output value of the date. It should be a date string in ISO-8601 format (YYYY-MM-DD)."/>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:    <span ruau:id="span" class="{!v.class}"></span>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:			A <code>ui:outputDate</code> component represents a date output in the YYYY-MM-DD format and is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:			This component can be used with <code>ui:inputDate</code>, which takes in a date input. <code>ui:outputDate</code> retrieves the browser's locale information and displays 
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:			the date accordingly. To display a date, you can use an attribute value and bind it to the <code>ui:outputDate</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:		<pre>&lt;ruau:attribute name="myDate" type="Date" default="2014-09-29"/>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:&lt;ui:outputDate value="{!v.myDate}" label="outputDate"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	<pre>&lt;span class="uiOutputDate">Sep 29, 2014&lt;/span></pre>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/outputDate/outputDate.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:<ruau:event support="BETA" type="COMPONENT" description="Change the visibility of a ui:spinner component.">
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:    <ruau:attribute name="isVisible" type="Boolean" required="true" description="Hide/show the spinner"/>
ruau/ruau-components/src/nAmE/components/ui/toggleLoadingIndicator/toggleLoadingIndicator.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:<ruau:event type="COMPONENT" extends="ui:command" description="Command event to instruct a component to close itself.">
ruau/ruau-components/src/nAmE/components/ui/close/close.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:.THIS a b {
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:    float: left;
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:    display: block;
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:    margin-right: 2px;
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:.THIS a.selected b {
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.css:    background: url('/ruauFW/resources/ruau/images/menuitem-check.png') no-repeat center center;
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:        var selected = concreteCmp.get("v.selected");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:        var linkCmp = concreteCmp.find("link");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:            var elem = linkCmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:                $A.util.addClass(elem, "selected");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:                elem.setAttribute("aria-checked", "true");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:                $A.util.removeClass(elem, "selected");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemHelper.js:                elem.setAttribute("aria-checked", "false");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:menuItem" extensible="true" description="​A menu item with a checkbox that supports multiple selection and can be used to invoke an action. This component is nested in a ui:menu component.">
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    <ruau:handler name="click" action="{!c.handleClick}"/>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:    <li ruau:id="listitem" class="{!v.class}" role="presentation">
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:        <a ruau:id="link" role="menuitemcheckbox">
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:            <ruau:renderIf isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:                <b></b>{!v.label}
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:                <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:                </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:            </ruau:renderIf>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:        </a>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItem.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js:    handleClick : function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js:        var concrete = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/checkboxMenuItem/checkboxMenuItemController.js:        var current = concrete.get("v.selected");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:.THIS.dialog-wrapper {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	/* Flex & box fallback */
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	display: -webkit-box;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	display: -moz-box;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	display: -ms-flexbox;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	display: -webkit-flex;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	display: flex;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-webkit-box-orient: horizontal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-webkit-box-pack: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-webkit-box-align: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-moz-box-orient: horizontal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-moz-box-pack: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-moz-box-align: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	-ms-flex-align: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	box-orient: horizontal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	box-pack: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	box-align: center;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	position: absolute;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:.THIS .uiButton.default .label {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	text-shadow: none;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:	font-weight: normal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css: * This prevents inactive panels from stretching the document height.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.css:.THIS .panel:not(:last-child):not(.active) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:<ruau:component extensible="true" description="A panel manager that instantiates and handles panels.">
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:attribute name="class" type="String" default="one" description="The class that's added to the div tag of the panel container."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:    <ruau:attribute name="cancelButtonLabel" type="String" default="Cancel" description="The label on the Cancel button on an overlay panel. The default label is Cancel." />
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:openPanel" action="{!c.openPanel}" description="The event fired when a panel is opened."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:closePanel" action="{!c.closePanel}" description="The event fired when a panel is closed."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:updatePanel" action="{!c.updatePanel}" description="The event fired when a panel is updated."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:panelTransitionBegin" action="{!c._onPanelTransitionBegin}" description="The event fired when a panel transition is started."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:panelTransitionEnd" action="{!c._onPanelTransitionEnd}" description="The event fired when a panel transition is ended."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:handler event="ui:panelDestroy" action="{!c.destroyAllPanels}" description="The event fired when all panels are destroyed from the DOM."/>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:dependency resource="markup://ui:panelDialog" />
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<ruau:dependency resource="markup://ui:hidePanel" type="EVENT" />
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:	<div ruau:id="container" class="{! 'dialog-wrapper ' + $Browser.formFactor}">
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	PANEL_TYPE : {DIALOG: "ui:panelDialog"},
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	initialize: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // store management state on the component
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._active = null; // current visible panel instance
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._stack = []; // stack of instantiated panels
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._actionQueue = []; // queue for storing open actions if a transition is already in progress
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._deleteQueue = []; // queue for storing remove actions if transition is already in progress
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._startStackLevel = 20; // z-index
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        cmp._panels = {};
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // helper; shallow copy
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var obj2 = {};
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        for (var p in obj1) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (obj1.hasOwnProperty(p)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    getManager: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	//use concrete component as manager to store all the states
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // for panelOverlay, create a 'Cancel' button to close the panel
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    createCancelButton: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var button = $A.newCmp({
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            componentDef: 'markup://ui:button',
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            attributes: {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                values: {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    label: cmp.get("v.cancelButtonLabel")
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        button.addHandler('press', cmp, 'c.closePanel');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // ui:updatePanel handler 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // updates the content of an existing panel
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    updatePanel: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = cmp.getConcreteComponent().getDef().getHelper(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            config = event.getParams() || {},
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel = config.instance,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            headerActions = config.headerActions,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            maxButtons = 2,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            headerButtons,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // is the panel still valid?
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!panel || !panel.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        el = panel.getElement();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // if the panel is transitioning, hold off on updating content
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // until the transition completes
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!panel.isRendered() || $A.util.hasClass(el, 'sliding')) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            		self.updatePanel(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!headerActions) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	headerActions = body && body.get('v.headerActions');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        headerButtons = self.getHeaderButtons(cmp, headerActions, maxButtons);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // do not force headerActions like we do in createPanelOverlay;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // if headerActions not provided, that is ok
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // let the panel do the actual updating so it can manage any extra
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // DOM-specific logic (such as fade-in)
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	panel.get('c.update').run({ body: body, headerButtons: headerButtons });
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var manager = this.getManager(cmp);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	// if this is the active panel then set focus to the first focusable element
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	if (panel == manager._active && panel.get('v.autoFocus') !== false) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	    			if (panel.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	    				focusables = self.getFocusables(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	    				focusables.first && focusables.first.focus();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // updatePanel event supports onCreate callback (passed through by showPanel in centerStage)
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (config.onCreate && $A.util.isFunction(config.onCreate)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// allow new content to be rendered by ruau before invoking callback
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        			config.onCreate(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    getHeaderButtons: function(cmp, headerActions, maxButtons) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var headerButtons = [];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	if ($A.util.isArray(headerActions)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// note: this is essentially the same logic as that found in centerStage._preparePanelHeader().
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// it ensures that at most two actions appear on the panel header and that the actions
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// are proper components
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	headerActions = headerActions.slice(0, maxButtons);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	for (var i=0, len = headerActions.length; i < len; i++) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        		button = headerActions[i];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        			headerButtons[i] = button;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	return headerButtons;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // ui:openPanel handler 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // creates panel if it does not already exist and then displays it
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    openPanel: function(cmp, config) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel = config.instance,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            transitioningType,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            transitioningIsModal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // This test is to guard against the user clicking fast on an element that triggers
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // a panel and causing two panels to be displayed.  However, we need allow legitimate cases of two panels being shown
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // at about the same time (the specific use case is when a force:showOfflineMessage
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // event is fired on the heels of a showPanel event, the offline modal must be displayed).
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // The check below is now looser to allow cases that we can be absolutely sure are not double-click
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // related, that of which the two panels are of different types.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._transitioning == 'open') {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	if (manager._transitioningInstance.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	        	transitioningType = manager._transitioningInstance.getDef().getDescriptor().getQualifiedName();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	        	transitioningIsModal = this.isModal(transitioningType); 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	        	if ((config.isModal && transitioningIsModal) || (!config.isModal && !transitioningIsModal)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        function callback(panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // give ruau a chance to inject the new component into the dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            		// if we're also showing the panel, start the openInstance bit before invoking onCreate callback
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            		// otherwise we get race conditions when onCreate callback code tries to hide the dialog
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            		// before it's started the show process.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                		self.openInstance(cmp, panel, config);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		            if (config.callbacks && $A.util.isFunction(config.callbacks.onCreate)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		                config.callbacks.onCreate(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // if it has already been created, display it
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            callback(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.createPanel(cmp, config, callback);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    createPanel: function(cmp, config, callback) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (config.isModal || config.isDialog) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.createPanelDialog(cmp, config, callback);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // ui:createModal handler; creates PanelDialog cmp and inserts into dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    createPanelDialog: function(cmp, config, callback) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var helper = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            actionList = config.body,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            action, actionButton, button,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // don't modify original config object; needed in testing code
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this.buildPanelDialogConfig(cmp, config);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        config.animation = config.animation || 'bottom';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        config.closeAction = this.getCloseActionForModal(cmp);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		 // delay setting panel content until panel has been inserted into the dom (bad things happen otherwise)
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		 this._createPanel(cmp, this.PANEL_TYPE.DIALOG, config, function(panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:			 panel.set('v.body', actionList);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		     panel._isModal = config.isModal;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		     callback && callback(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    isModal: function(panelType) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	return  panelType == 'markup://ui:panelDialog'
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    buildPanelDialogConfig: function(cmp, config) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var actionList = config.body;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	 // add 'closePanel' action to all buttons (so every action also closes the dialog)
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (actionList && actionList.length) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            for (action in actionList) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                actionButton = actionList[action];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                if ($A.util.isComponent(actionButton)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    button = actionButton.isInstanceOf('ui:actionButton') ? actionButton.find('button') : actionButton;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    button.addHandler('press', cmp, 'c.closePanel', true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    getCloseActionForModal: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:   		     // On close, fire event that can be handled by many observers.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:   			 $A.get('e.ui:closePanel').fire();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // generic create method for all panel types
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _createPanel: function(cmp, def, config, callback) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var self = this;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var referenceElement = config.referenceElement;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // if no class set explicitly on the panel, use the class set on the panelManager
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        config['class'] = config['class'] || cmp.get('v.class');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this._createComponent(def, config, function(panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // add handler to trap the render event in order to invoke onCreate callback
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel.addHandler('panelDoneRendering', cmp, 'c.onPanelLoaded');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // store panel metadata in _panels hash so we can access it in our event handlers
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            cmp._panels[panel.getGlobalId()] = {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                panel: panel,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                onCreate: config.onCreate || config.callback // @todo: add onCreate support to the events
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            self.attachPanelInstance(cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel.set("v.referenceElement", referenceElement);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            callback && callback(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // generic async method to create a component 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _createComponent: function(def, attr, callback) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        $A.newCmpAsync(null, callback, {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            attributes: {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                values: attr
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // insert a new panel into the dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    attachPanelInstance: function(cmp, panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var container = this._findContainer(cmp, 'container'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            body = container.get('v.body');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        body.push(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        container.set("v.body", body);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _findContainer: function(cmp, id) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var p = cmp;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var container = cmp.find(id);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	while (!container && p.isInstanceOf("ui:panelManager")) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    		container = p.find(id);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	return container;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // transition a panel into the visible state
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    openInstance: function(cmp, panel, config) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this, manager = this.getManager(cmp);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!manager._transitioning) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // avoid more actions at the same time
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel.get('c.show').run();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            var helper = cmp.getConcreteComponent().getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            helper.afterOpenInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // queue the action to execute it once the transition is done.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	manager._actionQueue.push(function() {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                self.openInstance.call(self, cmp, panel, config);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    afterOpenInstance: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	//template for subcomponents
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    isPanel: function(component) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var isPanel = component && 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    		/(ui\:panelOverlay|ui\:panelDialog)/.test(component.getDef().getDescriptor().getQualifiedName());
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	return isPanel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // transition a panel into the hidden state;  
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    closeInstance: function(cmp, panel, options) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stack = manager._stack;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            containerEl = manager.getElement();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (panel && !panel.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// we can get here when two components both fire hidePanel to dismiss the same panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// this happens in some cases, as with detail.cmp and detailPanel.cmp both 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// handing the force:cancelEdit event
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._transitioning) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// don't lose the closeInstance request, queue it
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	manager._actionQueue.push(function() {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                self.closeInstance.call(self, cmp, panel, options);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // guard against non-panels being set as instance param in hidePanel event
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!this.isPanel(panel)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	panel = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        panel = panel || manager._active;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // special bit to handle "visible but not active" panelSlider
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (stack && stack.length) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                slider = stack[stack.length-1];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            lazyDestroy: true
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        containerEl.style.overflow = 'hidden';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        panel.get('c.hide').run(options);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // remove any accumulated delete actions that are pending
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            toDelete = manager._deleteQueue;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        while ((iterator = toDelete.shift())) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            iterator();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * RemoveInstance conditions: If there is an action on the queue, we need to
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * wait to destroy the instance If there is any previous panel on the queue
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * to be removed we will remove it first and then we will place this one.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * The reason for getting always one in the queue is because may have
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * intrinsic dependencies between both panels Example: UIServices
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * Confirmation panel holds references to the first panel, so we cannot
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    removeInstance: function(cmp, panel, forceImmediateDestroy) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container = this._findContainer(cmp, 'container'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stackedItems = container.get('v.body').length;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // per Diego; keep one modal in the dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!panel._isModal || forceImmediateDestroy) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this._removePanel(cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // if there is something in the queue wait til next one closes
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._actionQueue.length || stackedItems === 0) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager._deleteQueue.push(function() {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                self._removePanel.call(self, cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager._deleteQueue.push(function() {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                self._removePanel.call(self, cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // remove a single panel from the dom and invoke its destroy method
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _removePanel: function(cmp, panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelId = panel.getGlobalId(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container = this._findContainer(cmp, 'container'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            ruauContainer = container.get('v.body'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stackedItems = ruauContainer.length;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        for (i = 0; i < stackedItems; i++) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (ruauContainer[i] === panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                break;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            ruauContainer.splice(pos, 1);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container.set("v.body", ruauContainer);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // ruau needs to run its life cycle before lets us touch anything else...
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            	panel.destroy(true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._panels[panelId] = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // one:destroySlidePanel handler (coming soon)
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    destroySlidePanelDEPRECATED: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this.destroyPanel(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // force:destroyPanel handler
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    destroyPanel: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var params = event.getParams() || {},
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelId, config, stack, panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // handling both new API and previous destroySliderPanel API for now
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (params.instance) {
