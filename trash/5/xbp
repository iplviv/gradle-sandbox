ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel = params.instance;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelId = panel.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        } else if (params.panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (typeof params.panel === 'string') {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                panelId = params.panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                panelId = params.panel.getGlobalId();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        config = manager._panels[panelId];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        stack = manager._stack;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        panel = panel || (config && config.panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // @todo: invalid state
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // @todo: revisit this sequence when destroy events are added
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this.closeInstance(cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this.unstackPanel(cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        panel && this.removeInstance(cmp, panel, true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (params.callback) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            params.callback.call(null, panelId);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (params.onDestroy) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            params.onDestroy.call(null, panelId);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // remove all panels from the dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    destroyAllPanels: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container = this._findContainer(cmp, 'container'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            body = container.get('v.body');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        for (var i = 0; i < body.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            self.closeInstance(cmp, body[i], {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                lazyDestroy: true,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        container.set("v.body", []);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // return the currently visible panel
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    getActiveInstance: function(manager) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        return manager._active;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // set the currently visible panel, update classes and aria-hidden attr on all panels 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    //TODO: Need to look at this again since this function call is in the animation path
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    setActiveInstance: function(cmp, panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelDom = panel && panel.getElement(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panels = document.querySelectorAll('.dialog-wrapper > *');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._active = panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // set all panels inactive
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        for (var i = 0; i < panels.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            $A.util.removeClass(panels[i], 'active');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panels[i].setAttribute('aria-hidden', 'true');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // set given panel active
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (panelDom) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            $A.util.addClass(panelDom, 'active');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelDom.setAttribute('aria-hidden', 'false');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// if we have previously stored the body scroll position for this panel, now is the time to reset it
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (panel._scrolled)  {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            	document.body.scrollTop = panel._scrolled;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (panel.get('v.autoFocus') !== false) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                // if panel is being reshown because a stacked panel was hidden, reset the previously
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                // focused element, otherwise set focus to the first focusable element
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                var last = panel.get('v.lastFocusedInput');
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                if (last && !last.disabled && self.isVisible(last)) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                	last.focus();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	                		var focusables;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		                    if (!panel.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		                    focusables = self.getFocusables(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		                    focusables.first && focusables.first.focus();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:	                }, 300); // animation is 300ms
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var helper = cmp.getConcreteComponent().getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        helper.afterSetActiveInstance(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.bindKeyHandler(manager);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (panel.get("v.isModal") === false && panel.getDef().getDescriptor().getQualifiedName().indexOf("panelSlider") == -1) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                this.bindClickHandler(manager);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.unbindKeyHandler(manager);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.unbindClickHandler(manager);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    afterSetActiveInstance: function(panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	//template for  subcomponents
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * TODO: Need to find a better way of updating the panel zIndex
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _updateModalGlasszIndex: function(panelHelper, panel, stackIndex) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	var el = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	if (panelHelper && panelHelper["getModalGlassElement"]) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    		var el = panelHelper["getModalGlassElement"](panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:  	            el.style.zIndex = stackIndex;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:     * TODO: Need to find a better way of updating the panel zIndex
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    _updatePanelElementzIndex: function(panelHelper, panel, stackIndex) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	if (panelHelper && panelHelper["getPanelElement"]) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    		var el = panelHelper["getPanelElement"](panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    			el.style.zIndex = stackIndex;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // set the panel's zIndex stacking order; 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // if the panel has a modal-glass component, update it too
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    stackPanel: function(cmp, panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:		var panelHelper = panel.getDef().getHelper(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stack = manager._stack,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stackIndex = manager._startStackLevel + stack.length + 1;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        stack.push(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this.setActiveInstance(cmp, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this._updateModalGlasszIndex(panelHelper, panel, stackIndex);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        this._updatePanelElementzIndex(panelHelper, panel, stackIndex);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // remove the currently active panel from the top of the zIndex stack
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // and move the next panel on the stack to the active state
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    unstackPanel: function(cmp, panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stack = manager._stack;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        // remove the current panel if and only if last on stack
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (stack.indexOf(panel) === stack.length-1) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stack.pop();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.setActiveInstance(cmp, stack[stack.length-1]);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (window.getComputedStyle(el).display == 'none') {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                return false;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            el = el.parentNode;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    	return el && !el.disabled && !/hidden/i.test(el.type) && this.isVisible(el);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // returns the first and last focusable in the given panel
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    getFocusables: function(panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var panelEl = panel.getElement(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            els = panelEl.querySelectorAll('input,button,a,textarea,select'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            i, el, first, last;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                break;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                last = el;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                break;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            first: first ? first : last,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            last: last
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // watches for <tab> key to control focus; panels handle ESC key as needed
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    bindKeyHandler: function(manager) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._keydownHandler) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._keydownHandler = function(e) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            var event = e || window.event,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                current = document.activeElement,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                active = manager._active,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                isModal = active.get("v.isModal") !== false,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                focusables;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (active && event.keyCode == 9) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                focusables = self.getFocusables(active);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    if (current === focusables.last && !shiftPressed) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        focusables.first.focus();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    } else if (current === focusables.first && shiftPressed) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        focusables.last.focus();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                    if (current === focusables.last && !shiftPressed) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                        $A.get('e.ui:closePanel').fire();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        $A.util.on(document, 'keydown', manager._keydownHandler, false);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    unbindKeyHandler: function(manager) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!manager._keydownHandler) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        $A.util.removeOn(document, 'keydown', manager._keydownHandler, false);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._keydownHandler = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    bindClickHandler: function(manager) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var self = this;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._clickHandler) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._clickHandler = function(e) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            var event = e || window.event,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                active = manager._active,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                panel  = active.find("panel").getElement(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                target = event.target || event.srcElement,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                clickedInside = $A.util.contains(panel, target);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (active && !clickedInside) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                $A.get('e.ui:closePanel').fire();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        $A.util.on(document, 'click', manager._clickHandler, false);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    unbindClickHandler: function(manager) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (!manager._clickHandler) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        $A.util.removeOn(document, 'click', manager._clickHandler, false);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._clickHandler = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    transitionBegin: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var params = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container = cmp.getElement(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            active = manager._active;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (params.isOpening) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// if there is already an active panel, keep track of the scroll position
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// so we can reset it when this new panel is closed; the body scroll
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// position gets hosed when we set our container overflow to hidden below
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	// but we need to do that for proper animation display
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (active) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            	active._scrolled = document.body.scrollTop;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager._transitioning = 'open';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            manager._transitioningInstance = params.panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container.style.overflow = 'hidden';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.stackPanel(cmp, params.panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	manager._transitioning = 'close';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        	manager._transitioningInstance = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container.style.overflow = '';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // ui:panelTransitionEnd handler
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // if 'hide' transition has ended then remove transient panel from the dom
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    transitionEnd: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var manager = this.getManager(cmp),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            container = cmp.getElement(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            stack = manager._stack,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            actionDone = event.getParam('action'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panelId = event.getParam('panelId'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            isTransient = event.getParam('isTransient'),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            currentInstance = manager._transitioningInstance || $A.getCmp(panelId),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._transitioning = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        container.style.overflow = '';
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (actionDone === 'hide') {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            // transient panels get nuked
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (isTransient) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                this.removeInstance(cmp, currentInstance);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            this.unstackPanel(cmp, currentInstance);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        manager._transitioningInstance = null;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (manager._actionQueue.length) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            queuedAction = manager._actionQueue.shift();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // ui:panelDoneRendering handler
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    // call onCreate callback if it exists
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:    onPanelLoaded: function(cmp, event) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        var params = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            config = cmp._panels[params.panelId],
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            onCreate = config && config.onCreate,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            panel = config && config.panel;
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:        if (onCreate && panel) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:            if (typeof onCreate === 'function') {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                onCreate.call(null, panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerHelper.js:                onCreate.run(panel);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    <ruau:description>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        <p><code>ui:​panelManager</code>​ handles panel overlays, modal overlays, and panel sliders. 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:          You only need one instance of <code>ui:​panelManager</code> in an app. To open a panel, fire the <code>ui:openPanel</code> event. Adding the <code>'class'</code> parameter inserts the style to the <code>div</code> tag of the panel container. This example fires the event to open a panel overlay with body markup passed in via <code>newComponentAsync()</code> in a callback.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:<pre>showPanel: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    var openPanelEvent = $A.get('e.ui:openPanel').setParams({
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    	title: 'my panel',
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    	'class': 'myPanel',
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        callbacks: { onCreate: function(panel){
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:            	var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:            	var overlay = cmps[3];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        		overlay.addHandler('press', cmp, 'c.showPanel')
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        		panel.set("v.body", cmps);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    openPanelEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:	<p>To open a modal overlay, set <code>isModal: true</code> on the <code>ui:openPanel</code> event before you fire it. 
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:	   To create a panel slider, set <code>isSlider: true</code> on the <code>ui:openPanel</code> event before you fire it.</p>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:	<p>When working with a modal overlay, you can set its body by passing in the <code>body</code> event parameter.</p>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:<pre>showModal: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    var overlay = cmps[3];
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    overlay.addHandler('press', cmp, 'c.showModal')
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    var openPanelEvent = $A.get('e.ui:openPanel').setParams({
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        isModal: true,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        title: 'my panel',
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:        'class': 'myClass',
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    openPanelEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:  </ruau:description>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc: 	<ruau:example name="panelManagerEx" ref="uitest:panelTest" label="Using ui:panelManager">
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:    	<p>This example shows how you can implement the <code>ui:panelManager</code> component.</p>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:	</ruau:example>   
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManager.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.initialize(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    openPanel: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.openPanel(cmp, event.getParams() || {});
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    closePanel: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        var config = event.getParams() || {};
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:            helper.destroyPanel(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:            helper.closeInstance(cmp, config.instance);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    updatePanel: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    	helper.updatePanel(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    _onPanelTransitionBegin: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.transitionBegin(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    _onPanelTransitionEnd: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.transitionEnd(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    createSlidePanel: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.createPanelSliderDEPRECATED(cmp, evt.getParams() || {});
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    destroySlidePanel: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.destroySlidePanelDEPRECATED(cmp, evt, true);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    destroyPanel: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.destroyPanel(cmp, evt);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    destroyAllPanels: function(cmp, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.destroyAllPanels(cmp, event);
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:    onPanelLoaded: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/panelManager/panelManagerController.js:        helper.onPanelLoaded(cmp, evt);
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" access="GLOBAL" description="Displays text as specified by the value attribute.">
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    <ruau:attribute name="value" type="String" required="true" access="GLOBAL" description="The text displayed when this component is rendered."/>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:    <span class="{!v.class}" dir="{!v.dir}" ruau:id="span"><!--value will be rendered here--></span>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:        var value = cmp.get('v.value');     
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:        var ret = this.superRender();       
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:        var span = cmp.find('span').getElement();
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:        helper.appendTextElements(value, span);
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:        if (cmp.isDirty("v.value")) {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:            var span = cmp.find('span').getElement();
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:            helper.removeChildren(span);
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:            var value = cmp.get('v.value');        
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextRenderer.js:            helper.appendTextElements(value, span);
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:	appendTextElements : function(textValue, containerEl) {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:		if (!containerEl) {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:		if (typeof textValue == 'number') {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			containerEl.appendChild(document.createTextNode(textValue));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:		} else	if (typeof textValue == 'string' && textValue.length > 0) {			
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			textValue = textValue.replace(/(\r\n|\r|(\\r\\n)|\\r|\\n)/g, '\n');
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			//workaround for closure compiles "*" into unicode in some context;
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			var wildCard = '*';
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			var regex = new RegExp("[^\\n]." + wildCard + "|\\n", "g");			
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			var parts = textValue.match(regex);
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			if (textValue === '\n') {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:				containerEl.appendChild(document.createElement('br'));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			} else if (!parts || parts.length == 1) {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:				containerEl.appendChild(document.createTextNode(textValue));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:				var len = parts.length;
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:				for (var i=0; i< len; i++) {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:					if (parts[i] === '\n') {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:						containerEl.appendChild(document.createElement('br'));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:						containerEl.appendChild(document.createTextNode(parts[i]));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			containerEl.appendChild(document.createTextNode(''));
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextHelper.js:			var child = element.firstChild, nextChild;
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify setting value attribute to '' blank.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testEmptyValue:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes : {value: ''},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find("span").getElement()), "When value is initialized to an empty string, nothing should be shown.");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * positive test case: Verify outputText can display text.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testValue: {
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes : {value : 'Hello World!'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('Hello World!', $A.test.getText(component.find("span").getElement()), "Value attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify that default direction of display is left to right.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testDefaultDirection:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes : {value : 'some text'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('ltr', component.get('v.dir'), "Default direction should be left to right.");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify that direction on span element changes when 'dir' attribute is changed.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes : {value: 'Hello World! You are welcome.', dir : 'rtl'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('rtl', component.find("span").getElement().dir, "Dir attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify displaying non string value.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testNonStringValue:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: 3.1415},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('3.1415', $A.test.getText(component.find("span").getElement()), "Failed to display string form of numeric value");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify displaying Empty spaces.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    // W-1075402 https://gus.soma.salesforce.com/a07B0000000GCEAIA4
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    _testTrimmingSpaces:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '   '},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find("span").getElement()), "Failed to trim spaces");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Verify prefix and suffix trimming of space.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    // W-1075402 https://gus.soma.salesforce.com/a07B0000000GCEAIA4
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    _testTrimmingSpacesAtFrontAndEnd:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '   foo '},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('foo', $A.test.getText(component.find("span").getElement()), "Failed to trim spaces");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * IE7 IE8 Excluded: textContent doesn't work https://github.com/forcedotcom/lumen-beta/commit/25650a7343a41b5fd613c23ad0ec400098657f6f
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * and $A.test.​getText() won't trim the space
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '\n'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('', component.find("span").getElement().textContent, "Failed to convert \r\n\ and \n into <br>");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Output text with CarriageReturn.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * IE7 IE8 Excluded: textContent doesn't work https://github.com/forcedotcom/lumen-beta/commit/25650a7343a41b5fd613c23ad0ec400098657f6f
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * and $A.test.\u200bgetText() won't trim the space
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testCarriageReturn:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '\r\n'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        	var tags = component.find("span").getElement().innerHTML;
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:			tags = tags.replace(/<!---->/g, '');
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('<br>', tags, "Failed to convert \r\n\ and \n into <br>");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * IE7 IE8 Excluded: textContent doesn't work https://github.com/forcedotcom/lumen-beta/commit/25650a7343a41b5fd613c23ad0ec400098657f6f
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * and $A.test.​getText() won't trim the space
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '\n1\n2\n'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('12', component.find("span").getElement().textContent, "Failed to convert \r\n\ and \n into <br>");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * Output text with carriage returns & linefeeds.  Carriage returns are output as \n by browser.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * IE7 IE8 Excluded: textContent doesn't work https://github.com/forcedotcom/lumen-beta/commit/25650a7343a41b5fd613c23ad0ec400098657f6f
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:     * and $A.test.​getText() won't trim the space
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:    testCarriageReturnLineFeeds:{
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        attributes: {value: '\r\na\r\nb\r\n'},
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:        	var tags = component.find("span").getElement().innerHTML;
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:			tags = tags.replace(/<!---->/g, '');			
ruau/ruau-components/src/nAmE/components/ui/outputText/outputTextTest.js:            ruau.test.assertEquals('<br>a<br>b<br>', tags, "Failed to convert \r\n\ and \n into <br>");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:			A <code>ui:outputText</code> component represents text output that is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:			This component can be used with <code>ui:inputText</code>, which takes in a text input. 
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:			To display text, you can use an attribute value and bind it to the <code>ui:outputText</code> component.
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:		<pre>&lt;ruau:attribute name="myText" type="String" default="some string"/>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:&lt;ui:outputText value="{!v.myText}" label="my output"/></pre>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:		<pre>&lt;span dir="ltr" class="uiOutputText">
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:&lt;/span></pre>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:		<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/outputText/outputText.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	handleItemsChange: function (cmp, params) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			this.handleWrite(cmp);
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	handleWrite: function (cmp) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		var items 			= cmp.get('v.items'),
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			defaultFields 	= cmp.get('v.defaultFields'),
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		// Break appart operations into a separate lists on a single config object.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		for (var i = 0; i < items.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			if (!item || !item.operation) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:				return $A.error('Invalid data format. Specify the desired operation.');
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			if (defaultFields) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:				for (var f in defaultFields) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:					// Copy defaultFields onto item object if not set.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:						item[f] = defaultFields[f];
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			if (!cfg[item.operation]) { 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:				cfg[item.operation] = []; 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:			cfg[item.operation].push(item.record);
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		// Delegate actual server action to concrete implementation.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		// Run appropriate actions based on the response. 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		this.write(cmp.getConcreteComponent(), cfg, function (err, data) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:				cmp.get('e.onerror').setParams({ value: { error: err, items: items } }); 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:				cmp.get('e.onsuccess').setParams({ value: { data: data, items: items } });
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	 * Implement write logic in a concrete helper.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	 * @param {Component} concrete 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	 * @params {Object} cfg { operation => [] }
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	 * @params {Function} callback optional callback to invoker of write operation function (error, response)
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:	write: function (concrete, cfg, callback) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterHelper.js:		$A.error('Unimplemented function! dataWriterHelper#write should be implemented in a concrete helper.');
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:<ruau:component abstract="true" extensible="true">
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:attribute name="items" type="List" description="{ record: {...}, operation: SAVE/DELETE } }"/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:attribute name="defaultFields" type="Map" description="Map of default values to apply to every record."/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:attribute name="sync" type="Boolean" default="false" description="Should changes to items immediately write."/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:registerEvent name="write" type="ui:write" description="Command event to invoke writing."/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:registerEvent name="onsuccess" type="ui:response" description="Event fired on write success."/> 
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:registerEvent name="onerror" type="ui:response" description="Event fired on write error."/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:handler name="change" value="{!v.items}" action="{!c.handleItemsChange}"/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:	<ruau:handler name="write" action="{!c.handleWrite}"/>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriter.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:	handleItemsChange: function (cmp, evt) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:		hlp.handleItemsChange(cmp, evt.getParams());
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:	handleWrite: function (cmp, evt) {
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:		var concrete = cmp.getConcreteComponent(),
ruau/ruau-components/src/nAmE/components/ui/dataWriter/dataWriterController.js:		hlp.handleWrite(cmp);	
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:<ruau:event type="COMPONENT" support="GA" description="Event fired to ask components to display its their picker.">
ruau/ruau-components/src/nAmE/components/ui/openPicker/openPicker.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:<ruau:component extends="ui:listViewColumnCell" extensible="true" support="GA" description="An email column template definition, describes an email mailto: link reference in a table data cell.">
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    <ruau:attribute name="text" type="String" default=""           description="The text of the hyperlink. Defaults to the url provided, if not set."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    <ruau:attribute name="url" type="String" default=""            description="The url to link to. Defaults to the body of the component, if not set."/>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    <ruau:registerEvent name="onclick" type="ui:listViewEvent" description="The event that fires when the hyperlink is clicked." />
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    <a href="{!'mailto:'+v.url}" title="{!v.tooltip||v.url||v.body}" onclick="{!c.clickHandler}">
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:    </a>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmail.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/listViewColumnEmail/listViewColumnEmailController.js:    clickHandler:function(component,domEvent,helper){
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var inputCmp = component.find("input");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            inputCmp.addHandler("input", component, "c.handleInputChange"); // Later on we need to make it work on older browsers too.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            inputCmp.addHandler("keydown", component, "c.handleKeyAction");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            inputCmp.addHandler("focus", component, "c.handleFocus");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        helper.relayEvents(component);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        // This calls a function (callback) in a delayed manner and it can be cancelled.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        component._delay = (function(){
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            var timer = 0;
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            return function(callback, ms){
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:                clearTimeout (timer);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:                timer = setTimeout(callback, ms);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    fetchData: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        helper.fetchData(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var e = component.getEvent(event.getName());
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        	e.setParams(event.getParams());
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    handleFocus: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var inputCmp = event.getSource();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var elem = inputCmp ? inputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            elem.setAttribute("aria-activedescendant", "");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    handleInputChange: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        if (component._delay) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            component._delay(function() {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:                helper.fireInputChangeEvent(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            helper.fireInputChangeEvent(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    handleKeyAction: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        helper.handleKeyAction(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var domEvent = event.getParam("domEvent");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    handleMatchDone: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var evt = component.get("e.matchDone");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            evt.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:                size: event.getParam("size")
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    handleSelectOption: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var optionSelectEvt = component.get("e.selectListOption");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        optionSelectEvt.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            option: event.getParam("option")
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    matchText: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        var listCmp = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            listCmp.set("v.keyword", event.getParam("keyword"));
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:            listCmp.get("e.matchText").fire();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:    updateAriaAttributes: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteController.js:        helper.updateAriaAttributes(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    fetchData: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        // Show loading indicator
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var listCmp = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var listHelper = listCmp.getDef().getHelper();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            listHelper.showLoading(listCmp.getSuper(), true);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var options = event.getParam("parameters");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var listCmp = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        // fire dataProvide event
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var dataProviders = component.get("v.dataProvider");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var index = event.getParam("index");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var provideEvent = dataProviders[index].get("e.provide");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        provideEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            parameters: options
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    fireInputChangeEvent: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    	// Hide the list if it is already visible
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        //handling case when there is another element like label in the markup
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var value = component.getDef().getHelper().getInputElement(component).value;
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var inputChangeEvt = component.get("e.inputChange");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        if (inputChangeEvt) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            inputChangeEvt.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                value: value
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            inputChangeEvt.fire();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var list = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            list.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    handleEnterkey: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var list = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var pEvent = list.get("e.pressOnHighlighted");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    handleEsckey: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    handleKeyAction: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var keyCode = event.getParam("keyCode");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var domEvent = event.getParam("domEvent");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        if (keyCode === 40) {  // down arrow key
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        } else if (keyCode === 38) {  // up arrow key
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            domEvent.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            this.handleEsckey(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        } else if (keyCode === 9) {  // tab key: dismiss the list
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            this.handleTabkey(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            this.handleEnterkey(component, event);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    handleTabkey: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var list = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var highlightEvent = list.get("e.listHighlight");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            highlightEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                activeIndex: 0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var list = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var highlightEvent = list.get("e.listHighlight");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            highlightEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                activeIndex: -1
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:     * Any event fired on input field, we need fire a same one on autocomplete.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    relayEvents: function(component) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    	var inputCmp = component.find("input");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        	var handledEvents = component.getHandledEvents();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        	for ( var name in handledEvents) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        		var eventDef = inputCmp.getDef().getEventDef(name);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    			if (eventDef && handledEvents.hasOwnProperty(name) && handledEvents[name] === true) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                    inputCmp.addHandler(name, component, "c.fireEventsFromInput");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:     * Tell list component which elements it should ignore to handle collapse.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var inputCmp = component.find("input");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var listCmp = component.find("list");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var elems = inputCmp.getElements();
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:    updateAriaAttributes: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var inputCmp = component.find("input");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:        var elem = inputCmp ? inputCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            var attrs = event.getParam("attrs");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:            for (var key in attrs) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                if (attrs.hasOwnProperty(key)) {
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocompleteHelper.js:                    elem.setAttribute(key, attrs[key]);
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:<ruau:component extends="ui:input" support="proto" description="Represents an input field that suggests a list of values from the data provider as you type.">
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="dataProvider" type="Ruue.Component[]" required="true" description="A list of data provider components"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="emptyListContent" type="Ruue.Component[]" description="Content to be shown if the list is empty"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="loadingIndicator" type="Ruue.Component[]" description="Content to be shown while the list is loading"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="inputClass" type="String" description="The css class for input component."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="inputType" type="String" default="inputText" description="The type of input component. We support inputText and inputTextArea for now."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="listOption" type="Ruue.ComponentDefRef[]" required="true" description="A ComponentDefRef to use as the template for each generated option in the list."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="optionVar" type="String" required="true" description="The name by which to refer to the current data object inside of the template for each option."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="placeholder" type="String" default="" description="Text that is displayed when the input field is empty, to prompt the user for a valid entry."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="propertyToMatch" type="String" default="label" description="The property name in the data object which is used to match typing in the input field."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="theme" type="String" default="default" description="Theme to apply to this component."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="matchFunc" type="Ruue.Action" description="Overrides default list item update behavior to allow custom text matching."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="autocompleteButton" type="Ruue.Component[]" description="Optional button to render with this component."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="header" type="Ruue.Component[]" description="A facet above the rendered list, for use as a list header"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:attribute name="footer" type="Ruue.Component[]" description="A facet below the rendered list, for use as a list footer"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:registerEvent name="matchDone" type="ui:matchDone" description="The event fired when the matching is done."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:registerEvent name="inputChange" type="ui:inputChange" description="The event fired when the input value changes."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:registerEvent name="selectListOption" type="ui:selectListOption" description="The event fired when a list option is displayed."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:registerEvent name="fetchData" type="ui:fetchData" description="The event indicates we need to fetch data through a data provider."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:handler name="fetchData" action="{!c.fetchData}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:registerEvent name="matchText" type="ui:matchText" description="The event fired when a text match occurs."/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:handler name="matchText" action="{!c.matchText}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:set attribute="labelPosition" value="hidden"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ruau:if isTrue="{!v.inputType == 'inputTextArea'}">
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        <ui:inputTextAreaForAutocomplete ruau:id="input" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         class="{!v.inputClass+' '+v.theme}" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         label="{!v.label}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         labelClass="{!v.labelClass}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         labelPosition="{!v.labelPosition}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         placeholder="{!v.placeholder}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         updateOn="{!v.updateOn}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         autocompleteButton="{!v.autocompleteButton}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:            <ui:inputTextForAutocomplete ruau:id="input" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         class="{!v.inputClass+' '+v.theme}" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         label="{!v.label}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         labelClass="{!v.labelClass}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         labelPosition="{!v.labelPosition}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         placeholder="{!v.placeholder}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         updateOn="{!v.updateOn}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:                                         autocompleteButton="{!v.autocompleteButton}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:    <ui:autocompleteList ruau:id="list" class="{!v.class}" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        dataProvider="{!v.dataProvider}" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        itemVar="{!v.optionVar}" 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        itemTemplate="{!v.listOption}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        loadingIndicator="{!v.loadingIndicator}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        header="{!v.header}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        visible="false"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        propertyToMatch="{!v.propertyToMatch}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        matchDone="{!c.handleMatchDone}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        selectListOption="{!c.handleSelectOption}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        updateAriaAttributes="{!c.updateAriaAttributes}"
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:        matchFunc="{!v.matchFunc}"/>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:		    <code>ui:autocomplete</code> displays suggestions as users type in a text field. Data for this component is provided by a server-side model. This component provides its own text field and text area component.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:		    The default is a text field but you can change it to a text area by setting <code>inputType="inputTextArea"</code>.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:			To set the list options, use the <code>ui:autocompleteOption</code> component in the <code>listOption</code> attribute. 
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:			The behaviors for a text match, input change, and option display can be customized using the <code>matchText</code>, <code>inputChange</code>, and <code>selectListOption</code> events respectively.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:			Clicking a list option fires the <code>selectListOption</code> event. You can retrieve the number of matches by using the <code>size</code> parameter in the <code>matchDone</code> event. The number of matches
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:			is displayed after <code>matchDone</code> is fired.
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:		<ruau:example name="autocomplete" ref="ruaudocs:demoAutocomplete" label="Using ui:autocomplete">
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:    	<p>This example shows how to use <code>ui:autocomplete</code> with a data provider and events like <code>matchDone</code>, <code>inputChange</code>, and <code>selectListOption</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:	   </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/autocomplete/autocomplete.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:<ruau:interface support="GA" description="The standard interface for paging components.">
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="currentPage" type="Integer" default="1"      description="Gets or sets the current page of the pager. The first page is 1, the last page is pageCount."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="endIndex" type="Integer" default="-1"         description="Gets the index of the last item in the current page based on pageSize and totalItems."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="pageCount" type="Integer" default="0"        description="Gets the total number of pages based on pageSize and totalItems."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="pageSize" type="Integer" default="25"        description="Gets or sets the number of items per page."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="startIndex" type="Integer" default="-1"       description="Gets the index of the first item in the current page based on pageSize and totalItems."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="totalItems" type="Integer" default="0"       description="Gets or sets the total number of items the pager is describing."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:    <ruau:attribute name="type" type="String"                          description="The concrete type of the pager. Accepted values are 'JumpToPage', 'NextPrevious', 'PageInfo', 'PageSize', or any namespaced component descriptor, e.g. ns:CustomPager."/>
ruau/ruau-components/src/nAmE/components/ui/pagingInterface/pagingInterface.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:<ruau:component extensible="true" implements="ui:visible" support="GA"
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    description="Use this component to create a two or three column layout.">
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    <ruau:attribute name="overflow" type="Boolean" default="false" description="Allows you to specify whether the &lt;ui:block&gt; permits overflow for its contents. Defaults to false, which means that content that overflows the boundaries of the component will be clipped."/>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    <ruau:attribute name="left" type="Ruue.Component[]" description="The left facet of the component. Components added to left are aligned to the left side of the &lt;ui:block&gt;. The left facet, if set, is wrapped in a &lt;div&gt; tag with the CSS class &quot;bLeft&quot; for individual styling."/>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    <ruau:attribute name="right" type="Ruue.Component[]" description="The right facet of the component. Components added to right are aligned to the right side of the &lt;ui:block&gt;. The right facet, if set, is wrapped in a &lt;div&gt; tag with the CSS class &quot;bRight&quot; for individual styling."/>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:	<ruau:attribute name="tag" type="String" default="div" description="The HTML tag to use for this component.  Defaults to &quot;div&quot;"/>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    <ruau:html tag="{!v.tag}" class="{!v.class+(v.overflow == true||v.overflow =='true' ?' overflow':'')}">
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:        <ruau:if isTrue="{!v.left.length > 0}">
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:            <div class="bLeft">{!v.left}</div>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:        </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:        <ruau:if isTrue="{!v.right.length > 0}">
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:            <div class="bRight">{!v.right}</div>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:        </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:        <div class="bBody">
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:    </ruau:html>
ruau/ruau-components/src/nAmE/components/ui/block/block.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/block/block.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/block/block.css:/** Layout Block
ruau/ruau-components/src/nAmE/components/ui/block/block.css: * 	This handy component is based on Nicole Sullivan's media object
ruau/ruau-components/src/nAmE/components/ui/block/block.css: *  http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/ 
ruau/ruau-components/src/nAmE/components/ui/block/block.css:    vertical-align: top;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:    float: left;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	display: block;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:    float: right;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:/*When overflow = true is specified on ui:block, we add 
ruau/ruau-components/src/nAmE/components/ui/block/block.css:  the class "overflow" to the uiBlock and these overrides address 
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	display: table-cell;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	vertical-align: top;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:/* micro clearfix */
ruau/ruau-components/src/nAmE/components/ui/block/block.css:.uiBlock.overflow:after {
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	content:"";display:table;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:.uiBlock.overflow:after {
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	clear:both;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	float:left;
ruau/ruau-components/src/nAmE/components/ui/block/block.css:	float:right;
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Activates a single ui:dialog component by:
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     1. setting a reference to it on the dialogManager's model.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     2. applying event handlers for proper interaction.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     3. setting a reference to those event handlers on the dialog's model (for removal later).
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     4. applying CSS classes to display the dialog.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the ui:dialog component to activate
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} manager the ui:dialogManager component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    activateDialog : function(dialog, manager) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var oldHandlerConfig   = dialog.get("v._handlerConfig");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if ($A.util.isUndefinedOrNull(oldHandlerConfig)) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            var isModal         = dialog.get("v.isModal"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                clickOutToClose = dialog.get("v.clickOutToClose"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                autoFocus       = dialog.get("v.autoFocus"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                handlerConfig   = this.getHandlerConfig(dialog, isModal, clickOutToClose);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            this.applyHandlers(handlerConfig);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            this.toggleDisplay(true, dialog, autoFocus, isModal, handlerConfig);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            manager.set("v._activeDialog", dialog);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            dialog.set("v._handlerConfig", handlerConfig);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Deactivates a single ui:dialog component by:
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     1. removing the reference to it from the dialogManager's model.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     2. removing event handlers.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     3. removing the reference to those event handlers from the dialog's model.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     *     4. removing CSS classes to hide the dialog.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the ui:dialog component to deactivate
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} manager the ui:dialogManager component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    deactivateDialog : function(dialog, manager) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var isModal       = dialog.get("v.isModal"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            autoFocus     = dialog.get("v.autoFocus"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            handlerConfig = dialog.get("v._handlerConfig");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if (!$A.util.isUndefinedOrNull(handlerConfig)) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            this.removeHandlers(handlerConfig);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            this.toggleDisplay(false, dialog, autoFocus, isModal, handlerConfig);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            manager.set("v._activeDialog", null);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            dialog.set("v._handlerConfig", null);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Applies the appropriate event handlers for proper interaction.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Object} config JS object that contains all the necessary event handlers
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    applyHandlers : function(config) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.on(document, "keydown", config.keydownHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.on(document, "click", config.clickHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.on(window, "resize", config.resizeHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Removes the appropriate event handlers to keep the DOM tidy.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Object} config JS object that contains all the necessary event handlers
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    removeHandlers : function(config) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.removeOn(document, "keydown", config.keydownHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.removeOn(document, "click", config.clickHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        $A.util.removeOn(window, "resize", config.resizeHandler, false);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Builds the appropriate DOM event handlers necessary to interact with the
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * active ui:dialog component, as well as references to the document's previously
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * focused element (before the dialog opens), and the first focusable element
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * inside the dialog. This config object is stored on the dialog component's
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * model so we can remove the event handlers when the dialog is finally closed.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the active ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} isModal specifies if the active dialog is modal
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} clickOutToClose specifies if clicking outside the dialog should close it
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @return {Object} JS config object w/ references to event handlers, as well as the elements to which we need to apply focus
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getHandlerConfig : function(dialog, isModal, clickOutToClose) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var self          = this,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            oldFocus      = document.activeElement,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            newFocus      = this.getFirstFocusableElement(dialog),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            keydown       = function(event) { self.getKeydownHandler(dialog, isModal, newFocus, event) },
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            click         = function(event) { self.getClickHandler(dialog, clickOutToClose, event) },
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            resize        = function() { self.getResizeHandler(dialog, isModal) };
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            keydownHandler : keydown,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            clickHandler   : click,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            resizeHandler  : resize
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Constructs the handler for the DOM keydown event. Includes handlers for 1) escape key,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * and 2) tab key (including shift+tab).
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the active ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} isModal specifies if the dialog is modal
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {HTMLElement} firstFocusable the first focusable element inside the dialog
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {UIEvent} event DOM keydown event
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getKeydownHandler : function(dialog, isModal, firstFocusable, event) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if (!event) { var event = window.event; }
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var closeButton  = dialog.find("closeButton").getElement(),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            currentFocus = document.activeElement,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            closeEvent   = $A.get("e.ui:closeDialog");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        closeEvent.setParams({ dialog : dialog, confirmClicked : false });
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            case 27: // escape key - always closes all dialogs
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                break;
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            case 9: // tab key - if modal, keep focus inside the dialog
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        firstFocusable.focus();
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    } else if (currentFocus === firstFocusable && shiftPressed) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                // if not modal, close the dialog when you tab out of it
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        (currentFocus === firstFocusable && shiftPressed)) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        $A.util.squash(event, true);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                break;
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Constructs the handler for the DOM click event.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} clickOutToClose whether the dialog should be closed on click outside the dialog
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {UIEvent} event the DOM click event
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getClickHandler : function(dialog, clickOutToClose, event) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if (!event) { var event = window.event; }
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var target        = event.target || event.srcElement,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            container     = dialog.find("outer").getElement(),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            clickedInside = $A.util.contains(container, target),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                closeEvent = $A.get("e.ui:closeDialog");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                closeEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    dialog : dialog,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    confirmClicked : false
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Constructs the handler for the window.resize DOM event.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} isModal whether the dialog is modal or not
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getResizeHandler : function(dialog, isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            dialog.find("content").getElement().style.maxHeight = this.getContentMaxHeight(dialog) + "px";
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Retrieves the first focusable element inside the dialog component. Should
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * ALWAYS return a non-null value, as the "x" (i.e. dialog close) link should always
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * be visible and positioned as the very last element in the dialog window.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * (Having a known element as the last item in the dialog makes keyboard management
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * much easier.)
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * always focus on the "x" link, instead of the first element.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} cmp the ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @return {HTMLElement} the first focusable element inside the dialog, or the "x" link for IE7
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getFirstFocusableElement : function(dialog) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var container    = dialog.find("outer").getElement(),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            close        = dialog.find("closeButton").getElement(),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        if (!container) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            $A.assert(false, "Trying to find a focusable element in the dialog, but no container specified.");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            // sorry IE7, you're outta luck
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            formElements = container.querySelectorAll("input,button,a,textarea,select");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                for (var i=0; i<length; i++) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    if (!formElements[i].disabled && formElements[i].type.toLowerCase() !== "hidden") {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                        break;
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                // we should never get here - at a minimum, the "close" link should always be present
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.assert(false, "No focusable element found.");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Handles the application and removal of CSS classes that control the visibility of
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * all dialog types, as well as the animation behaviour of modal dialogs. This method
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * also handles focusing on the proper element when a dialog is opened or closed.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} show specifies if the dialog should be shown (true) or hidden (false)
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} maskCmp the ui:dialog's "mask" component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} dialog the ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} autoFocus specifies if focus should automatically be applied to the first element in the dialog
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Boolean} isModal specifies if this dialog is modal
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Object} config JS object that contains references to the elements to focus
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    toggleDisplay : function(show, dialog, autoFocus, isModal, config) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var mask         = isModal ? dialog.find("mask").getElement() : null,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            outer        = dialog.find("outer").getElement(), // outer dialog wrapper
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            inner        = dialog.find("content").getElement(), // inner content wrapper (i.e., the part that is scrollable)
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            flickerDelay = 50,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            focusDelay   = 300,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            hideDelay    = 400;
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        // if the dialog should be opened, remove the 'hidden' classes and apply the animation classes
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            $A.util.removeClass(outer, "hidden");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                inner.style.maxHeight = this.getContentMaxHeight(dialog) + "px";
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.util.removeClass(mask, "hidden");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                // delay the application of animation classes by just a hair ... webkit/ffx rendering bug
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                window.setTimeout(function() { $A.util.addClass(mask, "fadeIn"); }, flickerDelay);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                window.setTimeout(function() { $A.util.addClass(outer, "slideUp"); }, flickerDelay);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            // apply proper element focus if necessary
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            if ((autoFocus || isModal) && config.newFocus) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    // delay focus until the modal slides into place, otherwise the scroll jumps
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                    window.setTimeout(function() { config.newFocus.focus(); }, flickerDelay + focusDelay);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        // if the dialog should be closed, add the 'hidden' classes and remove the animation classes
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            if (isModal) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                // remove the animation classes immediately, but delay adding 'hidden' back until animation completes
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.util.removeClass(mask, "fadeIn");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.util.removeClass(outer, "slideUp");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                window.setTimeout(function() { $A.util.addClass(mask, "hidden"); }, hideDelay);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                window.setTimeout(function() { $A.util.addClass(outer, "hidden"); }, hideDelay);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                // if not a modal, then just hide the dialog immediately
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:                $A.util.addClass(outer, "hidden");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            // apply proper element focus if necessary
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            	} catch (e) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            		// Ignore these - invalid element or in IE7/8 trying to set focus to an invisible element
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Calculates the max-height of the content <div> in a modal window so
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getContentMaxHeight : function(dialog) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var hasButtons     = dialog.get("v.buttons.length") > 0,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            cssMargin      = 10, // applied to top-level "title", "content", and "button" elements
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            cssPadding     = 10, // applied to "content" <div> only
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            titleHeight    = dialog.find("title").getElement().offsetHeight + cssMargin * 2, // account for top & bottom
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            contentPadding = cssPadding * 2, // account for top & bottom
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            buttonHeight   = hasButtons ? dialog.find("buttons").getElement().offsetHeight + cssMargin * 2 : cssMargin,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            extraMargin    = 20; // extra margin at the bottom of the viewport so you can fully see the css box-shadow effect
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        // 2600px is the same value as the CSS 3D transform rule applied to the dialog
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        return Math.min($A.util.getWindowSize().height, 2600) - (titleHeight + contentPadding + buttonHeight + extraMargin);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * Gets a root ui:dialog instance, even if the component to check is
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * an extension of ui:dialog.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @param {Ruue.Component} cmp The component to check
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:     * @return {Ruue.Component} cmp The root ui:dialog component
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:    getDialogRoot : function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        var type = cmp.getDef().getDescriptor().getQualifiedName();
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:        while (type !== "markup://ui:dialog") {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerHelper.js:            type = cmp.getDef().getDescriptor().getQualifiedName();
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:<ruau:component extensible="true" support="GA" description="Manages all instances of ui:dialog in an application, by handling visibility and all DOM events. One (and only one) instance of this component is required if you wish to use the ui:dialog component. We recommend putting the ui:dialogManager component at the end of your .app file.">
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    <!-- private attributes -->
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    <ruau:attribute name="_activeDialog" type="Object" description="PRIVATE ATTRIBUTE | DO NOT SET -- Reference to the currently active (i.e., open) ui:dialog component."/>
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    <ruau:handler event="ui:openDialog" action="{!c.openDialog}" description="Activates a single ui:dialog component"/>
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:    <ruau:handler event="ui:closeDialog" action="{!c.closeDialog}" description="Deactivates a single ui:dialog component."/>
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManager.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:     * Handler for the ui:openDialog application-level event. Activates a
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:     * single ui:dialog component.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:    openDialog : function(cmp, evt, hlp) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        var activeDialog = cmp.get("v._activeDialog"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:            triggerEvent = evt.getParam("triggerEvent"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:            dialog       = evt.getParam("dialog"),
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        // we need to kill all "click" events that open dialogs, so they don't
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        // bubble up to the document and immediately close the dialog.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        // the triggerEvent could either be a raw DOM click, or a click generated
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:            if (triggerEvent.getName && triggerEvent.getName() === "press") {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:                eventToKill = triggerEvent.getParam("domEvent");
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:            $A.util.squash(eventToKill);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        // only one open dialog is allowed at a time ... if there's one
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        // already open, close that one first.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        if (activeDialog && activeDialog!=dialog && activeDialog.isInstanceOf && activeDialog.isInstanceOf("ui:dialog")) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:            hlp.deactivateDialog(activeDialog, cmp);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        hlp.activateDialog(hlp.getDialogRoot(dialog), cmp);
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:     * Handler for the ui:closeDialog application-level event. Deactivates a
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:     * single ui:dialog component.
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:    closeDialog : function(cmp, evt, hlp) {
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        var dialog = hlp.getDialogRoot(evt.getParam("dialog"));
ruau/ruau-components/src/nAmE/components/ui/dialogManager/dialogManagerController.js:        hlp.deactivateDialog(dialog, cmp);
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:<ruau:event type="COMPONENT" description="Event fired by dataProvider to signal to its parent list that data has changed">
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:    <ruau:attribute name="data" type="Object"/>
ruau/ruau-components/src/nAmE/components/ui/dataChanged/dataChanged.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			 A <code>ui:inputSelect</code> component is rendered as an HTML <code>select</code> element. It contains options, represented by the <code>ui:inputSelectOption</code> components. To enable multiple selections, set <code>multiple="true"</code>.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			 To wire up any client-side logic when an input value is selected, use the <code>change</code> event. 
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:<pre>&lt;ui:inputSelect class="single" ruau:id="InputSelectSingle" change="{!c.onSingleSelectChange}">
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:        &lt;ui:inputSelectOption text="Lion" value="true"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:        &lt;ui:inputSelectOption text="Bear"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:        &lt;ui:inputSelectOption text="Dragonfly"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:		<h4>Generating Options Dynamically</h4>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			<code>ui:inputSelect</code> does not support the use of <code>ruau:iteration</code> in its body. To generate options dynamically, you can load the options on the controller-side action.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:&lt;ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    &lt;ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    &lt;ui:inputSelect label="Select me:" class="dynamic" ruau:id="InputSelectDynamic"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:&lt;/ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			The following client-side controller generates options using the options attribute on the <code>ui:inputSelect</code> component. <code>v.options</code> takes in the list of objects and converts them into list options.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			The <code>opts</code> object constructs <code>InputOption</code> objects to create the <code>ui:inputSelectOptions</code> components within <code>ui:inputSelect</code>. 
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:			Although the sample code generates the options during initialization, the list of options can be modified anytime when you manipulate the list in <code>v.options</code>. The component automatically updates itself and rerenders with the new options.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:        var opts = [
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:            { class: "optionClass", label: "Option1", value: "opt1", selected: "true" },
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:            { class: "optionClass", label: "Option2", value: "opt2" },
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:            { class: "optionClass", label: "Option3", value: "opt3" }
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:        cmp.find("InputSelectDynamic").set("v.options", opts);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:		<p><code>class</code> is a reserved keyword that might not work with older versions of Internet Explorer. We recommend using <code>"class"</code> with double quotes.</p>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:		<ruau:example name="inputselect" ref="ruaudocs:demoSelect" label="Using ui:inputSelect">
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:    	<p>This example shows several ways to implement <code>ui:inputSelect</code>.</p>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	var concreteCmp = cmp.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:        var currentValue = concreteCmp.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:        if (!$A.util.isUndefined(currentValue)) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:        	// if a "value" attribute is specified on initial render, it should win over what the individual options report
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:            helper.updateOptionsFromValue(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:            // otherwise update the "value" attribute based on the options that claim to be selected
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:            helper.updateValueFromOptions(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    valueChange: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:        var concreteCmp = cmp.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:        helper.updateOptionsFromValue(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    // Update options from the current value if flag is set
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    optionsChange: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	var concreteCmp = cmp.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	if (concreteCmp._initOptionsFromValue) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	    concreteCmp._initOptionsFromValue = false;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	    helper.updateOptionsFromValue(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectController.js:    	    helper.updateValueFromOptions(concreteCmp);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:     * Verify setting disabled attribute.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:    testDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:        attributes : {disabled: true},
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:            $A.test.assertTrue(component.find("select").getElement().disabled, "Element not correctly disabled");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:     * Verify not setting disabled attribute.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:    testNotDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:        attributes : {disabled: false},
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:            $A.test.assertFalse(component.find("select").getElement().disabled, "Element not correctly enabled");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:     * Verify setting name attribute.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:    testName:{
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:        attributes : {name: 'select'},
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:            $A.test.assertEquals('select', component.find("select").getElement().name, "Name attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:     * Verify setting multiple attribute.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:        attributes : {name: 'select', multiple: true},
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:            $A.test.assertEquals(true, component.find("select").getElement().multiple, "Multiple attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:     * Verify setting size attribute.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:        attributes : {name: 'select', size: '5'},
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectTest.js:            $A.test.assertEquals(5, component.find("select").getElement().size, "Size attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Iterates over the options in the select element and returns a semicolon-delimited string of the selected values
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    getDomElementValue : function (el) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        var selectedOptions = [];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        for (var i = 0; i < el.options.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                selectedOptions.push(el.options[i].value);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Returns a package with the array of options (as either an array of components or an array of JS objects)
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * and the strategy to work with that array
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    getOptionsWithStrategy: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        var opts = cmp.get("v.options"),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	strat = this.optionsStrategy;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		strat = this.bodyStrategy;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        return { options : opts, strategy : strat };
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Updates all options' "selected" attributes in the select element, based on the semicolon-delimited newValue string
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    updateOptionsFromValue: function(cmp) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	if (cmp._suspendChangeHandlers) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        var value = cmp.get("v.value"),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	optionsPack = this.getOptionsWithStrategy(cmp),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	selectedOptions = optionsPack.strategy.getSelected(optionsPack.options);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        if (optionsPack.options.length == 0) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	cmp._initOptionsFromValue = true;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        if (selectedOptions.found && value === selectedOptions.optionValue) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        var newValues = (cmp.get("v.value") || "").split(";");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        if (!optionsPack.strategy.updateOptions(cmp, optionsPack.options, newValues) && !($A.util.getBooleanValue(cmp.get("v.multiple")) && value == "")) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	this.updateValueFromOptions(cmp, optionsPack);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	cmp._suspendChangeHandlers = true;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	optionsPack.strategy.persistOptions(cmp, optionsPack.options);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	cmp._suspendChangeHandlers = false;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Updates this component's "value" attribute based on the state of its options' "selected" attributes
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    updateValueFromOptions: function(cmp, optionsPack) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	if (cmp._suspendChangeHandlers) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        var value = cmp.get("v.value"),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	isMultiple = $A.util.getBooleanValue(cmp.get("v.multiple")),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	optionsPack = optionsPack || this.getOptionsWithStrategy(cmp),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	selectedOptions = optionsPack.strategy.getSelected(optionsPack.options);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        if (!selectedOptions.found || value !== selectedOptions.optionValue) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		selectedOptions.optionValue = optionsPack.strategy.getValue(optionsPack.options, 0);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		optionsPack.strategy.setOptionSelected(optionsPack.options, 0, true);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		cmp._suspendChangeHandlers = true;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:            	optionsPack.strategy.persistOptions(cmp, optionsPack.options);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:            	cmp._suspendChangeHandlers = false;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	cmp.set("v.value", selectedOptions.optionValue, true);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Strategies for working with either an array of option objects or of body components, passed through to the
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * select component either through the "v.options" attribute or through the body in markup.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Abstracts the implementation away so that the logic specific to the two data structures can be separated from
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * the main component logic
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Main functions available:
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   updateOptions(options, newValues) - updates the list of options based on newValues, which is either an array or a string
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   	Used for ensuring consistency between "v.value" and the list of options
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   getValues(options) - returns a ';'-concatenated String of selected values and whether a selected value was found
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   	Used for seeing which options are selected from the perspective of the options
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   getText(options, index) - returns the internal text of options[index]
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   setOptionSelected(options, index, selected) - equivalent to options[index].selected = selected
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *   persistOptions(cmp, options) - persists the array of options into the appropriate component attribute
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Strategy object for an array of option objects
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    optionsStrategy: {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	// If an option is in newValues, we want to select it
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	updateOptions : function(cmp, options, newValues) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		var found = false;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		for(var i=0;i<options.length;i++){
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                var option=options[i];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			var val = option.value;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			var selectOption = (newValues.length > 1 && ruau.util.arrayIndexOf(newValues, val) > -1) || newValues[0] == val.toString();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	// If an option is selected, we want to aggregate it into our list
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		var values = [];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:            for(var i=0;i<options.length;i++){
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			var option=options[i];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    				values.push(option.value);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		return { found : (values.length > 0), optionValue : values.join(";") };
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	getValue : function(options, index) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			return options[index].value;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			// TODO: somehow expose that the option couldn't be set.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Strategy object for an array of components (used for maintaining support for using inputSelectOption components in the body)
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    bodyStrategy: {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	// Updates options based on their existence in newValues
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	updateOptions : function(cmp, options, newValues) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:            var result = { found : false };
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:            // Perform single option update function on all of our options
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		this.performOperationOnCmps(options, this.updateOption, result, newValues);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		var values = [];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		this.performOperationOnCmps(bodyCmps, this.pushIfSelected, values);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		return { found : (values.length > 0), optionValue : values.join(";") };
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	getValue : function(options, index) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			options[index].set("v.value", selected);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			// TODO: somehow expose that the option couldn't be set.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	// Performs op on every ui:inputSelectOption in opts, where op = function(optionCmp, resultsObject, optionalArguments)
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	performOperationOnCmps : function(opts, op, result, newValues) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		for(var i=0;i<opts.length;i++){
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		var cmp=opts[i];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                if(cmp.isInstanceOf("ui:inputSelectOptionGroup")){
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        			var groupBody = cmp.get("v.body");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        				for(var j=0;j<groupBody.length;j++){
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                            var groupBodyCmp=groupBody[j];
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        					if (groupBodyCmp.isInstanceOf("ui:inputSelectOption")) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        						op(groupBodyCmp, result, newValues);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        		} else if (cmp.isInstanceOf("ui:inputSelectOption")) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    				op(cmp, result, newValues);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                    var descriptor = cmp.getDef().getDescriptor();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:                    var cmpName = descriptor.getNamespace() + ":" + descriptor.getName();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    				$A.warning("<" + cmpName + "> is currently not supported inside <ui:inputSelect> since it does not properly " +
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    						   "attach the options to the component. This will lead to undefined behavior. Please " +
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    						   "use 'v.options' to insert your option objects instead.");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        // Helper function for updateOptions
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        // Update optionCmp if it exists in newValues; passes result back in result object
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        updateOption : function(optionCmp, result, newValues) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        	var text = optionCmp.get("v.text");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:			var selectOption = (newValues.length > 1 && ruau.util.arrayIndexOf(newValues, text) > -1) || newValues[0] === text;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:			optionCmp.set("v.value", selectOption);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        // Helper function for getValues
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:        // Push optionCmp's value into valueList if selected
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:		pushIfSelected : function(optionCmp, valueList) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:			if ($A.util.getBooleanValue(optionCmp.get("v.value")) === true) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:				var text = optionCmp.get("v.text");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:					valueList.push(text);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     * Render the options directly to the DOM for performance
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *     value 				: // value for the option
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *     label (optional) 	: // display text for the option. Defaults to value
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *     class (optional) 	: // CSS class for the option
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *     selected (optional) 	: // whether option should be selected
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:     *     disabled (optional) 	: // whether option should be disabled
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	var options = cmp.getConcreteComponent().get("v.options"),
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:			optFrag, option, internalText;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	optFrag = document.createDocumentFragment();
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	for (var i = 0; i < options.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		option = document.createElement("option");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		internalText = ($A.util.isEmpty(options[i].label) ? options[i].value : options[i].label) || "";
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		option.label = options[i].label || internalText;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		if (!$A.util.isUndefined(options[i].value)) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			option.value = options[i].value;
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			$A.warning("Option at index " + i + " in select component " + cmp.getGlobalId() + " has an undefined value.");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		if (options[i]["class"]) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			option.setAttribute("class", options[i]["class"]);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		if (options[i].disabled) {
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    			option.disabled = "disabled";
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		option.appendChild(document.createTextNode(internalText));
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    		optFrag.appendChild(option);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelectHelper.js:    	select.appendChild(optFrag);
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:input" extensible="true" description="Represents a drop-down list with options.">
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <!-- A list of ruau.components.ui.InputOption -->
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:attribute access="GLOBAL" name="options" type="List" description="A list of ruau.components.ui.InputOption."/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:attribute name="name" type="String" description="The name of the component."/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:attribute access="GLOBAL" name="multiple" type="Boolean" default="false" description="Specifies whether the input is a multiple select. Default value is &#8220;false&#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <!-- The size attribute behaviors weird in Google Chrome and Safari. -->
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:attribute name="size" type="Integer" default="1" description="The number of options displayed at one time. Default value is &#8220;1&#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:handler name="change" value="{!v.value}" action="{!c.valueChange}"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <ruau:handler name="change" value="{!v.options}" action="{!c.optionsChange}"/>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    <select ruau:id="select"
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    	    class="{!v.class}"
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    	    name="{!v.name}"
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:    	    disabled="{!v.disabled}"
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:            aria-describedby="{!v.ariaDescribedBy}">
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:        <ruau:if isTrue="{!and(v.options.length eq 0, v.body.length gt 0)}">
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:        </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/inputSelect/inputSelect.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dblclick/dblclick.evt:<ruau:event type="COMPONENT" extends="ui:baseMouseEvent" support="GA" description="Indicates that a component has been double-clicked."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:<ruau:component extends="ui:inputText" extensible="true" support="BETA" description="An input field for entering the time.">
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:    <ruau:set attribute="type" value="time"/>
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTime.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:    var test = document.createElement("input");
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        // No native time picker support :(
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        // Create a fallback implementation here and return that.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        // then dynamically replace that <input> element.
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        var fallback = document.createElement("span");
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        fallback.appendChild(document.createTextNode("This browser does not support native time inputs.  TODO: create a better fallback than this."));
ruau/ruau-components/src/nAmE/components/ui/inputTime/inputTimeRenderer.js:        return fallback;
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" description="Displays a list of options based on the value attribute.">
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:    <span class="{!v.class}" ruau:id="span">{!v.value}</span>
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:     * Verify setting value attribute to '' blank.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:    testEmptyValue:{
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:        attributes : {value: ''},
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "When value is initialized to an empty string, nothing should be shown.");
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:     * positive test case: Verify outputSelect basic functionality.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:    testValue: {
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:        attributes : {value : 'holy guacamole!'},
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelectTest.js:            ruau.test.assertEquals('holy guacamole!', $A.test.getText(component.find('span').getElement()), "Select text not correct");
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputSelect/outputSelect.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:<ruau:event type="COMPONENT" support="PROTO" description="Indicates that the popup trigger is requesting to hide a target.">
ruau/ruau-components/src/nAmE/components/ui/popupTargetHide/popupTargetHide.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:<ruau:event type="COMPONENT" description="Indicate that an element or component gains focus.">
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:    <ruau:attribute name="attrs" type="Object" description="An object including all updated attributes."/>
ruau/ruau-components/src/nAmE/components/ui/updateAriaAttributes/updateAriaAttributes.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:<ruau:component extensible="true" support="GA" description="A facet of ui:dialog to hold any buttons displayed at the bottom of the dialog window. This component comes with two default buttons, 'OK' and 'Cancel'. You can use zero or more of the default buttons, and/or provide your own custom buttons in this component's body.">
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <!-- main attributes -->
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="defaultButtons" type="String" default="none" description="Which default buttons to include (if any). Valid values are 'confirm', 'cancel', 'both', or 'none'. Default is 'none'. If you choose to use default and custom buttons together, custom buttons will always appear between the default cancel and default confirm buttons."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <!-- css, label, and title hooks -->
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="confirmClass" type="String" description="Additional CSS classes to apply to the default confirm button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="confirmLabel" type="String" default="OK" description="The label of the default confirm button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="confirmTitle" type="String" default="Click to confirm" description="The title attribute of the default confirm button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="cancelClass" type="String" description="Additional CSS classes to apply to the default cancel button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="cancelLabel" type="String" default="Cancel" description="The label of the default cancel button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="cancelTitle" type="String" default="Click to cancel" description="The title attribute of the default cancel button."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <!-- private attributes -->
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:attribute name="_parentDialog" type="Object" description="PRIVATE ATTRIBUTE - DO NOT SET | Reference to the parent ui:dialog component."/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:if isTrue="{!v.defaultButtons == 'cancel' || v.defaultButtons == 'both'}">
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:        <ui:button ruau:id="cancelButton" class="{!v.cancelClass}" label="{!v.cancelLabel}" buttonTitle="{!v.cancelTitle}" press="{!c.cancel}"/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <!-- custom buttons go between 'cancel' and 'confirm', because 'cancel' buttons should always be on the far left
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:         and 'confirm' buttons should always be on the far right. any other action should be in the middle. -->
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    <ruau:if isTrue="{!v.defaultButtons == 'confirm' || v.defaultButtons == 'both'}">
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:        <ui:button ruau:id="confirmButton" class="{!v.confirmClass}" label="{!v.confirmLabel}" buttonTitle="{!v.confirmTitle}" press="{!c.confirm}"/>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtons.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    testDialogButtonsConfirm:{
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:        attributes : {defaultButtons:"confirm"},
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var conf = cmp.find("confirmButton");  
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    		$A.test.assertDefined(conf, "defaultButtons attribute is set to confirm, but does not acknowledge it by showing the confrimButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    testDialogButtonsCancel:{
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	attributes : {defaultButtons:"cancel"},
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var can = cmp.find("cancelButton");  
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        $A.test.assertDefined(can, "defaultButtons attribute is set to cancel, but does not acknowledge it by showing the cancelButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    testDialogButtonsBoth:{
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	attributes : {defaultButtons:"both"},
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var conf = cmp.find("confirmButton");    
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var can = cmp.find("cancelButton");  
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        $A.test.assertDefined(conf, "defaultButtons attribute is set to both, but does not show the confrimButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        $A.test.assertDefined(can, "defaultButtons attribute is set to both, but does not show the cancelButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    testDialogButtonsNone:{
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var conf = cmp.find("confirmButton");    
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:	        var can = cmp.find("cancelButton"); 
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    		ruau.test.assertTrue($A.util.isUndefinedOrNull(conf), "defaultButtons attribute is set to None, but is showing confrimButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsTest.js:    		ruau.test.assertTrue($A.util.isUndefinedOrNull(can), "defaultButtons attribute is set to None, but is showing cancelButton");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:     * Fires the ui:closeDialog event.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:     * @param {Ruue.Component} cmp the ui:dialogComponent
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:     * @param {Boolean} confirmClicked if the 'confirm' or 'cancel' button was clicked
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:    confirmOrCancel : function(dialog, confirmClicked) {
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:        var closeEvent = $A.get("e.ui:closeDialog");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:        closeEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsHelper.js:            dialog : dialog,
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * Validates the "defaultButtons" attribute.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:        var choice = cmp.get("v.defaultButtons");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:        if (choice !== "cancel" && choice !== "confirm" && choice !== "none" && choice !== "both") {
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:            $A.error("The 'defaultButtons' attribute of a ui:dialogButtons " +
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:                     "component must be one of the following case-sensitive " +
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:                     "values: cancel, confirm, both, none");
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * Handles the click of the default cancel button of the dialog. Fires the
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * application-level event ui:closeDialog, setting the 'confirmClicked'
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * attribute to false.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:    cancel : function(cmp, evt, hlp) {
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:        hlp.confirmOrCancel(cmp.get("v._parentDialog"), false);
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * Handles the click of default confirm button of the dialog. Fires the
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * application-level event ui:closeDialog, setting the 'confirmClicked'
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:     * attribute to true.
ruau/ruau-components/src/nAmE/components/ui/dialogButtons/dialogButtonsController.js:        hlp.confirmOrCancel(cmp.get("v._parentDialog"), true);
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/keyup/keyup.evt:<ruau:event type="COMPONENT" extends="ui:baseKeyboardEvent" support="GA" description="Indicates that the user has released a keyboard key."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:<ruau:event access="GLOBAL" support="GA" type="COMPONENT" description="Indicates that the user selects a menu item inside a menu component.">
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    <ruau:attribute access="GLOBAL" name="selectedItem" type="Ruue.Component[]" description="The menu item which is selected."/>
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    <ruau:attribute access="GLOBAL" name="hideMenu" type="Boolean" description="Hide menu if set to true."/>
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    <ruau:attribute access="GLOBAL" name="deselectSiblings" type="Boolean" description="Deselect the siblings of the currently selected menu item."/>
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:    <ruau:attribute access="GLOBAL" name="focusTrigger" type="Boolean" description="Set focus to menuTrigger."/>
ruau/ruau-components/src/nAmE/components/ui/menuSelect/menuSelect.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        var ret = this.superRender();
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        var element = cmp.find("span").getElement();
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        var delimiter = cmp.get("v.delimiter");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        var value = cmp.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        if($A.util.isArray(value)){
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:            value = value.join(delimiter);
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        	element.textContent = value;
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectRenderer.js:        	element.innerText = value;
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:     * Verify setting value attribute to '' blank.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:    testEmptyValue:{
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:        attributes : {value: ''},
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:            ruau.test.assertEquals('', $A.test.getText(component.find('span').getElement()), "When value is initialized to an empty string, nothing should be shown.");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:        attributes : {value: 'foo'},
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelectTest.js:            ruau.test.assertEquals('foo', $A.test.getText(component.find('span').getElement()), "Multiselect failed to display a single entry.");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" description="Displays multiple values from a list of options.">
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    <ruau:attribute name="value" type="String[]" required="true" description="An array of string values representing the selected options."/>
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    <ruau:attribute name="delimiter" type="String" default="; " description="The symbol or character used to separate the selected options. Default value is &#8220;; &#8221;."/>
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:    <span ruau:id='span' class="{!v.class}"></span>
ruau/ruau-components/src/nAmE/components/ui/outputMultiSelect/outputMultiSelect.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:	handleShowDatePicker: function (cmp, evt) {
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		var datePicker = cmp.find('datePicker'),
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:			el = datePicker.getElement(),
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:			params = evt.getParams(),
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:			box = params.element.getBoundingClientRect(),
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		// Position datePicker.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		// Using scrollTop & scrollLeft for IE support; avoid window.scrollY & window.scrollX.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		// Keep reference to onselected callback.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		cmp._onselected = params.onselected;
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		// Set value and show datePicker.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		datePicker.set('v.value', params.value);
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		datePicker.set('v.visible', true);
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:	handleDateSelected: function (cmp, evt) {
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		var selected = cmp._onselected;
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		// Invoke onselected if it's a function; otherwise, assume Ruue.Action.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:			selected.call({}, evt);
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:		else if (selected.ruauType === 'Action') {
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerController.js:			selected.runDeprecated(evt);
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:<ruau:component description="Represents a date picker manager that renders a single date picker for multiple date input components.">
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:	<ruau:handler event="ui:showDatePicker" action="{!c.handleShowDatePicker}"/>
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:	<ui:datePicker ruau:id="datePicker" managed="true" selectDate="{!c.handleDateSelected}"/>
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManager.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js:		var body = this.superRender();
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js:		// Append datePicker directly to the body. 
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js:		// This allows the absolute positions to be calculated appropriately.
ruau/ruau-components/src/nAmE/components/ui/datePickerManager/datePickerManagerRenderer.js:		document.body.appendChild(body[0]);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.css:.uiInputTextArea.noresize{
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting value.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testValue: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {value: "Initial value"},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertEquals("Initial value", component.getElement().value, "Textarea value not correctly initialized.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            component.set("v.value", "Changed value");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertEquals("Changed value", component.getElement().value, "Textarea value not correctly changed.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting disabled attribute to true, then switching to false.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {disabled: true},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertTrue(component.getElement().disabled, "Textarea not correctly disabled");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            component.set("v.disabled", false);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertFalse(component.getElement().disabled, "Textarea disabled attribute not correct after switching.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify not setting disabled attribute to false, then switching to true.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testNotDisabled: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {disabled: false},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertFalse(component.getElement().disabled, "Textarea not correctly enabled");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            component.set("v.disabled", true);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertTrue(component.getElement().disabled, "Textarea disabled attribute not correct after switching.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting readonly attribute to true, then switching to false.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testReadonly: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {readonly: 'true'},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertTrue(component.getElement().readOnly, "Textarea readonly attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            component.set("v.readonly", false);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertFalse(component.getElement().readOnly, "Textarea readonly attribute not correct after switching.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting readonly attribute to false, then switching to true.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testNotReadonly: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {readonly: 'false'},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertFalse(component.getElement().readOnly, "Textarea readonly attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            component.set("v.readonly", true);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertTrue(component.getElement().readOnly, "Textarea readonly attribute not correct after switching.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting rows attribute.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {rows: "15"},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertEquals(15, component.getElement().rows, "Textarea rows attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting columns attribute.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {cols: "15"},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            ruau.test.assertEquals(15, component.getElement().cols, "Textarea cols attribute not correct");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Verify setting resizable attribute to true, then switching to false.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:     * Do not run in IE7 because hasAttribute() support is IE8+
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:    testResizable: {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        attributes : {resizable: true},
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        doNotWrapInRuueRun : true,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        	var textarea = document.createElement('textarea');
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        	if (textarea.hasAttribute("resizable")) {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:        		// resizable is supported
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:            	ruau.test.assertEquals('both', $A.util.style.getCSSProperty(component.getElement(),'resize'), "Textarea not correctly resizable");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:                component.set("v.resizable", false);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaTest.js:                ruau.test.assertEquals('none', $A.util.style.getCSSProperty(component.getElement(),'resize'), "Textarea resizable attribute not correct after switching.");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:     * Set value to (html) textarea element.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:    setDomElementValue : function (component) {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:        var textAreaCmp = component.find("textAreaElem");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:        var elem = textAreaCmp ? textAreaCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:            var value = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:            if ($A.util.isUndefinedOrNull(value)) {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:                elem.value = "";
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:                elem.value = value;
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:                // carriage returns are added for new lines to match form encoded textarea behavior
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:                var carriageReturnValue = value.replace(/(\r\n)|\n/g,'\r\n');
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaHelper.js:                component.set("v.value",carriageReturnValue,true);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js:        var ret = this.superRender();
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaRenderer.js:        helper.setDomElementValue(component);
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:<ruau:component access="GLOBAL" support="GA" extends="ui:input" extensible="true"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    description="An HTML textarea element that can be editable or read-only. Scroll bars may not appear on Chrome browsers in Android devices, but you can select focus in the textarea to activate scrolling.">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="rows" type="Integer" default="2" description="The height of the text area, which is defined by the number of rows to display at a time. Default value is &#8220;2&#8221;." />
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="cols" type="Integer" default="20" description="The width of the text area, which is defined by the number of characters to display in a single row at a time. Default value is &#8220;20&#8221;." />
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="readonly" type="Boolean" default="false" description="Specifies whether the text area should be rendered as read-only. Default value is &#8220;false&#8221;." />
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="placeholder" type="String" default="" description="The text that is displayed by default."/>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="resizable" type="Boolean" default="true" description="Specifies whether or not the textarea should be resizable.  Defaults to true."/>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:attribute access="GLOBAL" name="maxlength" type="Integer" description="The maximum number of characters that can be typed into the input field. Corresponds to the maxlength attribute of the rendered HTML textarea element."/>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:handler name="change" value="{!v.value}" action="{!c.valueChange}"/>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    <ruau:renderif isTrue="{!v.body.length == 0}">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:        <textarea ruau:id="textAreaElem"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            class="{!v.class+(v.resizable?'':' noresize')}"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            disabled="{!v.disabled}"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            readonly="{!v.readonly}"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            maxlength="{!v.maxlength}"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            placeholder="{!v.placeholder}"
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:            aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:        <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:        </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:    </ruau:renderif>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:			A <code>ui:inputTextArea</code> component represents a multi-line text input control, which is rendered as an HTML <code>textarea</code> tag.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:			To render the output from a <code>ui:inputTextArea</code> component, use the <code>ui:outputTextArea</code> component.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:		<p>This is a basic set up of a <code>ui:inputTextArea</code> component.</p>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:		<pre>&lt;ui:inputTextArea ruau:id="comments" label="Comments" value="My comments" rows="5"/></pre>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:		<p>This example results in the following HTML.</p>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:<pre>&lt;div class="uiInput uiInputTextArea">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    &lt;label class="uiLabel-left uiLabel">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:        &lt;span>Comments&lt;/span>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    &lt;/label>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    &lt;textarea cols="20" rows="5" aria-describedby placeholder>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    &lt;/textarea>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:		<ruau:example name="inputTextExample" ref="uiExamples:inputExample" label="Using ui:inputTextArea">
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:    	<p>This example shows a <code>ui:inputTextArea</code> component and a corresponding <code>ui:outputTextArea</code> component for text rendering.</p>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextArea.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js:    valueChange: function(cmp, evt, helper) {
ruau/ruau-components/src/nAmE/components/ui/inputTextArea/inputTextAreaController.js:        helper.setDomElementValue(cmp);
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/press/press.evt:<ruau:event type="COMPONENT" extends="ui:baseDOMEvent" support="GA" description="Indicates that the component has been pressed."/>
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:<ruau:event type="COMPONENT" support="BETA" description="Event to trigger scroller scrolling">
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:	<ruau:attribute name="destination" type="String" description="Destination of scrolling. Options are top|bottom|left|right|custom"/>
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:	<ruau:attribute name="xcoord" type="Integer" description="X coordinate of custom scrolling"/>
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:	<ruau:attribute name="ycoord" type="Integer" description="Y coordinate of custom scrolling"/>
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:	<ruau:attribute name="time" type="Integer" default="0" description="Time (in milliseconds) to get to destination"/>
ruau/ruau-components/src/nAmE/components/ui/scrollTo/scrollTo.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:<ruau:interface support="GA" description="The standard interface for sorting components.">
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    <ruau:attribute name="sortBy" type="String"        description="The name of the field or term on which to sort."/>
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:    <ruau:attribute name="sortDirection" type="String" description="The direction in which to sort."/>
ruau/ruau-components/src/nAmE/components/ui/sortingInterface/sortingInterface.intf:</ruau:interface>
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:<ruau:event type="APPLICATION">
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    <ruau:attribute name="instance" type="Ruue.Component[]" description="The panel instance to be destroyed."/>
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:    <ruau:attribute name="onDestroy" type="Object" description="Callback function that will be called once the panel has been destroyed."/>
ruau/ruau-components/src/nAmE/components/ui/hidePanel/hidePanel.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/keydown/keydown.evt:<ruau:event type="COMPONENT" extends="ui:baseKeyboardEvent" support="GA" description="Indicates that the user has pressed and released a keyboard key."></ruau:event>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    MonthLabels: [{
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "January",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Jan"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "February",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Feb"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "March",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Mar"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "April",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Apr"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "May",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "May"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "June",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Jun"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "July",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Jul"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "August",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Aug"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "September",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Sep"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "October",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Oct"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "November",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Nov"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        fullName: "December",
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        shortName: "Dec"
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    attachToDocumentBody: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var body = document.getElementsByTagName("body")[0];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var elem = component.getElement();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        body.appendChild(elem);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    focusDate: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var e = grid.get("e.focus");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var helper = this;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var f = function(event) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                // ignore gestures/swipes; only run the click handler if it's a click or tap
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var clickEndEvent;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var touchIdFound = false;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    for (var i = 0; i < event.changedTouches.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        clickEndEvent = event.changedTouches[i];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        if (clickEndEvent.identifier === component._onStartId) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                            break;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var startX = component._onStartX, startY = component._onStartY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var endX = clickEndEvent.clientX, endY = clickEndEvent.clientY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                if (Math.abs(endX - startX) > 0 || Math.abs(endY - startY) > 0) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                if (!helper.isElementInComponent(component, event.target)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    //Since we are no longer going into the rerender function, updateGlobalEventListeners does not get called and the listeners will never get turned off
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    concreteCmp._clickStart.setEnabled(false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    concreteCmp._clickEnd.setEnabled(false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var divCmp = component.find("datePicker");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        var elem = divCmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        $A.util.removeClass(elem, "visible");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        // create the cache
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if ($A.util.isUndefined(this.getOnClickEventProp.cache)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            this.getOnClickEventProp.cache = {};
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        // check the cache
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var cached = this.getOnClickEventProp.cache[prop];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!$A.util.isUndefined(cached)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            return cached;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        // fill the cache
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        this.getOnClickEventProp.cache["isTouchDevice"] = $A.util.supportsTouchEvents();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (this.getOnClickEventProp.cache["isTouchDevice"]) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        	if (window["navigator"]["pointerEnabled"]) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        		this.getOnClickEventProp.cache["onClickStartEvent"] = "pointerdown";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickEventProp.cache["onClickEndEvent"] = "pointerup";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            } else if (window["navigator"]["msPointerEnabled"]) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickEventProp.cache["onClickStartEvent"] = "MSPointerDown";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickEventProp.cache["onClickEndEvent"] = "MSPointerUp";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickEventProp.cache["onClickStartEvent"] = "touchstart";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickEventProp.cache["onClickEndEvent"] = "touchend";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            this.getOnClickEventProp.cache["onClickStartEvent"] = "mousedown";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            this.getOnClickEventProp.cache["onClickEndEvent"] = "mouseup";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        return this.getOnClickEventProp.cache[prop];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    getOnClickStartFunction: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if ($A.util.isUndefined(component._onClickStartFunc)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var helper = this;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var f = function(event) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var touch = event.changedTouches[0];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    // record the ID to ensure it's the same finger on a multi-touch device
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component._onStartId = touch.identifier;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component._onStartX = touch.clientX;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component._onStartY = touch.clientY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component._onStartX = event.clientX;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    component._onStartY = event.clientY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            component._onClickStartFunc = f;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        return component._onClickStartFunc;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    goToNextYear: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var e = grid.get("e.updateCalendar");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            e.setParams({monthChange: 0, yearChange: 1, setFocus: false});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    goToPrevYear: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:	    var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:	    var e = grid.get("e.updateCalendar");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:	        e.setParams({monthChange: 0, yearChange: -1, setFocus: false});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    handleESCKey: function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var keyCode = event.keyCode;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            component.setValue("{!v.visible}", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    isElementInComponent : function(component, targetElem) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var componentElements = component.getElements();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        //go up the chain until it hits either a sibling or the root
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var currentNode = targetElem;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            for (var index = 0; index < componentElements.length ; index++) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            currentNode = currentNode.parentNode;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        return false;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    localizeToday: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var todayCmp = component.find("today");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!todayCmp) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var todayLabel = $A.get("$Locale.labelForToday");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!todayLabel) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            todayLabel = "Today";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        todayCmp.set("v.label", todayLabel);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    getNormalizedLang: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var ret = 'en';
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var lang = [];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var token = "";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var langLocale = $A.get("$Locale.langLocale");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        //var langLocale = component.get("m.langLocale");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (langLocale) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var index = langLocale.indexOf("_");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                token = langLocale.substring(0, index);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                langLocale = langLocale.substring(index + 1);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                lang.push(token.toLowerCase());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                index = langLocale.indexOf("_");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            langLocale = langLocale.substring(index + 1);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            if (!$A.util.isEmpty(langLocale)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                lang.push(langLocale.toLowerCase());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            lang.push("en");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (lang[0] === "zh") {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            ret = lang[0] + "-" + lang[1];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            ret = lang[0];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    handleWinResize: function(component, e) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!component || !component.isValid()) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var elem = component.getElement();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var origWinHeight = component._windowSize.height;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var currWinHeight = $A.util.getWindowSize().height;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var elemRect = elem.getBoundingClientRect();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            if (currWinHeight < origWinHeight - 20) { // soft keyboard up
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var divCmp = component.find("datePicker");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var elem = divCmp ? divCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var visible = component.get("v.visible");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var viewPort = $A.util.getWindowSize();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var isPhone = $A.get("$Browser.isPhone");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.attachToDocumentBody(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var scrollerDivCmp = component.find("scroller");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var scrollerElem = scrollerDivCmp ? scrollerDivCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                if (scrollerElem) { // Set scroller div height to make it scrollable.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var isAndroid = $A.get("$Browser.isAndroid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var referenceElem = component.getConcreteComponent().get("v.referenceElement");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    $A.util.attachToDocumentBody(component.getElement());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var elemRect = elem.getBoundingClientRect();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var referenceElemRect = referenceElem.getBoundingClientRect();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var viewPort = $A.util.getWindowSize();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    // Vertical alignment
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    // getBoundingClientRect method does not return height and width in IE7 and Ie8
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var height = typeof elemRect.height != 'undefined' ? elemRect.height : elemRect.bottom - elemRect.top;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var scrollY = document.documentElement.scrollTop;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    if ((viewPort.height - referenceElemRect.bottom) < height) { // no enough space below
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        if (referenceElemRect.top < height) { // no enough space above either. Put it in the middle then
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        } else { // put it above
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    // Horizontal alignment
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    // getBoundingClientRect method does not return height and width in IE7 and Ie8
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var width = typeof elemRect.width != 'undefined' ? elemRect.width : elemRect.right - elemRect.left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    //attaching to the body causes the date to lose focus so we need to add the focus back
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    this.focusDate(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var elemRect = elem.getBoundingClientRect();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    if (elemRect.bottom > viewPort.height) { // no enough space below
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        elem.style.top = 0 - (elemRect.bottom - viewPort.height) + "px"; // Move it up a bit
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                        elem.style.top = "auto";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    refreshYearSelection: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var minY = component.get("v.minYear");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            minY = (new Date()).getFullYear() - 100;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var maxY = component.get("v.maxYear");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!maxY) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            maxY = (new Date()).getFullYear() + 30;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var yearTitleCmp = component.find("yearTitle");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var selectElem = yearTitleCmp ? yearTitleCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            for (var i = minY; i <= maxY; i++) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    setGridInitialValue: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var initialDate = new Date();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var value = component.get("v.value");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!$A.util.isUndefinedOrNull(value) && !$A.util.isEmpty(value)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var d = moment(value, "YYYY-MM-DD");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            initialDate = d.toDate();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            grid.set("v.selectedDate", initialDate.getFullYear() + "-" + (initialDate.getMonth() + 1) + "-" + initialDate.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            grid.set("v.date", initialDate.getDate());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            grid.set("v.month", initialDate.getMonth());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            grid.set("v.year", initialDate.getFullYear());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        // set initial value to time picker if hasTime is true
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var hasTime = $A.util.getBooleanValue(component.get("v.hasTime"));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (hasTime) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var timePickerCmp = component.find("time");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                timePickerCmp.set("v.is24HourFormat", component.get("v.is24HourFormat"));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    updateGlobalEventListeners: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var visible = concreteCmp.get("v.visible");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (!concreteCmp._clickStart) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            concreteCmp._clickStart = concreteCmp.addDocumentLevelHandler(this.getOnClickEventProp("onClickStartEvent"),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                this.getOnClickStartFunction(component), visible);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            concreteCmp._clickEnd = concreteCmp.addDocumentLevelHandler(this.getOnClickEventProp("onClickEndEvent"),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            concreteCmp._clickStart.setEnabled(visible);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            concreteCmp._clickEnd.setEnabled(visible);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    updateMonthYear: function(component, value) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var isDesktop = $A.get("$Browser.formFactor") == "DESKTOP";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            this.updateMobileMonthYear(component, value);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var titleCmp = component.find("calTitle");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var elem = titleCmp.getElement();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var m = grid.get("v.month");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var y = grid.get("v.year");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var monthLabels = $A.get("$Locale.nameOfMonths");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                    var title = monthLabels ? monthLabels[m].fullName + " " + y : this.MonthLabels[m].fullName + " " + y;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    updateMobileMonthYear: function(component, value) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var m = grid.get("v.month");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var y = grid.get("v.year");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var monthTitleCmp = component.find("monthTitle");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var monthLabels = $A.get("$Locale.nameOfMonths");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                monthTitleCmp.set("v.value", monthLabels ? monthLabels[m].fullName : this.MonthLabels[m].fullName);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var yearTitleCmp = component.find("yearTitle");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var selectElem = yearTitleCmp ? yearTitleCmp.getElement() : null;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                selectElem.value = y + "";
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:    yearChange: function(component) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        var yearCmp = component.find("yearTitle");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:        if (grid && yearCmp) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:            var e = grid.get("e.updateCalendar");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var y = parseInt(grid.get("v.year"),10);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                var selectedYear = parseInt(yearCmp.getElement().value,10);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerHelper.js:                e.setParams({monthChange: 0, yearChange: selectedYear - y, setFocus: false});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        var visible = component.get("v.visible"),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            managed = component.get('v.managed');
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            if (component.get("v._yearListInitialized") === false) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:                helper.refreshYearSelection(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:                component.set("v._yearListInitialized", true);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.setGridInitialValue(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.updateMonthYear(component, component.get("v.value"));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.updateGlobalEventListeners(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        // If this picker is not 'managed' (consumed by ui:dataPickerManager),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        // then positioning should be taken into account.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        if (visible === true && !managed) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        var visible = component.get("v.visible"),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            managed = component.get('v.managed');
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            if (component.get("v._yearListInitialized") === false) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:                helper.refreshYearSelection(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:                component.set("v._yearListInitialized", true);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.setGridInitialValue(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.updateMonthYear(component, component.get("v.value"));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            helper.updateGlobalEventListeners(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        // If this picker is not 'managed' (consumed by ui:dataPickerManager),
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        // then positioning should be taken into account.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        if (visible === true && !managed) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:        var isAndroid = $A.get("$Browser.isAndroid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:            var f = function(e) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerRenderer.js:                helper.handleWinResize(component, e);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:<ruau:documentation> 
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:			Date pickers in a component can be managed or unmanaged. By default, date pickers are unmanaged, which means that each input field is rendered with its own date picker.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:			To improve loading time if you have multiple date pickers in a component, you can render only one date picker in the DOM. To do this, include one instance of <code>ui:datePickerManager</code> in the component.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:			This sets the <code>managed</code> attribute on the date picker to <code>true</code>. When using managed date pickers, set <code>displayDatePicker</code> to <code>true</code> and <code>loadDatePicker</code> to <code>false</code>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:			on the component that extends <code>ui:inputDate</code>. For example, multiple instances of <code>ui:inputDateTrigger</code> is used with the date picker manager to render a single date picker in the DOM.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:&lt;ruau:component extends="ui:inputDate">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    &lt;ruau:set attribute="displayDatePicker" value="true"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    &lt;ruau:set attribute="loadDatePicker" value="false"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:&lt;/ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:		<ruau:example name="datePicker" ref="uiExamples:datePicker" label="Using the Date Picker">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:    	<p>This example shows managed date pickers. Only one instance of <code>ui:datePickerManager</code> is required to manage date pickers on a component.</p>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:	</ruau:example>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    cancel: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    closeOnTab: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.handleESCKey(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var keyCode = event.keyCode;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var shiftKey = event.shiftKey;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        if (keyCode == 9 && shiftKey == true) { // Tab + shift
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.localizeToday(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    focusDateOnTab: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.handleESCKey(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var keyCode = event.keyCode;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var shiftKey = event.shiftKey;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        if (keyCode == 9 && shiftKey != true) { // Tab
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            helper.focusDate(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:	goToPrevYear: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:	    helper.goToPrevYear(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var e = grid.get("e.updateCalendar");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            e.setParams({monthChange: -1, yearChange: 0, setFocus: false});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var grid = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var e = grid.get("e.updateCalendar");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            e.setParams({monthChange: 1, yearChange: 0, setFocus: false});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    goToNextYear: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.goToNextYear(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    handleKeydown: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.handleESCKey(component, event);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    handleTabToday: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var domEvent = event.getParam("domEvent");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            var keycode = domEvent.keyCode;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                if (domEvent.shiftKey == true) { // Tab + shift
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                    domEvent.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                    helper.focusDate(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                } else { // Tab
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                    component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    handleTouchEnd: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var startX = component._onTouchStartX;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var endX = component._onTouchEndX;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var startY = component._onTouchStartY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var endY = component._onTouchEndY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        if (Math.abs(startX - endX) > 10) { // left/right swipe
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        if ((endY - startY) > 10) { // swipe down
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            helper.goToNextYear(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        } else if ((startY - endY) > 10) { // swipe up
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            helper.goToPrevYear(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    handleTouchMove: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        event.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        event.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var touch;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var touchIdFound = false;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        for (var i = 0; i < event.changedTouches.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            touch = event.changedTouches[i];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            if (touch.identifier === component._onTouchStartId) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                break;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            component._onTouchEndY = touch.clientY; // On Android (Samsung GT), we can't get the position of touchend,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                                                    // so we have to record it here.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    handleTouchStart: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var touch = event.changedTouches[0];
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        // record the ID to ensure it's the same finger on a multi-touch device
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component._onTouchStartId = touch.identifier;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component._onTouchStartX = touch.clientX;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component._onTouchStartY = touch.clientY;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    selectDate: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var selectedDate = event.getParam("value");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var selectDateEvent = component.getEvent("selectDate");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        selectDateEvent.setParams({"value": selectedDate});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        selectDateEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    selectToday: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var mDate = moment();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var selectDateEvent = component.getEvent("selectDate");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        selectDateEvent.setParams({"value": mDate.format("YYYY-MM-DD")});
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        selectDateEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var setDateTimeEvent = component.getEvent("selectDate");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        if (setDateTimeEvent) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            // Get date value
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            var gridCmp = component.find("grid");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            var date = gridCmp.get("v.year") + "-" + (gridCmp.get("v.month") + 1) + "-" + gridCmp.get("v.date");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            // Get time value
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            var timeCmp = component.find("time");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            if (!timeCmp || ($A.util.getBooleanValue(timeCmp.get("v.isValid")) === false)) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            setDateTimeEvent.setParams({
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:                "value": date,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:            setDateTimeEvent.fire();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        component.set("v.visible", false);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:	updateCalendarTitle: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        var date = new Date();
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        date.setFullYear(event.getParam("year"), event.getParam("month"));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.updateMonthYear(component, date.getTime());
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:    yearChange: function(component, event, helper) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePickerController.js:        helper.yearChange(component);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:<ruau:component extensible="true" implements="ui:visible" description="Represents a date picker, which can be used in input components such as ui:inputDate and ui:inputDateTime.">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="hasTime" type="Boolean" default="false" description="Indicate if the parent datePicker component supports time picker."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="hours" type="Integer" description="The hour value of a date object, which is always in 24 hour format."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="is24HourFormat" type="Boolean" default="true" description="Indicate if it is set to 24 hour or 12-hour with am/pm."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="maxYear" type="Integer" description="The maximal year for year selection. Only on mobile. The default is the current year plus 30."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="minYear" type="Integer" description="The minimum year for year selection. Only on mobile. The default is the current year minus 100."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="minutes" type="Integer" description="The minute value of a date object."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="value" type="String" description="A date string corresponding to a calendar day in the format yyyy-mm-dd."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="visible" type="Boolean" default="false" description="Indicates if the date picker is displayed. Defaults to false, which hides the date picker."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="_yearListInitialized" type="Boolean" default="false" description="Indicates if the year list is initialized or not."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="managed" type="Boolean" default="false" description="Indicates whether this component is managed by ui:datePickerManager. Defaults to 'false'."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:attribute name="referenceElement" type="Object" description="The reference node which this datePicker should be positioned to. Usually it is a inputDate element." />
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:registerevent name="selectDate" type="ui:selectDate" description="The event fired when a date is selected."/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    <div ruau:id="datePicker" class="{!v.class + (v.visible == true ? ' visible' : '') + ($Browser.isPhone == true ? ' phone' : '')}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:        <div class="scroller" ruau:id="scroller">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            <ruau:if isTrue="{!v.hasTime}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <div class="headerBar">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <a ruau:id="cancel" onclick="{!c.cancel}" class="calCancel button" href="javascript:void(0);">Cancel</a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <a ruau:id="set" onclick="{!c.set}" class="calSet button" href="javascript:void(0);">Set</a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            <div class="dateBar">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <div class="prevLinks">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <ruau:if isTrue="{!!$Browser.isPhone &amp;&amp; !$Browser.isTablet}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <a ruau:id="prevYear" class="navLink prevYear" title="Go to previous year" onclick="{!c.goToPrevYear}" onkeydown="{!c.closeOnTab}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                            <span class="assistiveText">Go to previous year</span>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        </a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <a ruau:id="prevMonth" class="navLink prevMonth" title="Go to previous month" onclick="{!c.goToPrevMonth}" onkeydown="{!c.handleKeydown}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <span class="assistiveText">Go to previous month</span>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    </a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <div class="nextLinks">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <a ruau:id="nextMonth" class="navLink nextMonth" title="Go to next month" onclick="{!c.goToNextMonth}" onkeydown="{!c.handleKeydown}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <span class="assistiveText">Go to next month</span>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    </a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <ruau:if isTrue="{!!$Browser.isPhone &amp;&amp; !$Browser.isTablet}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <a ruau:id="nextYear" class="navLink nextYear" title="Go to next year" onclick="{!c.goToNextYear}" onkeydown="{!c.focusDateOnTab}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                            <span class="assistiveText">Go to next year</span>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        </a>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <ruau:if isTrue="{!$Browser.formFactor != 'DESKTOP'}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <h1 aria-live="assertive" aria-atomic="true" class="monthYear" ruau:id="calTitle">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <ui:outputText ruau:id="monthTitle" value=""/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <label>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                            <span class="assistiveText">year</span>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                            <select ruau:id="yearTitle" onchange="{!c.yearChange}"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        </label>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <h1 aria-live="assertive" aria-atomic="true" class="monthYear" ruau:id="calTitle"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            <ui:datePickerGrid ruau:id="grid" hasTime ="{!v.hasTime}" hide="{!c.hide}" selectDate="{!c.selectDate}" updateCalendarTitle="{!c.updateCalendarTitle}"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            <ruau:if isTrue="{!v.hasTime}">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <div class="timeBar">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <ui:timePicker ruau:id="time" is24HourFormat="{!v.is24HourFormat}"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                <ruau:set attribute="else">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                    <div class="buttonBar">
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                        <ui:button ruau:id="today" press="{!c.selectToday}" keydown="{!c.handleTabToday}" class="calToday" label="Today"/>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:                </ruau:set>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:            </ruau:if>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:    </div><!-- datePicker --> 
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.cmp:</ruau:component>
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-color: #FFF;   
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    border-radius: 8px 8px 0 0;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    display: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    position: absolute;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    box-shadow: 0 2px 8px rgba(0, 0, 0, .25);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    overflow-y: auto;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    display: block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .headerBar {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-color: #6495ED;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background: -webkit-linear-gradient(#2a93d5,#107abb);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background: linear-gradient(#2a93d5,#107abb);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	box-shadow: 0 1px 3px rgba(0,0,0,.2),inset 0 1px 0 rgba(255,255,255,.21);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    border-radius: 8px 8px 0 0;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    font-family: 'ProximaNovaSoft-Regular';
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .headerBar a {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    margin-top: 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    padding: 0 14px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .headerBar .calCancel {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    float: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    margin-left: 10px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .headerBar .calSet {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    float: right;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    margin-right: 10px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: right;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .headerBar a.button {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	box-shadow: 0 1px 0 rgba(0, 0, 0, 0.05), inset 0 1px rgba(255, 255, 255, 0.21);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	border-radius: 5px;	
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-color: #2891d3;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#2891d3), to(#1983c5));
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: -webkit-linear-gradient(top, #2891d3, #1983c5);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: -moz-linear-gradient(top, #2891d3, #1983c5);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: -ms-linear-gradient(top, #2891d3, #1983c5);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: -o-linear-gradient(top, #2891d3, #1983c5);	
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-color: #f0f1f2;        
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: center;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    padding: 14px 14px 7px 14px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS a {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-decoration: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .prevLinks {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    float: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .nextLinks {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    float: right;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: right;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background: url('/ruauFW/resources/ruau/images/bg-arrows.png') no-repeat 0 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    border: 1px solid transparent;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .navLink:hover {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-color: #E1E1E1;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 1), 0 2px 2px rgba(0, 0, 0, .25);
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .prevYear {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: 6px 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    margin-left: 5px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.prevYear:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.prevYear:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: 6px -23px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .prevMonth {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -26px 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.prevMonth:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.prevMonth:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -26px -23px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .nextMonth {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -66px 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.nextMonth:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.nextMonth:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -66px -23px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .nextYear {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -98px 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    margin-right: 5px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.nextYear:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .navLink.nextYear:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-position: -98px -23px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .monthYear, .THIS .dateBar .monthYear span {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	font-family: ProximaNovaSoft-Bold, Arial, sans-serif;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar select {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	font-family: ProximaNovaSoft-Bold, Arial, sans-serif;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	padding: 0 0 0 5px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	margin: 0;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	width: auto;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	vertical-align: baseline;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-color: #f0f1f2;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background-image: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	box-shadow: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	-moz-appearance: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	-webkit-appearance: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	-ms-appearance: none;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	appearance: none;	
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .dateBar .monthYear {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	font-family: ProximaNovaSoft-Bold, Arial, sans-serif;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .buttonBar {    
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-align: center;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    padding: 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .buttonBar .calToday {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	line-height: 24px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	background:transparent;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .buttonBar .calToday:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .buttonBar .calToday:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    text-decoration:underline;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:.THIS .timeBar {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	display:inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	text-align: center;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    background-color: #f0f1f2;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:@media only screen and (max-width: 999px) and (orientation: portrait) {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    .THIS .dateBar .navLink.prevMonth {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background: url('/ruauFW/resources/ruau/images/arrow-left.png') no-repeat;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background-size: 12px 14px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background-position: center;        
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink.nextMonth {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background: url('/ruauFW/resources/ruau/images/arrow-right.png') no-repeat;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background-size: 12px 14px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    background-position: center;        
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:		padding: 3px;	
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink.prevMonth:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink.prevMonth:focus,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink.nextMonth:hover,
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .dateBar .navLink.nextMonth:focus {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:		background-position: center;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	.THIS .navLink:hover {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:		border-color: transparent;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:	    box-shadow: none;	    
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    .THIS .headerBar .calCancel {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        float: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        margin-left: 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        text-align: left;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        line-height: 28px !important;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:    .THIS .headerBar .calSet {
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        display: inline-block;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        float: right;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        margin-right: 7px;
ruau/ruau-components/src/nAmE/components/ui/datePicker/datePicker.css:        text-align: right;
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:<ruau:event type="APPLICATION" support="BETA" description="Indicates that the size of one or more regions in the DOM have been changed and any components that need to recalculate dimension information should do so.">
ruau/ruau-components/src/nAmE/components/ui/updateSize/updateSize.evt:</ruau:event>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	<ruau:description>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	        <code>ui:scroller</code> expands vertically to fill the space available within its parent component. You can set the width, and enable or disable both vertical and horizontal scrolling.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	        Handle pull-to-refresh event in an action method. You can customize the status display for pull-to-refresh behavior, or accept the defaults.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	        The scroller listens to the <code>ui:updateSize</code> event, which automatically resizes the scroller view to fit new content during a refresh.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	        For large or dynamic data sets, you can embed menu and list components in the scroller and take advantage of its pull-to-refresh behavior to retrieve new data.
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:		<ruau:example name="scroller" ref="ruaudocs:demoScroller" label="Using ui:scroller">
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    	  <p>This example shows how to use the pull-to-refresh behavior on the scroller.</p>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	    </ruau:example>	
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:		<ruau:example name="listScroller" ref="ruaudocs:demoList" label="Embedding Lists in ui:scroller">
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:    	  <p>This example shows you can use a scroller to retrieve list data. To load new data, either pull to refresh or click the Show More button.</p>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:	    </ruau:example>
ruau/ruau-components/src/nAmE/components/ui/scroller/scroller.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * This method attach helper-functions:
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Those functions are referenced-copied in the component 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * so users can register a plugin.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    initialize: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            return helper.registerPlugin.apply(helper, arguments);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        component.getScrollerNamespace = function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            return helper.getScrollerNamespace();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        component.getScrollerInstance = function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            return helper.getScrollerInstance(this);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        component.isPluginRegistered = function (name) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            return helper.isPluginRegistered(name);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    isPluginRegistered: function (name) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        return !!this.getScrollerNamespace().plugins[name];
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    registerPlugin: function (name, constructor) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var NS      = this.getScrollerNamespace(),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (!plugins[name]) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            plugins[name] = constructor;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var sh = this.getScrollerNamespace().helpers;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var scrollerNamespace   = this.getScrollerNamespace(),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerHelpers     = scrollerNamespace.helpers,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerWrapperDOM  = this._getScrollerWrapper(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerOptions     = this._mapRuueScrollerOptions(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ScrollerConstructor = scrollerNamespace.constructor,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerInstance    = new ScrollerConstructor(scrollerWrapperDOM, mergedOptions);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._attachRuueEvents(component, scrollerInstance);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this.setScollerInstance(component, scrollerInstance);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    getScrollerInstance: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    setScollerInstance: function (component, scrollerInstance) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var helper = this;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        component._scroller = scrollerInstance;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            var scrollerNS = this.getScrollerNamespace(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                instances  = scrollerNS.instances || (scrollerNS.instances = {});
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            instances[component.getGlobalId()] = scrollerInstance;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    getScrollerNamespace: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (typeof window.__S === "undefined" || !window.__S.initialized) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this._bootstrapScroller();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            window.__S.initialized = true;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    handleScrollTo : function(component, event) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var scroller   = this.getScrollerInstance(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            isNative   = component.get('v.useNativeScroller'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper    = scroller.wrapper,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            params     = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            dest       = params.destination,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            time       = params.time,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            x          = params.xcoord || 0,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            y          = params.ycoord || 0;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (isNative) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                wrapper.scrollTop  = scroller.scrollVertical ? Math.abs(y) : wrapper.scrollTop;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                wrapper.scrollLeft = scroller.scrollVertical ? wrapper.scrollLeft : Math.abs(x) ;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (isNative) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                wrapper.scrollTop = 0;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (isNative) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                wrapper.scrollTop = scrollBody.offsetHeight - wrapper.offsetHeight;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    handleScrollBy: function (component, event) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var scroller = this.getScrollerInstance(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            params   = event.getParams(),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            time     = params.time,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            deltaX   = params.deltaX || 0,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            deltaY   = params.deltaY || 0;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        scroller.scrollTo(scroller.x + deltaX, scroller.y + deltaY, time);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    swapShowMore: function (cmp, newValue) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var scroller = this.getScrollerInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (scroller && scroller.togglePullToLoadMore) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scroller.togglePullToLoadMore(newValue);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    swapRefresh: function (cmp, newValue) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var scroller = this.getScrollerInstance(cmp);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scroller.togglePullToRefresh(newValue);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Receives a method and an array of arguments 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Returns a function binding the current context and concatenating the original args with the news ones returned
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var context = this, 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            xArgs   = Array.prototype.slice.call(arguments, 1);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            method.apply(context, xArgs.concat(Array.prototype.slice.call(arguments)));
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _getScrollerWrapper: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        return component.find('scrollWrapper').getElement();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var nativeScroller = component.get('v.useNativeScroller');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelPull     : nativeScroller ? component.get('v.pullToRefreshClick'): component.get("v.pullToRefreshPull"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelRelease  : component.get("v.pullToRefreshRelease"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelUpdate   : component.get("v.pullToRefreshUpdating"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelSubtitle : component.get("v.pullToRefreshSubtitle"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelError    : component.get("v.pullToRefreshError")
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _getPullToLoadMoreConfig: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var nativeScroller = component.get('v.useNativeScroller');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelPull     : nativeScroller ? component.get('v.pullToShowMoreClick') : component.get("v.pullToShowMorePull"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelRelease  : component.get("v.pullToShowMoreRelease"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelUpdate   : component.get("v.pullToShowMoreUpdating"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelSubtitle : component.get("v.pullToShowMoreSubtitle"),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            labelError    : component.get("v.pullToShowMoreError")
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _getInfiniteLoadingConfig: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var self               = this,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ruauDataProvider   = component.get('v.infiniteLoadingDataProvider'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            dataProviderBridge = function (callback) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                if (ruauDataProvider) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    ruauDataProvider.run(callback);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    callback({error:'Invalid Provider'});
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            threshold    : component.get('v.infiniteLoadingThreshold'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            dataProvider : dataProviderBridge
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var rawPlugins      = component.get('v.plugins') || '',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            plugins         = (rawPlugins && rawPlugins.split(',')) || [],
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollbars      = component.get('v.showScrollbars'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            snap            = component.get('v.snap'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoading = component.get('v.infiniteLoading');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // If the attributes are true add the core plugins to the scroller plugin array
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        scrollbars      && corePlugins.push('Indicators');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        snap            && corePlugins.push('Snap');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        infiniteLoading && corePlugins.push('InfiniteLoading');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        return corePlugins.concat(plugins);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _mapRuueScrollerOptions: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var device                = $A.get('$Browser'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            cssTransition         = component.get('v.useCSSTransition'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            canRefresh            = component.get('v.canRefresh'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            canShowMore           = component.get('v.canShowMore'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            useNativeScroller     = component.get('v.useNativeScroller'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            enabled               = component.get('v.enabled'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollbars            = component.get('v.showScrollbars'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            gpuOptimization       = component.get('v.gpuOptimization'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            // For now, default android and ios to use CSSTransitions
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            useCSSTransition      = typeof cssTransition === "boolean" ? cssTransition : (!gpuOptimization && (device.isIOS || device.isAndroid)),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            snap                  = component.get('v.snapType'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            bindToWrapper         = component.get('v.bindEventsToScroller'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ruauOnPullToRefresh   = component.get('v.onPullToRefresh'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ruauOnPullToLoadMore  = component.get('v.onPullToShowMore'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ruauInfiniteLoading   = component.get('v.infiniteLoadingDataProvider'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToRefresh         = canRefresh,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMore        = canShowMore,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoading       = ruauInfiniteLoading && component.get('v.infiniteLoading'),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMoreConfig  = this._getPullToLoadMoreConfig(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoadingConfig = this._getInfiniteLoadingConfig(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            enabled               : useNativeScroller ? false : enabled,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            useNativeScroller     : useNativeScroller,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollbars            : scrollbars,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            useCSSTransition      : useCSSTransition,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            bindToWrapper         : bindToWrapper,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            gpuOptimization       : gpuOptimization,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMore        : pullToLoadMore,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoading       : !!infiniteLoading,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            onPullToRefresh       : ruauOnPullToRefresh  && this._bind(this._bridgeScrollerCallback, component, ruauOnPullToRefresh),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            onPullToLoadMore      : ruauOnPullToLoadMore && this._bind(this._bridgeScrollerCallback, component, ruauOnPullToLoadMore),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMoreConfig  : pullToLoadMoreConfig,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoadingConfig : infiniteLoadingConfig,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _bridgeScrollerCallback: function (component, ruauAction, callback) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // Users of this component need to call the event/callback that gets passed
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // on to onPullToRefresh and onPullToRefresh with error or success arguments
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // for the scroller to update its 'loading' state.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ruauAction.run(function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                callback.apply(this, arguments);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _bridgeScrollerAction: function (component, scrollerInstance, actionName) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var attrActionName = 'on' + actionName.charAt(0).toUpperCase() + actionName.slice(1),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            action = component.get("v." + attrActionName);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (action) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerInstance.on(actionName, function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                action.run.apply(action, arguments);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _preventDefault: function (e) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        e.preventDefault();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _attachRuueEvents: function (component, scrollerInstance) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var events = [
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                'beforeScrollStart',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                'scrollStart',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            ], wrapper;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (component.get('v.preventDefaultOnMove')) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper = this._getScrollerWrapper(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper.addEventListener('touchmove', this._preventDefault, false);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (component.get('v.useNativeScroller')) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this._attachNativeScrollerEvents(component, scrollerInstance);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this._stopNativeDragging(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        for (var i = 0; i < events.length; i++) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this._bridgeScrollerAction(component, scrollerInstance, events[i]);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._captureClickEvents(component, scrollerInstance);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * If we use native scrolling pullToShowMore and pullToRefresh will render as part of the scroller
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * We need to attach the click events so we can trigger the same funcionality
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _attachNativeScrollerEvents: function (cmp, scrollerInstance) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var self             = this,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper          = scrollerInstance.wrapper,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToRefresh    = wrapper.getElementsByClassName('pullToRefresh')[0],
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMore   = wrapper.getElementsByClassName('pullToLoadMore')[0],
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            detectsOnMove    = browser.formFactor === 'DESKTOP' || browser.isWindowsPhone;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToRefresh.addEventListener('click', function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                scrollerInstance.triggerPTR();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            }, false);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (pullToLoadMore) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMore.addEventListener('click', function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                scrollerInstance.triggerPTL();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            }, false);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // iOS and Android does not fire scroll til the end. Desktop or windowsPhone does
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        // So switch the scroll action to fired based on this
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        wrapper.addEventListener('scroll', function (e) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            //scrollEndAction.run.apply(detectsOnMove ? scrollMoveAction : scrollEndAction, arguments);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            var eventName = detectsOnMove ? 'scrollMove' : 'scrollEnd',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                action    = detectsOnMove ? 'gestureMove': 'animationEnd',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                currentX  = -wrapper.scrollLeft,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                currentY  = -wrapper.scrollTop;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerInstance.x = currentX;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerInstance.y = currentY;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollerInstance._fire(eventName, action, currentX, currentY, e);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        }, false);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * @_stopNativeDraggin
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Preventsthe native dragging functionality of for desktop browsers.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Removes the undesired dragging effect if click happens within an anchor or li elements.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _stopNativeDragging: function (component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var wrapper = this._getScrollerWrapper(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        wrapper.ondragstart = function () { return false; }; //testing
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * @_captureClickEvents:
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Due to the way ruau handles click events (attaching the handler directly to the DOM element (no delegation mechanism))
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * We need to handle the click event in the capture face, and if the scroller didn't move, let  the event flow and let ruau handle the event.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Otherwise a click will be fired even when you have moved the scroller which presents a huge usability issue.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * This function will make the click pointers and touch events work properly across devices/platforms
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    _captureClickEvents: function (component, scroller) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var wrapper = this._getScrollerWrapper(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        wrapper.addEventListener('click', function (e) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                e.cancelBubble = true;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                e.stopPropagation();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    deactivate: function(component) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        var namespace = this.getScrollerNamespace(),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scroller  = this.getScrollerInstance(component),
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper   = this._getScrollerWrapper(component);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        if (component.get('v.preventDefaultOnMove')) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            wrapper.removeEventListener('touchmove', this._preventDefault, false);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        delete namespace.instances[component.getGlobalId()];
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:* IF YOU WANT TO MODIFY THIS CODE those are the steps:
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:*    1. Clone this repo:  https://git.soma.salesforce.com/UI/scroller and follow the instructions there to test and modify the code
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:*    2. Once you have your changes tested and ready to go, run "grunt ruaubuild" to genereate a transpiled version of the Scroller for Ruue. The results are in the /build folder
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:*    3. Copy the content of the file right after this comments. Make sure you don't break anything in the SFDC/P4 world!
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:* ALSO, BEFORE MODIFYING ANYTHING, PLEASE TALK TO Diego (@dval) or Nihar (@ndandekar)
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:_bootstrapScroller: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    !function(a){"use strict";a.__S||(a.__S={plugins:{}},a.DEBUG={warn:function(){},log:function(){}})}(window),function(a){"use strict";Array.prototype.forEach||(Array.prototype.forEach=function(a){if(void 0===this||null===this)throw new TypeError;var b=Object(this),c=b.length>>>0;if("function"!=typeof a)throw new TypeError;for(var d=arguments.length>=2?arguments[1]:void 0,e=0;c>e;e++)e in b&&a.call(d,b[e],e,b)});var b,c,d,e=a.__S||(a.__S={}),f=a.document.documentElement.style,g=["webkit","Moz","ms"],h=!1,i=!1;if("transition"in f)h=!0,c="";else for(d=0;d<g.length;d++)b=g[d]+"Transition","undefined"!==f[b]&&(h=!0,c=g[d]);if("undefined"!=typeof f.transform)i=!0;else for(d=0;d<g.length;d++)b=g[d]+"Transform","undefined"!=typeof f[b]&&(i=!0,c=g[d]);e.support={prefix:c,transition:h,transform:i,matrix:!(!a.WebKitCSSMatrix&&!a.MSCSSMatrix),touch:"ontouchstart"in a,pointers:a.navigator.pointerEnabled,msPointers:a.navigator.msPointerEnabled}}(window),function(a){"use strict";function b(b,c){for(var d=["Top","Right","Bottom","Left"],e=a.getComputedStyle(c),f="width"===b,g=f?1:0,h=0;4>g;g+=2)h+=parseInt(e["margin"+d[g]],10);return h+(f?c.offsetWidth:c.offsetHeight)}var c=a.__S||(a.__S={}),d=c.support,e=d&&d.prefix,f={};return d?(d.transition&&d.transform&&(f=""!==e?{transform:e+"Transform",transition:e+"Transition",transitionProperty:e+"TransitionProperty",transitionTimingFunction:e+"TransitionTimingFunction",transitionDuration:e+"TransitionDuration",transformOrigin:e+"TransformOrigin",boxSizing:e+"BoxSizing",matrix:a.WebKitCSSMatrix||a.MSCSSMatrix}:{transform:"transform",transition:"transition",transitionProperty:"transitionProperty",transitionTimingFunction:"transitionTimingFunction",transitionDuration:"transitionDuration",transformOrigin:"transformOrigin",boxSizing:"boxSizing",matrix:a.WebKitCSSMatrix||a.MSCSSMatrix}),f.getHeight=function(a){return b("height",a)},f.getWidth=function(a){return b("width",a)},void(c.styles=f)):void a.console.log("Scroller Dependency error! browser support detection needed")}(window),function(a){"use strict";var b=a.__S||(a.__S={}),c={simpleMerge:function(a,b){var c,d={};for(c in a)a.hasOwnProperty(c)&&(d[c]=a[c]);for(c in b)b.hasOwnProperty(c)&&(d[c]=b[c]);return d},parseDOM:function(b){var c;return b&&b.length?"string"==typeof b?(c=a.document.createElement("div"),c.innerHTML=b,Array.prototype.slice.call(c.children,0)):Array.prototype.slice.call(b,0):void 0},bind:function(a,b,c,d){a.addEventListener(b,c,!!d)},unbind:function(a,b,c,d){a.removeEventListener(b,c,!!d)}};b.helpers=c}(window),function(a){"use strict";for(var b=0,c="CancelAnimationFrame",d=["ms","moz","webkit","o"],e=0;e<d.length&&!a.requestAnimationFrame;++e)a.requestAnimationFrame=a[d[e]+"RequestAnimationFrame"],a.cancelAnimationFrame=a[d[e]+c]||a[d[e]+c];a.requestAnimationFrame||(a.requestAnimationFrame=function(c){var d=(new Date).getTime(),e=Math.max(0,16-(d-b)),f=a.setTimeout(function(){c(d+e)},e);return b=d+e,f}),a.cancelAnimationFrame||(a.cancelAnimationFrame=function(b){a.clearTimeout(b)})}(window),function(a){function b(a){if(this._element=a,a.className!=this._classCache){if(this._classCache=a.className,!this._classCache)return;var b,c=this._classCache.replace(/^\s+|\s+$/g,"").split(/\s+/);for(b=0;b<c.length;b++)h.call(this,c[b])}}function c(a,b){a.className=b.join(" ")}function d(a,b,c){Object.defineProperty?Object.defineProperty(a,b,{get:c}):a.__defineGetter__(b,c)}if(!("undefined"==typeof a.Element||"classList"in document.documentElement)){Array.prototype.indexOf||(Array.prototype.indexOf=function(a,b){for(var c=b||0,d=this.length;d>c;c++)if(this[c]===a)return c;return-1});var e=Array.prototype,f=e.indexOf,g=e.slice,h=e.push,i=e.splice,j=e.join;b.prototype={add:function(a){this.contains(a)||(h.call(this,a),c(this._element,g.call(this,0)))},contains:function(a){return-1!==f.call(this,a)},item:function(a){return this[a]||null},remove:function(a){var b=f.call(this,a);-1!==b&&(i.call(this,b,1),c(this._element,g.call(this,0)))},toString:function(){return j.call(this," ")},toggle:function(a){return this.contains(a)?this.remove(a):this.add(a),this.contains(a)}},window.DOMTokenList=b,d(Element.prototype,"classList",function(){return new b(this)})}}(window),function(a){"use strict";function b(a,b,c,e){function f(a,b){return 1-3*b+3*a}function g(a,b){return 3*b-6*a}function h(a){return 3*a}function i(a,b,c){return((f(b,c)*a+g(b,c))*a+h(b))*a}function j(a,b,c){return 3*f(b,c)*a*a+2*g(b,c)*a+h(b)}function k(b){var e,f,g,h=b,k=d;for(g=0;k>g;g++){if(e=j(h,a,c),0===e)return h;f=i(h,a,c)-b,h-=f/e}return h}var l;return l=function(d){return a===b&&c===e?d:i(k(d),b,e)},l.toString=function(){return"cubic-bezier("+a+", "+b+", "+c+", "+e+")"},l}var c=a.__S||(a.__S={}),d=4;c.CubicBezier=b}(window);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    this._initSurfaceManagerPlugin();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    this._initPullToLoadMorePlugin();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    this._initIndicatorsPlugin();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    this._initInfiniteLoadingPlugin();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    this._initSnapPlugin();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    var NOW            = Date.now || function () { return new Date().getTime(); },
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        RAF            = w.requestAnimationFrame,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        CAF            = w.cancelAnimationFrame,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * For the sake of simplicity, these action-string
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * constants won't be exposed as STATIC variables 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        ACTION_GESTURE_START = 'gestureStart',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        ACTION_ANIM_START    = 'animationStart',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        ACTION_ANIM_MOVING   = 'animationMove',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        ACTION_ANIM_END      = 'animationEnd',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        HOOK_AFTER           = 'after',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Distinguish the type of touch events so they don't conflict in certain
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * contexts, like Dual gestures on Windows Tablets or in ChromeDevTools. 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * (There's a bug where enabling touch gestures fires both types.)
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            touchstart : 1,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Identifies vertical scrolling.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @final
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        SCROLL_VERTICAL = 'vertical',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Identifies horizontal scrolling.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @final
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        SCROLL_HORIZONTAL = 'horizontal',
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Configuration object for the MutatorObserver
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @final
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            attributes : false
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            // NOTE: if using attributeFilter
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            // Avoid listen for "style" attribute changes
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Default configuration for the scroller.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * This option can be modified at the static level
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * or on a per instance basis.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            enabled               : true,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            useCSSTransition      : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            dualListeners         : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            minThreshold          : 5,     // It should be in the [0, 10] range
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            minDirectionThreshold : 2,     // It should be smaller than minThreshold
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            bindToWrapper         : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToRefresh         : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            pullToLoadMore        : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            scrollbars            : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            infiniteLoading       : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            gpuOptimization       : false,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            observeDomChanges     : true,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Default parametrized CubicBezier function curve 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * that is used on regular scrolling.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "CubicBezier(0.33, 0.66, 0.66, 1)"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Default parametrized CubicBezier function curve 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * that is used when the scroller goes out of limits.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "CubicBezier(0.33, 0.33, 0.66, 0.81)"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Wraps EASING_REGULAR and EASING_BOUNCE 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * with the corresponding string representation.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @final
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "{regular: {}, bounce: {}}"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            regular : {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @type {float}
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "0.1"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Specifies the acceleration constant px/ms².
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @type {float}
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "0.0005"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "20"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @type {boolean}
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @static
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @default "false"
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        MOUSE_WHEEL_INVERTED  = false;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * Scroller class that provides the core logic for scrolling.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * @class Scroller
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * @param el {HTMLElement} DOM element to attach the Scroller.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    * @param config {Object} Object literal with initial attribute values.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._initializeScroller();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._initializePlugins(config);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._initialize();
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        this._handleEvents('bind');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:    // Attach and expose Statics into the Scroller Class
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Called in the constructor.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Initializes the internal state of the instance.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _initializeScroller
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _initializeScroller: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Called in the constructor.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Fires an event to nofify plugins 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * that they can initialize themselves.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _initialize
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _initialize: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this._fire('_initialize');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Initializes the plugins provided in the configuration object.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * By default the scroller tries to initialize core plugins, such as
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * `SurfaceManager,` `PullToRefresh,` and `PullToLoadMore`.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _initializePlugins
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @param cfg {Object} Scroller configuration object
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _initializePlugins: function (cfg) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            var userPlugins    = this.opts.plugins,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                SurfaceManager = PLUGINS.SurfaceManager,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                PullToLoadMore = PLUGINS.PullToLoadMore,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                enableSM       = !this.opts.useCSSTransition && this.opts.gpuOptimization,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                enablePTR      = this.opts.onPullToRefresh,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                enablePTL      = this.opts.onPullToLoadMore;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (enablePTR && PullToRefresh)  {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (enablePTL && PullToLoadMore) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                this.plug(PullToLoadMore);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (enableSM  && SurfaceManager) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                this.plug(SurfaceManager);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                userPlugins.forEach(function (plugin) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Returns wether or not to obserChanges on the DOM
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * By default `observeDomChanges` will be enabled 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * unless `gpuOptimization` is set to true.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _observeChanges
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @return {Boolean} Boolean to wether observe changes or not.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _observeChanges: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            return window.MutationObserver && this.opts.observeDomChanges && !this.opts.gpuOptimization;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Creates a MutationObserver object and 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * sets it to observe the Scoller wrapper elelement.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _initializeDOMObserver
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _initializeDOMObserver: function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            var self     = this,
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                observer = this.observer = new MutationObserver(function () {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    self._observedDOMChange.apply(self, arguments);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            observer.observe(this.wrapper, config);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        _observedDOMChange: function (e) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Helper method to merge two object configurations.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @method _initializePlugins
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @param cfg {Object} Configuration base
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @param toMerge {Object} Configuration to merge
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @return {Object} An object that merges both configuration properties.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Merges the default configuration with the configuraton provided by the 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * user and attaches the options to the instances.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Also copies some options directly to the instance for easy access to them.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @param cfg {Object} Configuration base
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            var opts = this.opts = this._mergeConfigOptions(DEFAULTS, cfg);
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.enabled               = opts.enabled;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.acceleration          = opts.acceleration || ACCELERATION_CONSTANT;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.scrollVertical        = this.scroll === SCROLL_VERTICAL;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            // Guard for missconfigurations
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (opts.infiniteLoading && opts.pullToLoadMore) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                w.DEBUG.warn(
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    'You cannot have infiniteLoading and pullToShowMore at the same time.' +
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    'Switching to infiniteLoading');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                this.opts.pullToLoadMore = false;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            if (!this.scrollVertical && (opts.pullToRefresh || opts.pullToLoadMore)) {
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                w.DEBUG.warn(
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    'The attributes: pullToRefresh or pullToShowMore are not available in horizontal mode yet.'+
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                    ' Switching them to false');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                this.opts.pullToRefresh  = false;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:                this.opts.pullToLoadMore = false;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * The provided element will be the `scroller-wrapper` 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * and the first child is the one that performs the scroll.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * This method also sets the proper class to the wrapper, depending 
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * on `scrollDirection` set in the configuration.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @param el {string|HTMLElement} Element to which the scroller is attached
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.wrapper       = typeof el === 'string' ? w.document.querySelector(el) : el;
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.scroller      = this.wrapper.children[0];
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.scroller.classList.add('scroller');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:            this.scroller.classList.add( this.scrollVertical ? 'scroll-vertical' : 'scroll-horizontal');
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * Queries the wrapper element to get the updated size, in width and height.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * The element must be in the DOM to get the right measurement.
ruau/ruau-components/src/nAmE/components/ui/scroller/scrollerHelper.js:        * The scroller won't work correctly if this attribute is set incorrectly.
