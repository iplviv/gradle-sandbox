ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _setWrapperSize
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setWrapperSize: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.wrapperWidth  = this.wrapper.clientWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.wrapperHeight = this.wrapper.clientHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.wrapperSize   = this.scrollVertical ? this.wrapperHeight : this.wrapperWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Sets the overall sizes of the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Calculates the actual scrollable area and sets the proper internal state.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Note that this has a small dependency on the `PullToLoadMore` plugin.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _setWrapperSize
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var scrollerDOM = this.scroller,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // We need to take into account if the `PullToLoadMore` plugin is active
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // and in that case substract the height from the scrollable area size
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptl         = this.opts.pullToLoadMore;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._setWrapperSize();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Once all the sizes are accurate, performn the scroll size calculations
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.maxScrollX     = this.wrapperWidth  - this.scrollerWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.maxScrollY     = this.wrapperHeight - this.scrollerHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.maxScrollX     = this.maxScrollX > 0 ? 0 : this.maxScrollX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.maxScrollY     = this.maxScrollY > 0 ? 0 : this.maxScrollY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.hasScrollX     = this.maxScrollX < 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.hasScrollY     = this.maxScrollY < 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Calculates the height of `PullToShowMore` so
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * it can be taken into account when calculating the total scrollable size.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * it can be taken into account when calculating the total scrollable size.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Private destroy function that is responsible for the destruction of the
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * instance itself. 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The plugins destroy themselves, as triggered by the public
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._handleEvents('unbind');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    * Event handling and bindings
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Add or remove all of the neccesary event listeners, based on the provided configuration.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params action {string} Action to bind or unbind events
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _handleEvents
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _handleEvents: function (action) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var eventType = action === 'bind' ? HELPERS.bind : HELPERS.unbind,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wrapper   = this.wrapper,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                target    = this.opts.bindToWrapper ? wrapper : window,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pHandlers = false, // pointerHandlers flag
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            eventType(window, 'orientationchange', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (SUPPORT.touch && !this.opts.disableTouch) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(wrapper, 'touchstart',  this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'touchmove',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'touchcancel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'touchend',    this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if ((SUPPORT.pointers || SUPPORT.msPointers) && !this.opts.disablePointers) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(wrapper, 'pointerdown',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'pointermove',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'pointercancel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'pointerup',     this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(wrapper, 'MSPointerDown',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'MSPointerMove',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'MSPointerCancel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    eventType(target,  'MSPointerUp',     this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pHandlers = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Surface devices can have both mouse and pointer events
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disableMouse && (!pHandlers || (pHandlers && this.opts.dualListeners))) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(wrapper, 'mousedown',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'mousemove',   this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'mousecancel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(target,  'mouseup',     this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disableWheel) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(wrapper, 'wheel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(wrapper, 'mousewheel', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                eventType(wrapper, 'DOMMouseScroll', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            eventType(this.scroller, 'transitionend', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            eventType(this.scroller, SUPPORT.prefix + 'TransitionEnd', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this._observeChanges()) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._initializeDOMObserver();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Fire a custom event by name.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The callback functions are executed with the scroller instance as context, and with the parameters listed here.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The first argument is the event type and any additional arguments are passed to the listeners as parameters.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This is used to notify the plugins of events that occur on the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params eventType {string} Type of event to be dispatched
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params arguments {object} An arbitrary set of parameters to pass to the listeners
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _fire: function (eventType /*,arguments*/) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var eventQueue = this._events[eventType],
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                params     = Array.prototype.slice.call(arguments, 1),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ePayload;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                for (var i = 0; i < eventFncs; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    ePayload = eventQueue[i];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    ePayload.fn.apply(ePayload.context || this, params);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Hook mechanism that allows plugins to run functions before or after 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * the execution of a particular scroller function.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params when {string} When to execute the hooked function (before|after)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params method {string} Where to perform the hook
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params method {function} Hook function to execute
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self         = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        toHookMethod.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        hookFn.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        hookFn.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        toHookMethod.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handler to dispatch all of the events that the scroller listens to.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The browser calls this function if any of the events 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * registered in _handleEvents are triggered.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method handleEvent
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        handleEvent: function (e) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchstart':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'pointerdown':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerDown':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousedown':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._start(e);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchmove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'pointermove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerMove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousemove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchend':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'pointerup':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerUp':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mouseup':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchcancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'pointercancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerCancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousecancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'orientationchange':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'resize':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'transitionend':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case SUPPORT.prefix + 'TransitionEnd':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._transitionEnd(e);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'wheel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'DOMMouseScroll':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousewheel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handles the start gesture event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The gesturestart event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method handleEvent
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _start: function (e) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if ( !this.enabled || (this._initiated && EVENT_TYPE[e.type] !== this._initiated)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var point = e.touches ? e.touches[0] : e;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Reset internal state
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initiated      = EVENT_TYPE[e.type]; // Register eventType so we can't prevent conflicts
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.moved           = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._transitionTime();    // Reset CSS transition timing
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._isAnimating = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // If we are in the middle of a scrolling we need to stop everything and reset
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._isScrolling = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Set current position and time
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.startX         = this.x;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.startY         = this.y;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.pointX         = point.pageX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.pointY         = point.pageY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.startTime      = NOW();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._lastPosition  = this.scrollVertical ? this.startY : this.startX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._fire('beforeScrollStart', ACTION_GESTURE_START, e);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Invoked if a gestureStart event occurs while scrolling.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * By default, it will `preventDefault()` the start event so if a link is clicked, 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * it won't trigger browser navigation.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The gesturemove event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.preventDefault();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Tracks and calculates the velocity of the gesture between two points in time.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Executed when scroller option `debounce: true` in the context of a `requestAnimationFrame` (every ~17ms).
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * It uses the delta for both position and time between the current and previous frames to get the current velocity value,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * then it applies an exponential moving average filter to weight and smooth out the final velocity.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The gesturemove event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _trackVelocity
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _trackVelocity: function (t) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var lastPos    = this._lastPosition,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                currentPos = this.scrollVertical ? this.y : this.x,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                elapsed    = 17, //ms between frames (RAF calss), hardcoded due to inconsistencies in different devices
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                delta      = currentPos - lastPos,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._lastPosition  = currentPos;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            v = delta / elapsed; // velocity relative to this frame
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Applying exponential moving average filter
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Starts a `requestAnimationFrame` loop when a gestureMove is triggered 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * to debounce the event from the animation.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * For each frame, it updates the position and velocity, and 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * fires a private `_update` event to any plugin listening to it.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _startMoveRAF
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _startMoveRAF: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._translate(self.x, self.y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._trackVelocity(t);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._update();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._rafMoving = RAF(moveStep);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Stops the `requestAnimationFrame` debounce loop when gestureEnd is triggered.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            CAF(this._rafMoving);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Fires and broadcasts a private `_update` event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This function is critical for notifying the plugins that the scroller is moving.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _update: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._fire('_update');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Checks if the scroller needs locking (will become inactive).
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * By default, the scroller is locked if `lockOnDirection` is defined 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * and it matches the current scrollDirection of the gesture.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This can be useful when dealing with multiple nested scrollers 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * which operate in different directions.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Deactivates the scroller for a given gesture and fires the private `lock` event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initiated = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Get the scroll direction once the gesture is bigger than a 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * given threshold (via the `minDirectionThrehold` option).
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absX {integer} Absolute value of the x coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absY {integer} Absolute value of the y coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getScrollDirection: function (absX, absY) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var treshold = this.opts.minDirectionThreshold;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                (absX > absY + treshold) ? SCROLL_HORIZONTAL :
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                (absY > absX + treshold) ? SCROLL_VERTICAL :
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absX {integer} Current x coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absY {integer} Current y coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this.scrollVertical ? (y > 0 || y < this.maxScrollY) : (x > 0 || x < this.maxScrollX);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Normalizes and sets the coordinate that is not being scrolled 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absX {integer} Current x coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params absY {integer} Current y coordinate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _setNormalizedXY
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setNormalizedXY: function (x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handles move gesture event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The gesturemove event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.enabled || (EVENT_TYPE[e.type] !== this._initiated)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var point     = e.touches ? e.touches[0] : e,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                deltaX    = point.pageX - this.pointX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                deltaY    = point.pageY - this.pointY,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                timestamp = NOW(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newX, newY, absDistX, absDistY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.moved && (deltaX || deltaY)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._translate(this.x, this.y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._fire('scrollStart', ACTION_GESTURE_START, e); // notify listeners
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (!this.opts.useCSSTransition || this.opts.debounce) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._startMoveRAF(); // start requestAnimationFrame for debouncing the move event
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Update position and state
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.pointX  = point.pageX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.pointY  = point.pageY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.distX   = this.distX + deltaX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.distY   = this.distY + deltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            absDistX     = Math.abs(this.distX);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            absDistY     = Math.abs(this.distY);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newX         = this.x + deltaX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newY         = this.y + deltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Calculate and expose the gesture direction
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.scrollDirection = this.scrollDirection || this._getScrollDirection(absDistX, absDistY);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // If minThrehold is defined, do not start moving until the distance is over it. 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.minThreshold && (absDistX < this.opts.minThreshold && absDistY < this.opts.minThreshold)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Reduce scrollability (slowdown) when dragging beyond the scroll limits
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newY = this.y + deltaY / 3;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newX = this.x + deltaX / 3;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Scroll one direction at the time (set zero values on the other direction)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._setNormalizedXY(newX, newY);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.useCSSTransition && !this.opts.debounce) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // If debounce is set to false, we force the browser to update the position every time
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._translate(this.x, this.y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // The timeStart reset helps keeping track only on the recent past of the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // which reduces variability and gets a more consistent velocity calculation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (timestamp - this.startTime > 300) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.startTime = timestamp;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.startX = this.x;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.startY = this.y;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handles end gesture event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The gesturemove event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._endMoveRAF(); // Always cancel the debounce RAF
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.enabled || !this.moved || (EVENT_TYPE[e.type] !== this._initiated)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._initiated = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initiated = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var duration = NOW() - this.startTime,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bounce   = EASING.regular,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // If its outside the scrolling boundaries at this point (pos > 0 || pos < maxScroll),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Just snap back (reset the position to be within the scrollable area)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // If we arrive here, is time to scroll!
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Calculate the momentum {destination, time} based on the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum = this._momentum(this.y, this.startY, duration, this.maxScrollY, this.wrapperHeight);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._scrollTo(0, momentum.destination, momentum.time, momentum.bounce);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum = this._momentum(this.x, this.startX, duration, this.maxScrollX, this.wrapperWidth);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._scrollTo(momentum.destination, 0, momentum.time, momentum.bounce);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handles the wheel event for scrolling.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The wheel event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.enabled) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Stop browser defaults
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.preventDefault();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.stopPropagation();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self                 = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX, wheelDeltaY, newX, newY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // NOTE: The math behind this function was taken from iScroll.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Eventually revisit the logic to make sure is cross platform compatible
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if ( 'deltaX' in e ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX = -e.deltaX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaY = -e.deltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( 'wheelDeltaX' in e ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX = e.wheelDeltaX / 120 * mouseWheelSpeed;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaY = e.wheelDeltaY / 120 * mouseWheelSpeed;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( 'wheelDelta' in e ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * mouseWheelSpeed;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( 'detail' in e ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX = wheelDeltaY = -e.detail / 3 * mouseWheelSpeed;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            wheelDeltaX *= invertWheelDirection;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            wheelDeltaY *= invertWheelDirection;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaX = wheelDeltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wheelDeltaY = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newX = this.x + Math.round(this.hasScrollX ? wheelDeltaX : 0);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newY = this.y + Math.round(this.hasScrollY ? wheelDeltaY : 0);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( newX < this.maxScrollX ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newX = this.maxScrollX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( newY < this.maxScrollY ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newY = this.maxScrollY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._rafWheel) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._rafWheel = RAF(function (t) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self.distY = wheelDeltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self.distX = wheelDeltaX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._wheelRAF(); // Debounce event from animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handles the debounce of the wheel event to decouple the event and the actual DOM update.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The wheel event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._translate(this.x, this.y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._update();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._rafWheel    = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._isScrolling = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Scroller Maths and calculation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * If `debounce:true`, the velocity has been already calculated through `_trackVelocity`.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Otherwise, the value is determined from the current state of the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params current {float} Current position of the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params start {float} Start position of the scroller when the gesture started
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params time  {integer Duration of the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @return {float} Velocity of the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getVelocity: function (current, start, time) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var v = this.opts.debounce ? this.velocity : ((current - start) / time);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (Math.abs(v) < MIN_VELOCITY) { // if the velocity is really low, assume no movement
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Calculates the momentum {destination, time} based on the velocity of the gesture and on the
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * acceleration.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params velocity {float} Velocity of the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params current {float} Current scroller position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @return {Object} An object with the destination and time where the scroller should go.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var acceleration = this.acceleration,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time         = Math.abs(velocity) / acceleration, // t = v / a
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                distance     = velocity / 2 * time; // ΔX = vt + 1/2 at² = v / 2 * t 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                destination : current + distance,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Calculates the snap momentum.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * If the original momentum calculation indicates that the 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * destination of the scroller is way beyond the scrollable area, 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * it needs to calculate a momentum that is closer to the boundaries 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * to create the snap effect.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The mathematical function to get the destination is a simple ponderation 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * of how much px to snap based on the current position and velocity.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params start {float} Minimum or maximum scrollable position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params end {float} Wrapper size (how big the scroller wrapper is)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params velocity {float} Current gesture velocity
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params current {float} Current scroller position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _computeSnap
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @return {Object} An object with the destination and time where the scroller should snap to.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _computeSnap: function (start, end, velocity, current) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var destination = start + (end / 2) * (velocity / 8);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                destination : destination,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time        : Math.abs((destination - current) / velocity)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Calculates the momentum for the current gesture.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * If the destination of the momentum falls outside of the scrollable region,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * it calculate the snapping point and the new momentum related to it.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params current {float} Current scroller position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params start {float} Start scroller position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params duration {float} Time of the gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params lowerMargin {integer} Maximum/minimum scrollable position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params wrapperSize {integer} Size of the scroller wrapper
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @return {Object} An object with the destination and time where the scroller should scroll to.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _momentum: function (current, start, duration, lowerMargin, wrapperSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var velocity = this._getVelocity(current, start, duration),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Beyond the scrollable area (bottom)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (momentum.destination < lowerMargin) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum = this._computeSnap(lowerMargin, wrapperSize, velocity, current);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Beyond the scrollable area (top)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if (momentum.destination > 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum = this._computeSnap(0, wrapperSize, velocity, current);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Stops the scroller inertia while scrolling and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * establishes the current scroller position.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var transform  = STYLES.transform,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                transition = STYLES.transition,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                style, matrix, x, y;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // If we are using CSS transitions, we need to calculate the current 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // position and reset the transition time.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.useCSSTransition) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (SUPPORT.matrix) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    matrix = new STYLES.matrix(style[transform]);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.scrollerStyle[transition] = '';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    x = matrix.m41;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    y = matrix.m42;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    matrix = style[transform].split(')')[0].split(', ');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    x = +(matrix[12] || matrix[4]);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    y = +(matrix[13] || matrix[5]);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._translate(x, y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Otherwise we are using animation 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Cancel RAF
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                CAF(this._rafReq);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Checks whether or not a custom reset position is needed.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Used to decouple `pullToRefresh` and `pullToLoadMore`
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * functionality as much as possible.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this.opts.pullToRefresh || this.opts.pullToLoadMore;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Checks whether or not a custom reset position is needed if the scroller is
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * outside the boundaries.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Used to decouple `pullToRefresh` and `pullToLoadMore`
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * functionality as much as possible.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params time {integer} Default time for the scroll in case a snap is needed
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var x = this.x,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // TODO: Find a way to decouple completely pullToRefresh and pullToLoadMore
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                } else if (this.opts.pullToLoadMore && this.isTriggeredPTL()) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Outside boundaries top
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (!this.hasScrollY || this.y > 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Outside boundaries bottom
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                } else if (this.y < this.maxScrollY) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    y = this.maxScrollY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (!this.hasScrollX || this.x > 0 ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                } else if (this.x < this.maxScrollX) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    x = this.maxScrollX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._scrollTo(x, y, time, EASING.regular);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Sets the transition easing function property into the scroller node.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params easing {integer} String representation of the CSS easing function
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _transitionEasing
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _transitionEasing: function (easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scrollerStyle[STYLES.transitionTimingFunction] = easing;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Sets the transition time property into the scroller node.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params time {integer} Time or duration of the transition
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _transitionTime
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _transitionTime: function (time) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scrollerStyle[STYLES.transitionDuration] = time + 'ms';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Sets the current position in the CSS matrix3d transform.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * We use matrix3d to force GPU acceleration and to allow plugins to easily
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * manipulate the matrix later on.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params x {integer} Position for x coordinate 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params y {integer} Position for y coordinate 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _translate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _translate: function (x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scrollerStyle[STYLES.transform] = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + x +',' + y +', 0, 1)';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Handler invoked by the transitionEnd event when the scroller reached an end
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * (this is used when `cssTransition:true`).
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params e {event} The transitionEnd event provided by the browser
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _transitionEnd
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _transitionEnd: function (e) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.useCSSTransition && e.target === this.scroller) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._transitionTime();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._isScrolling  = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Performs a custom animation given a function and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * using `requestAnimationFrame` as a way to interpolate points in time.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * The provided function must be continuous between [0,1] and images f(x)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * should also be within [0, 1].
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * By default the scroller uses `CubicBezier` function curves with the parameters
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * defined in the EASING static variables.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            * @params x {float} The x-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            * @params y {float} The y-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            * @params duration {float} The duration of the animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            * @params easingFn {function} A function that images x values within [0,1] range
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _animate
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _animate: function (x, y, duration, easingFn) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self      = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                startX    = this.x,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                startY    = this.y,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                startTime = NOW(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                deltaX    = x - startX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                deltaY    = y - startY,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                destTime  = startTime + duration;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                var now = NOW(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    newX, newY, easing;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (now >= destTime) { // Finish the animation here
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._isAnimating = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._rafReq = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._translate(x, y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    // Snap back if we are out of boundaries
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        self._isScrolling = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // `now` will the percentage of completion in the [0,1] range
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                now    = ( now - startTime ) / duration;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                easing = easingFn(now); // Get f(x) => y position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Calculate new position based on the result of the function
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // and the start position.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newX = deltaX * easing + startX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                newY = deltaY * easing + startY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // Set the new position and notify changes
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._translate(newX, newY);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._update();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (self._isAnimating) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._rafReq = RAF(step);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._isAnimating = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Prepend an Array of elements into the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This function is overriden by SurfaceManager to allow a custom DOM manipulation.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params items {HTMLElement[]} Array of items to insert in the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _prependData
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _prependData: function (items) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var docfrag = w.document.createDocumentFragment(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer = this.scroller,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptrContainer = scrollerContainer.firstChild;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            items.forEach(function (i) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                docfrag.appendChild(i);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (scrollerContainer.lastChild === ptrContainer) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer.appendChild(docfrag);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer.insertBefore(docfrag, ptrContainer.nextSibling);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Append an Array of elements into the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This function is overriden by SurfaceManager to allow a custom DOM manipulation.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params items {HTMLElement[]} Array of items to insert in the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method _appendData
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendData: function (items) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var docfrag           = w.document.createDocumentFragment(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer = this.scroller,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                docfrag.appendChild(items[i]);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            scrollerContainer.appendChild(docfrag);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Scroll to a {x,y} position, given a specific time and easing function.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * If `useCSSTransition: true`, the CSS changes are applied to the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Otherwise, an animation that interpolates
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * positions using `requestAnimationFrame` is triggered.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params x {float} The x-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params y {float} The x-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params time {float} Duration of the animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params easingFn {function} An easing function (if not provided, regular CubicBezier is used)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @private
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _scrollTo: function (x, y, time, easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            easing || (easing = EASING.regular);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!time || this.opts.useCSSTransition) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._transitionEasing(easing.style);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._transitionTime(time);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._translate(x, y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._update();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._isScrolling = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._animate(x, y, time, easing.fn);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Prepend an Array of elements into the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This function is overriden by SurfaceManager to allow a custom DOM manipulation.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params eventType {string} Event name
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params fn {function} The callback to execute in response to the event
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [context] {object} Override `this` object in callback
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var eventQueue = this._events[eventType] || (this._events[eventType] = []);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Update the scroller size.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Called automatically when the browser fires a `resize` or an `orientationChange` event.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // NOTE: Check the translate(0,0), we do it so when we get narrow width,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // The scroll position may not exist anymore
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // We should be able to calculate the new (x,y) position
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._translate(0,0);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Refreshes the scroller size and fires a private `_refresh` event so plugins can update themselves. 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * This method is meant to be called when something in the DOM has changed to 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * notify the scroller that it needs to recalculate its size and to set the correct internal state.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._rafRefresh) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._rafRefresh = RAF(function () { // debounce the refresh
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._rafRefresh = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Adds a plugin to the scroller.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * A plugin can be a constructor function with its prototype or just a regular object. The scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * merges these methods with its own (with the exception of a method called `init`).
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * If an `init` method is provided, the scroller automatically calls it to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * let the plugin initialize, attach custom events, and set the right state.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params plugin {Function | Object} Plugin to inject into the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @example
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var scroller = new Scroller('#wrapper', {myCustomOption: 'yay!'});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.on('_update', this._myPluginUpdate);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                _myPluginUpdate: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ScrollerPlugin = typeof plugin === 'string' ? PLUGINS[plugin] : plugin,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                methodName;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (methodName in protoExtension) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (whiteList.indexOf(methodName) === -1) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this[methodName] = protoExtension[methodName];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                protoExtension.init.call(this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * Scroll to a {x,y} position given a specific time and easing function.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params x {float} The x-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params y {float} The y-position to scroll to
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [time] {float} ms of the scroll animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [easingFn] {function} An easing equation if time is set (default is the `easing` attribute)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                //emulate gesture
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._scrollTo.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [time] {float} ms of the scroll animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [easingFn] {function} An easing equation if time is set (default is the `easing` attribute)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        scrollToTop: function (time, easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scrollTo(0, 0, time, easing);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [time] {float} ms of the scroll animation
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params [easingFn] {function} An easing equation if time is set (default is the `easing` attribute)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        scrollToBottom: function (time, easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var x = this.maxScrollX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                y = this.maxScrollY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scrollTo(x, y, time, easing);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:         * Enable or disable the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        setEnable: function(enabled) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        	this.enabled = enabled;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * It's recommended to use this method to add content to the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * instead of manually adding it to the DOM directly,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * because the scroller will be able to optimize the rendering lifecycle depending on the configuration.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params data {HTMLElement | HTMLElement[] | String} Elements to prepend into the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        prependItems: function (data) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var parsedData = HELPERS.parseDOM(data);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (parsedData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._prependData(parsedData);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * It's recommended to use this method to add content to the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * instead of manually adding it to the DOM directly,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * because the scroller will be able to optimize the rendering lifecycle depending on the configuration.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @params data {HTMLElement | HTMLElement[] | String} Elements to append into the scroller
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        * @method appendItems
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        appendItems: function (data) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var parsedData = HELPERS.parseDOM(data);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (parsedData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._appendData(parsedData);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:_initSurfaceManagerPlugin: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}), //NAMESPACE
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        RAF      = w.requestAnimationFrame,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function SurfaceManager() {}
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    SurfaceManager.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        /* Bootstrap function */
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.surfacesPositioned = [];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.surfacesPool       = [];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_initialize', this._initializeSurfaceManager);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_update', this._updateSurfaceManager);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('destroy', this._destroySurfaceManager);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initializeSurfaceManager: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._bootstrapItems();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initializeSurfaces();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initializePositions();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _destroySurfaceManager: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var docfrag = w.document.createDocumentFragment();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.items.forEach(function (i) {docfrag.appendChild(i.dom);});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scroller.appendChild(docfrag);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.surfacesPool       = [];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.surfacesPositioned = [];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _bootstrapItems: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var skipPtr  = this.opts.pullToRefresh ? 1 : 0,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                domItems = Array.prototype.slice.call(this.scroller.children, skipPtr),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.activeOffset = 0.9 * (this.scrollVertical ? this.wrapperHeight: this.wrapperWidth);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initializePositions: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var items         = this.items,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                windowSize    = this.scrollVertical ? this.wrapperHeight : this.wrapperWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned    = this.surfacesPositioned,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                sizeNeeded    = windowSize + 2 * this.activeOffset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                item, surface, height;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface       = this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                heightSum     += this._attachItemInSurface(item, surface, {index: i, offset: heightSum});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned[i] = surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createSurfaceDOM: function (options, domContent) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var rawSurface   = w.document.createElement('div'),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surfaceStyle = rawSurface.style;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            rawSurface.className = options['class'] ? 'surface ' + options['class'] : 'surface';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surfaceStyle.height  = options.height && options.height + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surfaceStyle.width   = options.width && options.width + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surfaceStyle[STYLES.transform] = 'scale3d(0.0001, 0.0001, 1)';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                rawSurface.appendChild(domContent);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return rawSurface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createSurface: function (options, domContent) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var surfaceDOM = this._createSurfaceDOM(options, domContent);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                dom          : surfaceDOM,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                state        : 0,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createSurfaces : function (size, options) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var surfaces = [], i;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surfaces.push(this._createSurface(options));
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return surfaces;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getSurfaceTotalOffset: function (surface) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return surface.offset + (this.scrollVertical ? surface.height : surface.width);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _attachItemInSurface: function (item, surface, config) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var offset = config.offset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // recalc styles
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.dom.appendChild(item.dom);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // this will force a layout
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            height = surface.dom.offsetHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            width  = surface.dom.offsetWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                offsetY = config.preCalculateSize ?  offset - height : offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                offsetX = config.preCalculateSize ?  offset - width : offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.dom.style[STYLES.transform] = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + offsetX +',' + offsetY + ', 0, 1)';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.state       = 1;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.contentIndex = index;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.content      = item;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.height       = height;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.width        = width;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.offset       = offsetY || offsetX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this.scrollVertical ? height : width;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _dettachItemInSurface: function (surface) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.state        = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.contentIndex = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.content      = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.height       = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.width        = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.offset       = null;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surface.dom.removeChild(surface.dom.firstChild);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _attachSurfaces: function (surfaces) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var docfrag = w.document.createDocumentFragment(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface, i;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (i = 0 ; i < surfaces.length; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface = surfaces[i];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                docfrag.appendChild(surface.dom);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.surfacesPool.push(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scroller.appendChild(docfrag);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getAvailableSurface: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var pool = this.surfacesPool,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surfaces, surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (var i = 0; i < pool.length; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface = pool[i];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (!surface.state) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    return surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // if we arrive here no surface available
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            surfaces = this._createSurfaces(1);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._attachSurfaces(surfaces);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // call again with the new surfaces
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return !(this.opts.pullToLoadMore ? this.items.length - 1 : this.items.length);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initializeSurfaces: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var items       = this.items,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                numSurfaces = Math.min(INITIAL_SURFACES, items.length),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surfaces    = this._createSurfaces(numSurfaces);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._attachSurfaces(surfaces);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _resetSurfaces: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var surfaces      = this.surfacesPositioned,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surfacesCount = surfaces.length,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (var i = 0; i < surfacesCount; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface = surfaces.shift();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._dettachItemInSurface(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var topSurface       = this._positionedSurfacesFirst(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottomSurface    = this._positionedSurfacesLast();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return index === topSurface.contentIndex || index === bottomSurface.contentIndex;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesFirst: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this.surfacesPositioned[0];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesLast: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var p = this.surfacesPositioned;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesPush: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var bottomSurface    = this._positionedSurfacesLast(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottomSurfaceEnd = this._getSurfaceTotalOffset(bottomSurface),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                index            = this._mod(bottomSurface.contentIndex + 1),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                payload          = {index: index, offset: bottomSurfaceEnd},
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface = this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._attachItemInSurface(this.items[index], surface, payload);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.surfacesPositioned.push(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                w.DEBUG.log('PUSH   ', Date.now());
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return bottomSurface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesPop: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            w.DEBUG.log('POP    ', Date.now());
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var surface = this.surfacesPositioned.pop();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._dettachItemInSurface(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._positionedSurfacesLast();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesUnshift: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var topSurface = this._positionedSurfacesFirst(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                index      = this._mod(topSurface.contentIndex - 1),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                payload    = {index: index, offset: topSurface.offset, preCalculateSize: true},
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface = this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._attachItemInSurface(this.items[index], surface, payload);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.surfacesPositioned.unshift(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                w.DEBUG.log('UNSHIFT', Date.now());
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return topSurface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _positionedSurfacesShift: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            w.DEBUG.log('SHIFT  ', Date.now());
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var surface = this.surfacesPositioned.shift();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._dettachItemInSurface(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._positionedSurfacesFirst();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var firstIndex = this._positionedSurfacesFirst().contentIndex,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                lastIndex  = this._positionedSurfacesLast().contentIndex,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                 : end === 'bottom' ? lastIndex < count
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                 : firstIndex > 0 || lastIndex < count;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            //DEBUG.log(firstIndex, lastIndex, this.items.length, end ,'>>>' , left);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getBoundaries: function (coord, size) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var offsetSize       = this.activeOffset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                abs             = Math.abs(coord);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                top    : abs - offsetSize > 0 ? abs - offsetSize : 0,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottom : abs + size + offsetSize
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _updateAllowed: function (current) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return current.pos < 0 && ((this._isScrolling || Math.abs(current.dist) > 10));
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _recycleSurface: function (side) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getPosition: function (vertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    size : this.wrapperHeight,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxScroll : this.maxScrollY
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    size : this.wrapperWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxScroll : this.maxScrollX
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _updateSurfaceManager: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self             = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                boundaries       = this._getBoundaries(current.pos, current.size),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // surfaces
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                topSurface       = this._positionedSurfacesFirst(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                topSurfaceEnd    = this._getSurfaceTotalOffset(topSurface),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottomSurface    = this._positionedSurfacesLast(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottomSurfaceEnd = bottomSurface.offset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // vars
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                yieldTask        = false,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                inUse            = false,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface, index, payload;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // Don't update anything is the move gesture is not large enough and we are not scrolling
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._updateAllowed(current)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // IF we are in the middle of an animation (_isScrolling: true), 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // AND there is no more items to swap
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // AND the scroll position is beyond the scrollable area (+ 1/4 of the size)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this._isScrolling && !itemsLeft && current.pos < (current.maxScroll - (current.size / 4))) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._isAnimating  = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._isScrolling  = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // PUSH | Add elements to the end when the last surface is inside the lowerBound limit.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                while (this._itemsLeft('bottom') && bottomSurfaceEnd < boundaries.bottom && !inUse) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    surface = this._positionedSurfacesPush();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    if (surface === bottomSurface) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        bottomSurface    = surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        bottomSurfaceEnd = bottomSurface.offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        yieldTask        = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (yieldTask) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // SHIFT | Remove elements from the top that are out of the upperBound region.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                while (boundaries.top > topSurfaceEnd && this._recycleSurface('top')) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    topSurface    = this._positionedSurfacesShift();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    topSurfaceEnd = this._getSurfaceTotalOffset(topSurface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    yieldTask     = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                while (topSurface.offset > boundaries.top && !inUse) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    surface = this._positionedSurfacesUnshift();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    if (surface === topSurface) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        topSurface    = surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        topSurfaceEnd = this._getSurfaceTotalOffset(topSurface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                        yieldTask     = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (yieldTask) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                while (bottomSurfaceEnd > boundaries.bottom && this._itemsLeft('top') && this._recycleSurface('bottom')) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    bottomSurface = this._positionedSurfacesPop();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    bottomSurfaceEnd = bottomSurface.offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    yieldTask        = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (yieldTask) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var positioned = this.surfacesPositioned,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                size       = this.scrollVertical ? this.wrapperHeight : this.wrapperWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptlEnabled = this.opts.pullToLoadMore && this._ptlIsEnabled(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                lastPos    = ptlEnabled ? positioned.length - 3 : positioned.length - 1,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                last       = positioned[lastPos],
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                itemsSize  = this.opts.pullToLoadMore ? items.length - 1 : items.length,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            itemsLeft = last.contentIndex < itemsSize - (ptlEnabled ? 2 : 1);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            offset    = last.offset + (this.scrollVertical ? last.height : last.width);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxScrollY = itemsLeft ? Number.NEGATIVE_INFINITY : size - offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxScrollY = this.maxScrollY > 0 ? 0 : this.maxScrollY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxScrollX = itemsLeft ? Number.NEGATIVE_INFINITY : size - offset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxScrollX = this.maxScrollX > 0 ? 0 : this.maxScrollX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.hasScrollY = this.maxScrollY < 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.hasScrollX = this.maxScrollX < 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (ptlEnabled) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setInfinitePullToShowMoreSpacer(offset);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:         _setInfinitePullToShowMoreSpacer: function (bottomOffset) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.ptlSpacerSize <= 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var diff        = this.wrapperHeight - bottomOffset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                spaceBottom = diff > 0,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned  = this.surfacesPositioned,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                last        = positioned[positioned.length -1],
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface     = last && last.dom;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlSpacerSize = spaceBottom ? diff : 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlSpacer.style.height = this.ptlSpacerSize + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (surface) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                diff = spaceBottom ? this.wrapperHeight : bottomOffset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface.style[STYLES.transform] = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,' + diff + ', 0, 1)';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendPullToLoad: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptr_container = this._createPullToLoadMarkup();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.items.push({ptl: true, dom: ptr_container});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlDOM  = ptr_container;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlIcon = ptr_container.firstChild;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptlSnapTime = 200; 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptlEnabled  = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.maxScrollY >= 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlToggle('disable');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                self._setWrapperSize();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._resetSurfaces();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initializePositions();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _prependData: function (data) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var item, i;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (i = 0; i < data.length; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                item = {dom: data[i]};
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendData: function (data) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptl, item, i, spacer;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            //remove pulltoLoadMoreSurface
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.pullToLoadMore) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._positionedSurfacesPop();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                spacer = this.items.pop();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._positionedSurfacesPop();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            for (i = 0; i < data.length; i++) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                item = {dom: data[i]};
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.pullToLoadMore) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                //add the back as the last item again
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.items.push(spacer);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var parsedData = HELPERS.parseDOM(items);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (parsedData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._prependData(parsedData);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        appendItems: function (items) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var parsedData = HELPERS.parseDOM(items);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (parsedData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._appendData(parsedData);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._updateSurfaceManager();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    SCROLLER.SurfaceManager = PLUGINS.SurfaceManager = SurfaceManager;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:_initIndicatorsPlugin: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}), //NAMESPACE
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        NOW      = Date.now || function () { return new Date().getTime(); },
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        RAF      = w.requestAnimationFrame,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            interactive : false,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            snap        : true
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            'position:absolute',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            'position:absolute',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            'background:rgba(0,0,0,0.5)',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            'border:1px solid rgba(255,255,255,0.9)',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            'border-radius:3px'
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function Indicator (scroller, options) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.wrapper        = typeof options.el === 'string' ? document.querySelector(options.el) : options.el;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.indicator      = this.wrapper.children[0];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.indicatorStyle = this.indicator.style;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.scrollVertical = scroller.scrollVertical;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.sizeRatioX   = 1;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.sizeRatioY   = 1;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.maxPosX      = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.maxPosY      = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.virtualSizeX = 1;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        this.virtualSizeY = 1;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        if (this.opts.interactive) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disableTouch) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.bind(this.indicator, 'touchstart', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disablePointer) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.bind(this.indicator, 'MSPointerDown', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disableMouse) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.bind(this.indicator, 'mousedown', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    Indicator.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        handleEvent: function (e) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchstart':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerDown':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousedown':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._start(e);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchmove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerMove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousemove':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchend':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerUp':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mouseup':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'touchcancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'MSPointerCancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                case 'mousecancel':
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    break;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if ( this.opts.interactive ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.unbind(this.indicator, 'touchstart', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.unbind(this.indicator, 'MSPointerDown', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                HELPERS.unbind(this.indicator, 'mousedown', this);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _start: function (e) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var point = e.touches ? e.touches[0] : e;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.preventDefault();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.stopPropagation();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.transitionTime(0);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.initiated  = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.moved      = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.lastPointX = point.pageX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.lastPointY = point.pageY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.startTime  = NOW();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disableTouch) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.disablePointer) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if ( !this.opts.disableMouse ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var point     = e.touches ? e.touches[0] : e,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                timestamp = NOW(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                deltaX, deltaY, newX, newY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.preventDefault();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.stopPropagation();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            deltaX = point.pageX - this.lastPointX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            deltaY = point.pageY - this.lastPointY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.lastPointX = point.pageX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.lastPointY = point.pageY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newX = this.x + deltaX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            newY = this.y + deltaY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.initiated) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.initiated = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.preventDefault();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            e.stopPropagation();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( x > this.maxPosX ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                x = this.maxPosX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if ( y > this.maxPosY ) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                y = this.maxPosY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            x = !this.scrollVertical ? Math.round(x / this.sizeRatioX) : this.scroller.x;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            y = this.scrollVertical  ? Math.round(y / this.sizeRatioY) : this.scroller.y;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._rafPos) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._rafPos = RAF(function (t) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._rafPos = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        transitionTime: function (time) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.indicatorStyle[STYLES.transitionDuration] = time + 'ms';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        transitionEasing: function (easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.indicatorStyle[STYLES.transitionTimingFunction] = easing;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    virtual     : this.virtualSizeY,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    wrapperSize : this.wrapperHeight,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxScroll   : this.scroller.maxScrollY
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    virtual     : this.virtualSizeX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    wrapperSize : this.wrapperWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxScroll   : this.scroller.maxScrollX
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        getVirtualScrollSize: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var s = this.getCurrentSizes();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (s.virtual < s.wrapperSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return Math.abs(s.maxScroll) || s.wrapperSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return s.virtual;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        getVirtualMaxSize: function (scrollSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var s = this.getCurrentSizes();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return s.maxScroll === -Infinity ? -scrollSize : (s.virtual ? s.wrapperSize - scrollSize : s.maxScroll);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.transitionTime(0);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var scroller      = this.scroller,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wHeight       = this.wrapperHeight = this.wrapper.offsetHeight, // possible relayout
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                wWidth        = this.wrapperWidth  = this.wrapper.offsetWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                size          = this.scrollVertical ? wHeight : wWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollSize    = Math.max(this.getVirtualScrollSize(), size),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                maxScroll     = this.getVirtualMaxSize(scrollSize),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                indicatorSize = Math.max(Math.round(size * size / scrollSize), 8);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorHeight       = indicatorSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorStyle.height = this.indicatorHeight + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorHeight = this.indicator.offsetHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxPosY               = size - this.indicatorHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.minBoundaryY          = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxBoundaryY          = this.maxPosY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.sizeRatioY            = this.maxPosY / maxScroll || FULL_INDICATOR_RATIO;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.height                = this.indicatorHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorWidth       = indicatorSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorStyle.width = this.indicatorWidth + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.indicatorWidth = this.indicator.offsetWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxPosX               = size - this.indicatorWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.minBoundaryX          = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.maxBoundaryX          = this.maxPosX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.sizeRatioX            = this.maxPosX / maxScroll || FULL_INDICATOR_RATIO;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.width                 = this.indicatorWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.updatePosition();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _updatePositionAbstractProperties: function (x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    posRatio      : y,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    indicatorSize : this.indicatorHeight,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    minBoundary   : this.minBoundaryY,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxBoundary   : this.maxBoundaryY,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxPos        : this.maxPosY 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    posRatio      : x,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    indicatorSize : this.indicatorWidth,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    minBoundary   : this.minBoundaryX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxBoundary   : this.maxBoundaryX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    maxPos        : this.maxPosX 
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        updatePosition: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var x      = this.sizeRatioX * this.scroller.x,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                y      = this.sizeRatioY * this.scroller.y,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                s      = this._updatePositionAbstractProperties(x, y),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pos    = s.posRatio,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scaleX = 1,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scaleY = 1,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scale,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (pos < s.minBoundary) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                tmpSize = this.opts.snap ? Math.max(s.indicatorSize + s.posRatio * 3, 8) : s.indicatorSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scale   = tmpSize / s.size;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pos     = s.minBoundary - ((s.size - tmpSize) / 2);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if (pos > s.maxBoundary) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                tmpSize = this.opts.snap ? Math.max(s.indicatorSize - (s.posRatio - s.maxPos) * 3, 8): s.indicatorSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scale   = tmpSize / s.size;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pos     = s.maxPos + ((s.size - tmpSize) / 2);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (scale) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    scaleY = scale; y = pos;   
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    scaleX = scale; x = pos;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.indicatorStyle[STYLES.transform] = 'matrix3d(' + scaleX +',0,0,0,0,' + scaleY + ',0,0,0,0,1,0,' + x +',' + y +', 0, 1)';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function Indicators () {}
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    Indicators.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators = [];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._virtualScroll = 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_initialize', this._initializeIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_update', this._updateIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_refresh', this._refreshIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._hook('after', '_transitionTime', this._transitionTimeIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._hook('after', '_transitionEasing', this._transitionEasingIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._hook('after', '_translate', this._updateIndicators);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._hook('after', '_setInfiniteScrollerSize', this._setVirtualScrollSize);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initializeIndicators: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.scrollbars) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._createDefaultScrollbars(this.opts.scrollbars);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.indicators) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.opts.indicators.forEach(function (i) {self.addIndicator(i.el, i.config)});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._initVirtualScrollSize();                
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initVirtualScrollSize: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var hasScroll     = this.scrollVertical ? this.hasScrollY : this.hasScrollX,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                virtualSize   = this.scrollVertical ? 'virtualSizeY'  : 'virtualSizeX',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                virtualScroll = hasScroll ? this._virtualScroll : 0;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.forEach(function (i) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                i[virtualSize] = virtualScroll;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setVirtualScrollSize: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var last          = this._positionedSurfacesLast(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                virtualScroll = last.offset + (this.scrollVertical ? last.height : last.width),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                virtualSize   = this.scrollVertical ? 'virtualSizeY' : 'virtualSizeX';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (virtualScroll > this._virtualScroll) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._virtualScroll = virtualScroll;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._indicators.forEach(function (i) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    i[virtualSize] = virtualScroll;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _updateIndicators: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.forEach(function (i) {i.updatePosition();});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _refreshIndicators: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.forEach(function (i) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _transitionTimeIndicators: function (time) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.forEach(function (i) {i.transitionTime(time);});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _transitionEasingIndicators: function (easing) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.forEach(function (i) {i.transitionEasing(easing);});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createDefaultScrollbars: function (config) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var interactive = true,  // TODO:
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                customStyle = false, // Move those two as params
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollbar   = this._createDefaultScrollbar(this.scrollVertical, interactive, customStyle);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.wrapper.appendChild(scrollbar);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.push(new Indicator(this, {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                el          : scrollbar,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                interactive : interactive
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createDefaultScrollbar: function (vertical, interactive, customStyle) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var scrollbar            = w.document.createElement('div'),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                indicator            = w.document.createElement('div'),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                inlineStyleScrollbar = DEFAULT_STYLE_SCROLLBAR,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                inlineStyleIndicator = DEFAULT_STYLE_INDICATOR;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            indicator.className     = 'scrollbar';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            indicator.style.cssText = inlineStyleIndicator;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!vertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    scrollbar.style.cssText += inlineStyleScrollbar + DEFAULT_STYLE_VERTICAL_SB;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    indicator.style.height   = '100%';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollbar.className = 'scrollbar-horizontal';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    scrollbar.style.cssText += inlineStyleScrollbar + DEFAULT_STYLE_HORIZONTAL_SB;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    indicator.style.width    = '100%';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollbar.className = 'scrollbar-vertical';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!interactive) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollbar.style.pointerEvents = 'none';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            scrollbar.appendChild(indicator);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return scrollbar;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        addIndicator: function (el, cfg) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var indicator = new Indicator(this, cfg);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._indicators.push(indicator);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            indicator.refresh();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    Indicators.Indicator = Indicator;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    PLUGINS.Indicators   = Indicators;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        RAF      = w.requestAnimationFrame,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelPull     : 'Pull down to refresh...',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelRelease  : 'Release to refresh...',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelUpdate   : 'Updating...',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelSubtitle : '',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelError    : 'Error on pull to refresh'
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_UPDATE_STATE = 'update',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_LABEL        = 'label',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_initialize', this._appendPullToRefresh);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createPullToRefreshMarkup: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptr_container = w.document.createElement('div'),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pullLabel     = this.opts.pullToRefreshConfig.labelPull,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                subtitleLabel = this.opts.pullToRefreshConfig.labelSubtitle;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            ptr_container.innerHTML = [
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_ICON + '"></span>',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_LABEL + '">' + pullLabel + '</span>',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_SUBTITLE + '">' + subtitleLabel + '</span>'
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            ptr_container.className = 'pullToRefresh';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return ptr_container;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendPullToRefresh: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptr_container = this._createPullToRefreshMarkup();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.scroller.insertBefore(ptr_container, this.scroller.firstChild);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.scroller.appendChild(ptr_container);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptrDOM   = ptr_container;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptrIcon  = ptr_container.getElementsByClassName(CLASS_ICON)[0];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptrLabel = ptr_container.getElementsByClassName(CLASS_LABEL)[0];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptrThreshold  = ptr_container.offsetHeight; //relayout
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptrSnapTime   = PULL_TO_SNAP_TIME;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                var y    = this._getPTRSize();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time = time || this._getPTRSnapTime();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPTRLoadingState: function (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.add(CLASS_UPDATE_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrLabel.textContent = this.opts.pullToRefreshConfig.labelUpdate;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrLoading          = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.remove(CLASS_UPDATE_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.remove(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrLabel.textContent = this.opts.pullToRefreshConfig.labelPull;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrLoading = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPullState: function (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.add(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrLabel.textContent = this.opts.pullToRefreshConfig.labelRelease;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.remove(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrLabel.textContent = this.opts.pullToRefreshConfig.labelPull;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPTRErrorState: function (error) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var labelError = this.opts.pullToRefreshConfig.labelError;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // error == false remove error state
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (typeof error === 'boolean' && !error) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.remove(CLASS_ERROR);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPullState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTRLoadingState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrDOM.classList.add(CLASS_ERROR);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptrLabel.textContent = error.labelError || labelError;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _onScrollMovePTR: function (action, x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (action === 'gestureMove' && y > 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPullState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPullState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _ptrToggle: function (action, force) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptr = this.ptrDOM;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (action === 'disable' && (this.opts.pullToRefresh || force)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptr.style.display = 'none';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.opts.pullToRefresh = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if (action === 'enable' && (!this.opts.pullToRefresh || force)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptr.style.display = '';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptrDataProvider = this.opts.onPullToRefresh,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                callback = function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._ptrExecTriggerCallback.apply(self, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (ptrDataProvider) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptrDataProvider(callback);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._ptrExecTriggerCallback('handler not defined');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _ptrExecTriggerCallback: function (err, data) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTRErrorState(err);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._resetPosition(self._ptrSnapTime);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._setPTRErrorState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.prependItems(data);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTRLoadingState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._resetPosition(self._ptrSnapTime);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        getPTRSnapTime: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._ptrSnapTime;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._ptrLoading) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTRLoadingState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTRLoadingState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._triggerPTRAfterReset = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time : this.getPTRSnapTime()
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        togglePullToRefresh: function (enabled, force) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var hasToggleArg = enabled !== undefined,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                toggleStr = hasToggleArg ? enabled ? 'enable' : 'disable' : '';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (hasToggleArg) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptrToggle(this.opts.pullToRefresh ? 'disable' : 'enable', force);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:_initPullToLoadMorePlugin: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}), //NAMESPACE
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        RAF      = w.requestAnimationFrame,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelPull     : 'Pull up to show more',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelRelease  : 'Release to show more',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelUpdate   : 'Updating...',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelSubtitle : '',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelError    : 'Error on pull to load more'
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_UPDATE_STATE = 'update',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_LABEL        = 'label',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_PTL          = 'pullToLoadMore';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function PullToLoadMore() {}
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    PullToLoadMore.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._mergePullToLoadMoreConfig();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_initialize', this._appendPullToLoad);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _mergePullToLoadMoreConfig: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.opts.pullToLoadMoreConfig = this._mergeConfigOptions(CONFIG_DEFAULTS, this.opts.pullToLoadMoreConfig);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            //set waiting state
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this._ptlLoading) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLLoadingState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createPullToLoadMarkup: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptl_container = w.document.createElement('div'),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            pullLabel     = this.opts.pullToLoadMoreConfig.labelPull,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            subtitleLabel = this.opts.pullToLoadMoreConfig.labelSubtitle;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            ptl_container.innerHTML = [
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_ICON + '"></span>',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_LABEL + '">' + pullLabel + '</span>',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                '<span class="' + CLASS_SUBTITLE + '">' + subtitleLabel + '</span>'
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            ptl_container.className = CLASS_PTL;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return ptl_container;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _createPullToLoadSpacer: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptl_spacer = w.document.createElement('div');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            ptl_spacer.classList.add('spacer-pull-to-load-more');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return ptl_spacer;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var spacer = this.ptlSpacer,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                diff   = this.wrapperHeight - spacer.offsetTop;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (diff !== this.ptlSpacerSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlSpacerSize = diff;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                spacer.style.height = this.ptlSpacerSize + 'px';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendPullToLoad: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptl_container = this._createPullToLoadMarkup(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptl_spacer    = this._createPullToLoadSpacer();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scroller.appendChild(ptl_spacer);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.scroller.appendChild(ptl_container);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlSpacer = ptl_spacer;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlDOM    = ptl_container;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlIcon   = ptl_container.firstChild;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.ptlLabel  = ptl_container.getElementsByClassName(CLASS_LABEL)[0];
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptlThreshold  = ptl_container.offsetHeight;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ptlSnapTime   = PULL_TO_SNAP_TIME;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.togglePullToLoadMore(this.opts.pullToLoadMore, true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _appendData: function (items) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var docfrag = w.document.createDocumentFragment(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer = this.scroller,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptlContainer = this.ptlSpacer;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            items.forEach(function (i) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                docfrag.appendChild(i);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (ptlContainer) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer.insertBefore(docfrag, ptlContainer);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                scrollerContainer.appendChild(docfrag);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _ptlIsEnabled: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this.opts.pullToLoadMore;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _ptlToggle: function (action, force) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ptl = this.ptlDOM;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (action === 'disable' && (this.opts.pullToLoadMore || force)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptl.style.display = 'none';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.opts.pullToLoadMore = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if (action === 'enable' && (!this.opts.pullToLoadMore || force)) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptl.style.display = '';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.opts.pullToLoadMore = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _onScrollMovePTL: function (action, x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (action === 'gestureMove' && y < this.maxScrollY) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._needsPullToLoadMore(y);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _needsPullToLoadMore: function (ypos) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.pullToLoadMore) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var threshold = this.maxScrollY - this._ptlThreshold;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLPullState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLPullState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPTLPullState: function (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.add(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlLabel.textContent = this.opts.pullToLoadMoreConfig.labelRelease;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.remove(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlLabel.textContent = this.opts.pullToLoadMoreConfig.labelPull;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPTLLoadingState: function (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (enable) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.add(CLASS_UPDATE_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlLabel.textContent = this.opts.pullToLoadMoreConfig.labelUpdate;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlLoading          = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.remove(CLASS_UPDATE_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.remove(CLASS_PULL_STATE);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlLabel.textContent = this.opts.pullToLoadMoreConfig.labelPull;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlLoading = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _setPTLErrorState: function (error) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var labelError = this.opts.pullToLoadMoreConfig.labelError;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            // error == false remove error state
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (typeof error === 'boolean' && !error) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.remove(CLASS_ERROR);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLPullState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLLoadingState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlDOM.classList.add(CLASS_ERROR);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.ptlLabel.textContent = error.labelError || labelError;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptrDataProvider = this.opts.onPullToLoadMore,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                callback = function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._ptlExecTriggerCallback.apply(self, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (ptrDataProvider) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ptrDataProvider(callback);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._ptlExecTriggerCallback('no fnc');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _ptlExecTriggerCallback: function (err, items) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self = this;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLErrorState(err);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._resetPosition(self._ptlSnapTime);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._setPTLErrorState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.appendItems(items);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlTriggered = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLLoadingState(false);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._resetPosition(self._ptlSnapTime);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        getPTLSnapTime: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._ptlSnapTime;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._setPTLLoadingState(true);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._triggerPTLAfterReset = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                y    : this.maxScrollY - this.getPTLSize(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time : this.getPTLSnapTime()
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        togglePullToLoadMore: function (enabled, force) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var hasToggleArg = enabled !== undefined,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                toggleStr = hasToggleArg ? enabled ? 'enable' : 'disable' : '';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (hasToggleArg) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ptlToggle(this.opts.pullToLoadMore ? 'disable' : 'enable', force);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    PLUGINS.PullToLoadMore = PullToLoadMore;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:_initInfiniteLoadingPlugin: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            labelNoData : 'No more data to display',
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        CLASS_FETCHING = 'loading';
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function InfiniteLoading () {}
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    InfiniteLoading.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._mergeInfiniteLoading();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('_initialize', this._initInfiniteLoading);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _mergeInfiniteLoading: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.opts.infiniteLoadingConfig = this._mergeConfigOptions(
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this.opts.infiniteLoadingConfig
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initInfiniteLoading: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var ilConfig       = this.opts.infiniteLoadingConfig,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                thresholdCheck = this.opts.gpuOptimization ? this._checkItemsthreshold : this._checkLoadingThreshold;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.opts.infiniteLoading || !ilConfig.dataProvider) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                w.DEBUG.warn('InfiniteLoading will not work because there is no data provider or is not activated');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _triggerInfiniteLoadingDataProvider: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var self            = this,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ilDataProvider  = this.opts.infiniteLoadingConfig.dataProvider,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                callback        = function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    self._infiniteLoadingTriggerCallback.apply(self, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (ilDataProvider) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                w.DEBUG.log('fetching data');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._ilFetchingData = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                ilDataProvider(callback);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._infiniteLoadingTriggerCallback('noop');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _infiniteLoadingTriggerCallback: function (err, payload) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // the payload returns an array, append it.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (payload instanceof Array && payload.length) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    w.DEBUG.log('Data fetched!');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this.appendItems(payload);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // the user manually added the dom elements (wrong thing, but we support it..)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                } else if (payload === 'refresh') {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    w.DEBUG.log('InfiniteLoading: refresh!');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                // If the payload is not "refresh" or an Array, we assume there is no more data.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    this._ilNoMoreData = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    w.DEBUG.log('No More data!');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ilFetchingData = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        // This check is done when surfaceManager is enabled
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _checkItemsthreshold: function (action) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this._ilNoMoreData || this._ilFetchingData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var lastIndex  = this._positionedSurfacesLast().contentIndex,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (count - lastIndex < threshold) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._triggerInfiniteLoadingDataProvider();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        // This check is done when surfaceManager is disabled
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _checkLoadingThreshold: function (action, x, y) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this._ilNoMoreData || this._ilFetchingData) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var config = this.opts.infiniteLoadingConfig,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                delta, threshold, pos, size;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            delta     = size + pos; // pos is negative
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (delta < threshold) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                this._triggerInfiniteLoadingDataProvider();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        fetchData: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._triggerInfiniteLoadingDataProvider();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        unlockFetchData: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ilNoMoreData = false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        lockFetchData: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._ilNoMoreData = true;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    PLUGINS.InfiniteLoading = InfiniteLoading;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER = w.__S || (w.__S = {}),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var n = this.items.length;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.activeOffset = (this.scrollVertical ? this.wrapperHeight: this.wrapperWidth) - 5;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _momentum: function (current, start, duration, lowerMargin, wrapperSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var velocity = this._getVelocity(current, start, duration),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return false;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _updateAllowed: function (current) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return this._isScrolling || (Math.abs(current.dist) > 5);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getBoundaries: function (pos, size) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                bottom : -pos + size + this.activeOffset
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _recycleEnableTest: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _initializePositions: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var items         = this.items,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned    = this.surfacesPositioned,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                sizeNeeded    = this.wrapperSize + this.activeOffset,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                item, surface, height;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface       = this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                heightSum     += this._attachItemInSurface(item, surface, {index: i, offset: heightSum});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned[i] = surface;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            sizeNeeded   = this.activeOffset;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    'Items are not sufficient to fulfill all scrollable area');
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                surface       = this._getAvailableSurface();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                heightSum     += this._attachItemInSurface(item, surface, {index: j, offset: positioned[0].offset, preCalculateSize: true});
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                positioned.unshift(surface);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:_initSnapPlugin: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    var SCROLLER    = w.__S || (w.__S = {}), //NAMESPACE
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    function Snap() {}
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    Snap.prototype = {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this._bindSnap();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _bindSnap: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.on('beforeScrollStart', this._snapStart);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _snapStart: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.initX = this.startX;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            this.initY = this.startY;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getNearesOffset: function (offset) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var s = this.surfacesPositioned;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _afterEnd: function () {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var current, dest, time;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                current = this._getSnapPosition();
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                if (current.init % current.minSnap) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    dest = Math.round(current.init / current.snapSize) * current.snapSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getSnapSize: function (vertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            return  vertical ? this.itemHeight || this.wrapperHeight : this.itemWidth || this.wrapperWidth;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _getSnapPosition: function (vertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var current;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.scrollVertical) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    snapSize : this._getSnapSize(true),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    snapSize : this._getSnapSize(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            current.minSnap = current.snapSize / SNAPSIZE_RATIO;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (this.opts.snap === SNAP_SOFT) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return this._momentumSnapSoft.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                return this._momentumSnapSticky.apply(this, arguments);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _momentumSnapSticky: function (current, start, duration, lowerMargin, wrapperSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var velocity = this._getVelocity(current, start, duration),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum = this._momentumSnapSoft.apply(this, arguments),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                position = this._getSnapPosition(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                snapSize = position.snapSize,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                initSnap = Math.round(position.init / snapSize) * snapSize,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (Math.abs(position.init - momentum.destination) < position.minSnap) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    destination : Math.round(position.init / position.snapSize) * position.snapSize,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    snapBack    : true
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                dest = initSnap + (momentum.destination > current ? snapSize: -snapSize);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time = Math.abs((current - dest) / velocity);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    destination : dest,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    time        : Math.min(time, MAX_SNAP_TIME)
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:        _momentumSnapSoft: function (current, start, duration, lowerMargin, wrapperSize) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            var velocity = this._getVelocity(current, start, duration),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                pos      = this._getSnapPosition(),
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            if (!this.endless && momentum.destination > 0) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum        = this._computeSnap(0, wrapperSize, velocity, current);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:            } else if (momentum.destination < lowerMargin) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                momentum        = this._computeSnap(lowerMargin, wrapperSize, velocity, current);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                dist = Math.round(momentum.destination / pos.snapSize) * pos.snapSize;
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                time = Math.abs(current - dist) < pos.minSnap ? BOUNCE_BACK : Math.abs((dist - current) / velocity);
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:                    destination : dist,
ruau/ruau-components/src/main/components/ui/scroller/scrollerHelper.js:    PLUGINS.Snap = Snap;
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        helper.initialize(component);
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:       var scroller = helper.getScrollerInstance(component);
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        helper.handleScrollTo(component, event);
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        helper.handleScrollBy(component, event);
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:    handleCanShowMoreChange: function (cmp, evt, hlp) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        var newValue = evt.getParam('value');
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        hlp.swapShowMore(cmp, newValue);
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:    handleCanRefreshChange: function (cmp, evt, hlp) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        var newValue = evt.getParam('value');
ruau/ruau-components/src/main/components/ui/scroller/scrollerController.js:        hlp.swapRefresh(cmp, newValue);
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:    afterRender : function(component, helper) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:        if (component.isDirty("v.enabled")) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:        	var enabled = component.get("v.enabled");
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:	        	if (enabled) {
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:	           	component._scroller.setEnable(enabled);
ruau/ruau-components/src/main/components/ui/scroller/scrollerRenderer.js:        helper.deactivate(component);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scroller.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    position: relative;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    /* TODO: height property may need to live outside, here does not makes much sense ?*/
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:/* CSS Native scrolling Classes */
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller.native {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    overflow: auto;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller.native > .scroller > .pullToRefresh,
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller.native > .scroller > .pullToLoadMore {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    position: relative;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-touch-callout: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    position: absolute;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-tap-highlight-color: rgba(0,0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform: translateZ(0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transform: translateZ(0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transform: translateZ(0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -o-transform: translateZ(0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform: translateZ(0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-touch-callout: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-text-size-adjust: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-text-size-adjust: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-text-size-adjust: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -o-text-size-adjust: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    text-size-adjust: none;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller.native > .scroller {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-touch-callout: default;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller > .scroll-vertical, .uiScroller > .scroll-vertical .surface {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller > .scroll-horizontal, .uiScroller > .scroll-horizontal .surface {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller .surface {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    position: absolute;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform-origin: center center;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform-origin: center center;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-backface-visibility: hidden;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    backface-visibility: hidden;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform-style: flat;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform-style: flat;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-tap-highlight-color: transparent;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    pointer-events: auto;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transform    : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transform     : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform         : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    position: absolute;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    text-align: center;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller > .scroller > .pullToLoadMore {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transform    : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transform     : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform         : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    text-align: center;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller .pullToLoadMore > .icon {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    display: inline-block;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    background-position: 50%;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    background-repeat: no-repeat;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    border-radius: 5px; 
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transition : -webkit-transform 300ms;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transition    : -moz-transform 300ms;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transition     : -ms-transform 300ms;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transition         : transform 300ms;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transform    : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transform     : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform         : translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    padding: 0 5px;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller .pullToLoadMore.pull > .icon {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-transform : translate3d(0,0,0) rotate(180deg);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-transform    : translate3d(0,0,0) rotate(180deg);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-transform     : translate3d(0,0,0) rotate(180deg);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    transform         : translate3d(0,0,0) rotate(180deg);
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller .pullToRefresh.update > .icon,
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:.uiScroller .pullToLoadMore.update > .icon {
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -webkit-animation : spin .6s linear infinite;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -moz-animation    : spin .6s linear infinite;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    -ms-animation     : spin .6s linear infinite;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:    animation         : spin .6s linear infinite;
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:@-webkit-keyframes spin { from { -webkit-transform: rotate(180deg); } to { -webkit-transform: rotate(540deg); } }
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:@-moz-keyframes spin    { from { -moz-transform: rotate(180deg); }    to { -moz-transform: rotate(540deg); } }
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:@-ms-keyframes spin     { from { -ms-transform: rotate(180deg); }     to { -ms-transform: rotate(540deg); } }
ruau/ruau-components/src/main/components/ui/scroller/scroller.css:@keyframes spin         { from { transform: rotate(180deg); }         to { transform: rotate(540deg); } }
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:<ruau:component support="BETA" extensible="true" description="A scrollable view with scroll bars and pull-to-refresh support">
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <!-- Exposed attributes -->
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="scroll"                type="String"  default="vertical" description="Defines the scroll direction. The string values can be either horizontal or vertical"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="enabled"               type="Boolean" default="true"     description="Sets the default state of the scroller"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="useCSSTransition"      type="Boolean"                    description="Denotes whether to use css transitions. By default scroller will decide depending on the platform"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="useNativeScroller"     type="Boolean" default="false"    description="Leverage native scrolling"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="preventDefaultOnMove"  type="Boolean" default="false"    description="preventDefault native events on mouse move"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="debounce"              type="Boolean" default="false"    description="Separate the gesture move from the animation"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="snap"                  type="Boolean" default="false"    description="Enable snap behaviour on the scroller (adds the Snap plugins to the scroller)"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="endless"               type="Boolean" default="false"    description="Activates the endless plugin (gpuOptimization needs to be enable for this)"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="snapType"              type="String"  default="soft"     description="Snap type. Values: sticky | soft"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="plugins"               type="String"  default=""         description="The list of plugins to add"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="gpuOptimization"       type="Boolean" default="false"    description="Activate Surface Mannager to create GPU accelerate surfaces for better performace."/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="bindEventsToScroller"  type="Boolean" default="false"    description="Binds mouse or touch events to the scroller DOM container, otherwise will be attached to the window object"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="showScrollbars"        type="Boolean" default="false"    description="Enable scrollbars"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="canShowMore"           type="Boolean"                    description="Whether this scroller can be invoked to show more content"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="canRefresh"            type="Boolean"                    description="Whether this scroller can be invoked to refresh its content"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="width"                 type="Integer"                    description="The width of the scroll area in pixels"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="height"                type="Integer"                    description="The height of the scroll area in pixels"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="itemWidth"             type="Integer"                    description="The width of the scroll area in pixels"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="itemHeight"            type="Integer"                    description="The height of the scroll area in pixels"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="class"                 type="String"                     description="A CSS style to be attached to the scroll area"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="scrollContentClass"    type="String"                     description="A CSS style to be attached to the scroll content area"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="minThreshold"          type="Integer" default="5"        description=""/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="minDirectionThreshold" type="Integer" default="1"        description=""/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="lockOnDirection"       type="String"                     description=""/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onBeforeScrollStart" type="Ruue.Action" description="The action invoked before the user starts scrolling"/>  
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onScrollStart"       type="Ruue.Action" description="The action invoked when the scroll starts"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onScrollEnd"         type="Ruue.Action" description="The action invoked when scroller stops"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onScrollMove"        type="Ruue.Action" description="The action invoked when scrolling"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onPullToShowMore"    type="Ruue.Action" description="The action invoked when the user pulls from the bottom to load more"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="onPullToRefresh"     type="Ruue.Action" description="The action invoked when the user pulls to refresh the scroller area"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:     <!--Infinite loading config -->
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="infiniteLoading"             type="Boolean"     description="Enable Infinite loading (adds the infinite loading plugin to the scroller)"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="infiniteLoadingThreshold"    type="Integer"     description="Callback invoked When the user scrolls to this many pixels from the bottom"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="infiniteLoadingDataProvider" type="Ruue.Action" description="The action invoked when the user has reached the end of the scrolling area"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <!--Labels pullToShowMore -->
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMoreClick"    type="String" default="Tap to show more"           description="The text before the user pulls clicks to refresh content"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMorePull"     type="String" default="Pull up to show more..."    description="The text before the user pulls to show more content"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMoreRelease"  type="String" default="Release to show more..."    description="The text when the user pulls to show more content in the scroller area"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMoreUpdating" type="String" default="Updating..."                description="The text to display while the scroller component is updating"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMoreSubtitle" type="String" default= ""                          description="The text to display in the bottom cell"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToShowMoreError"    type="String" default="Error on Pull to load more" description="The text to display while the scroller component is updating"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <!--Labels pullToLoadMore -->
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshClick"     type="String" default="Tap to refresh"           description="The text to display in the top cell before the user clicks to refresh the page"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshPull"      type="String" default="Pull down to refresh..."  description="The text to display in the top cell before the user pulls to refresh the page"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshRelease"   type="String" default="Release to refresh..."    description="The text to display in the revealed area above the scroller"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshUpdating"  type="String" default="Loading..."               description="The text to display while the scroller component is updating"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshError"     type="String" default="Error on Pull to refresh" description="The text to display in the top cell when the user pulls and there is an error"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:attribute name="pullToRefreshSubtitle"  type="String" default=""                         description="The text to display in the top cell when the user pulls the scroller area to refresh the content"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:registerEvent name="scrollTo" type="ui:scrollTo"     description="The event fired when the scroller should move to a new destination"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:handler       name="scrollTo" action="{!c.scrollTo}" description="Catches the event fired when the scroller should move to a new destination"/>  
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:registerEvent name="scrollBy" type="ui:scrollBy"     description="The event fired when the scroller should move to a new destination relative to its current position"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:handler       name="scrollBy" action="{!c.scrollBy}" description="Catches the event fired when the scroller should move to a new destination relative to its current position"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:handler       name="change" value="{!v.canRefresh}" action="{!c.handleCanRefreshChange}" description="Handler called when the canShowMore attribute changes"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:handler       name="change" value="{!v.canShowMore}" action="{!c.handleCanShowMoreChange}" description="Handler called when the canShowMore attribute changes"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:    <div ruau:id="scrollWrapper" 
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:        class="{!v.class + ' scrollWrapper' + (v.useNativeScroller ? ' native' : '') }" 
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:        <div ruau:id="scrollContent" class="{!v.scrollContentClass}">
ruau/ruau-components/src/main/components/ui/scroller/scroller.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:    testControllerChangeHandler: {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function BubblingIsCanceled(component) {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                        cancelBubble: function() {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                            actual = true;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    target: { checked: null }
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function CallsHelperFireEvent(component) {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: null } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function ComponentPassedToFireEvent(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: null } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = component;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function EventNamePassedToFireEvent(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var expected = "onchange";
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: null } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(component, eventName){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = eventName;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function EventCategoryPassedToFireEvent(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var expected = "checkbox";
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: null } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(component, eventName, category){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = category;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function RawDomEventPassedToFireEvent(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: null } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var expected = domEvent;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(component, eventName, category, rawDomEvent){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = rawDomEvent;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            function CheckedInformationPassedToFireEvent(component){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var expected = true;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var domEvent = { target: { checked: expected } };
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function(component, eventName, category, rawDomEvent, data){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    actual = data.checked;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                    component.get("c.changeHandler").runDeprecated(domEvent);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                ruau.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:    getHelperMock:function (component, name, mock) {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:        return this.getMock(this.getHelper(component), name, mock);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:    getMock:function (target, name, mock) {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            var original = target[name];
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                mock.mocked = original.bind(target);
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                target[name] = mock;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                return during.apply(target, Array.prototype.slice.call(arguments, 1));
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            } catch (e) {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:            } finally {
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxTest.js:                target[name] = original;
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js:    changeHandler:function(component,domEvent,helper){
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js:        if(domEvent.cancelBubble)domEvent.cancelBubble();
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckboxController.js:        helper.fireEvent(component, "onchange", "checkbox", domEvent, {checked:domEvent.target.checked});
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:<ruau:component extends="ui:listViewColumnCell" extensible="true" support="GA" description="A checkbox column template definition, describes a checkbox in a table data cell.">
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <ruau:attribute name="label" type="String" default=""            description="The label text by which to refer to the checkbox."/>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <ruau:attribute name="labelClass" type="String" default=""       description="The css class to apply to the label element."/>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <ruau:attribute name="checked" type="Boolean" default="false"    description="The checked state of the checkbox."/>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <ruau:registerEvent name="onchange" type="ui:listViewEvent"    description="The event fired when the checkbox selection is changed."/>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <label class="{!v.labelClass?v.labelClass:null}" for="{!'ui:listViewColumnCheckbox:'+globalId}">{!v.label}</label>
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:    <input class="{!v.class?v.class:null}" id="{!'ui:listViewColumnCheckbox:'+globalId}" type="checkbox" checked="{!v.checked=='true'||v.checked==true?'checked':null}" onclick="{!c.changeHandler}" />
ruau/ruau-components/src/main/components/ui/listViewColumnCheckbox/listViewColumnCheckbox.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    limitations under the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:	<ruau:description>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:			A <code>ui:outputEmail</code> component represents an email output that is wrapped in an HTML <code>span</code> tag.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:			This component can be used with <code>ui:inputEmail</code>, which takes in an email input. 
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:			The email output is wrapped in an HTML anchor element and <code>mailto</code> is automatically appended to it.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:			This is a simple set up of a <code>ui:outputEmail</code> component.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:		<pre>&lt;ui:outputEmail value="abc@email.com" label="abc@email.com"/></pre>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:		<p>The previous example renders the following HTML.</p>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:		<pre>&lt;a href="mailto:abc@email.com" class="uiOutputEmail">abc@email.com&lt;/span></pre>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:	<ruau:example name="outputExample" ref="uiExamples:outputExample" label="Using the Output Components">
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:    	<p>This example shows how you can bind data to the output components by using component attributes.</p>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:	</ruau:example>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify outputEmail can display label.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testLabel: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : 'ruau-test@salesforce.com', label: 'Email us'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        	var link = component.find("link").getElement();
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertEquals('Email us', $A.test.getText(link), "Value attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertTrue(ruau.test.contains(link.href,'mailto:ruau-test@salesforce.com'), "Value attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify outputEmail displays email as default label.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testLabelEmpty: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : 'ruau-test@salesforce.com', label: ''},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        	var link = component.find("link").getElement();
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertTrue(ruau.test.contains(link.href,'mailto:ruau-test@salesforce.com'), "Value attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertEquals('ruau-test@salesforce.com', $A.test.getText(link), "Label attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify outputEmail can display email.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testValue: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : 'ruau-test@salesforce.com', 'class' : 'myClass'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        	var link = component.find("link").getElement();
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        	ruau.test.assertTrue(ruau.test.contains(link.href,'mailto:ruau-test@salesforce.com'), "Value attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertEquals('ruau-test@salesforce.com', $A.test.getText(link), "Label attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertTrue($A.util.hasClass(link, "myClass"), "myClass class not correctly added");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify outputEmail displays the link even if the email address is wrong as we don't want to
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * do any validation for display
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testValueInvalid: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : 'salesforce.com'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        	var link = component.find("link").getElement();
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertTrue(ruau.test.contains(link.href,'mailto:salesforce.com'), "Value attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertEquals('salesforce.com', $A.test.getText(link), "label attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify outputEmail sets chains through class attribute even for invalid email addresses
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testValueInvalidWithClass: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : 'salesforce.com', 'class' : 'myClass'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertTrue($A.util.hasClass(component.find("link").getElement(), "myClass"), "myClass class not correctly added");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            ruau.test.assertEquals('salesforce.com', $A.test.getText(component.find("link").getElement()), "label attribute not correct");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify empty value still displays tag without the href.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    testValueEmptyString: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : '', label : 'email me'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:             $A.test.assertEquals(null, component.getElement(), "unexpected elements");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:     * Verify all-whitespace value still displays tag without the href.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:    _testValueOnlyWhitespace: {
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:        attributes : {value : '    ', label : 'email me'},
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailTest.js:            $A.test.assertEquals(null, component.getElement(), "unexpected elements");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:<ruau:component extends="ui:output" extensible="true" support="GA" access="GLOBAL" description="Displays an email address in an HTML anchor (&lt;a&gt;) element. The leading and trailing space are trimmed.">
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    <ruau:if isTrue="{!v.value != null &amp;&amp; v.value != ''}">
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:        <ruau:if isTrue="{!v.actionable}">
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:            <a ruau:id="link" href="{!'mailto:'+v.value}" class="{!v.class}">{!v.label == null || v.label == '' ? v.value : v.label}</a>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:            <ruau:set attribute="else">
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:                <ui:outputText class="{!v.class}" value="{!v.value}"/>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:            </ruau:set>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:        </ruau:if>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:    </ruau:if>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js:        // trimming whitespaces
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js:        var value = component.get('v.value');
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js:        component.set('v.value', $A.util.trim((value)));
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js:        var label = component.get('v.label');
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmailController.js:        component.set('v.label', $A.util.trim((label)));
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/outputEmail/outputEmail.css:.uiOutputEmail.invalid{
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewColumnHeader/listViewColumnHeader.cmp:<ruau:component extends="ui:listViewColumn" extensible="true" support="GA" description="A simple column template definition, describes a barebones table header cell."><th id="{!v.id?v.id:null}" class="{!v.class?v.class:null}" rowspan="{!v.rowSpan?v.rowSpan:null}" colspan="{!v.colSpan?v.colSpan:null}" scope="{!v.scope&amp;&amp;!v.headers?v.scope:null}" headers="{!v.headers&amp;&amp;!v.scope?v.headers:null}" width="{!v.width?v.width:null}" title="{!v.tooltip?v.tooltip:null}">{!v.body}</th></ruau:component>
ruau/ruau-components/src/main/components/ui/change/change.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/change/change.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/change/change.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/change/change.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/change/change.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/change/change.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/change/change.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/change/change.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/change/change.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/change/change.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the content of a component or the state has changed."></ruau:event>
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:<ruau:component extends="ui:action" description="A checkbox used in ui:dataGrid that enables row-level click events to bubble up to the grid.">
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:	<ruau:attribute name="disabled" type="Boolean"/>
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:	<ui:inputCheckbox ruau:id="cb" value="{!v.value}" click="{!c.handleClick}" label="{!v.label}" labelClass="{!v.labelClass}" disabled="{!v.disabled}"/>
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckbox.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js:	handleClick: function (cmp, evt) {
ruau/ruau-components/src/main/components/ui/actionCheckbox/actionCheckboxController.js:		cmp.set("v.value", cmp.find('cb').get("v.value"));
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js:    afterRender : function(component, helper) {     
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js:    	//need to update attribute in afterRender lifecycle so that it can reference other components from it's valueProvider
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js:    	var helper = component.getDef().getHelper();
ruau/ruau-components/src/main/components/ui/label/labelRenderer.js:    	helper.updateAttribute(component);    	
ruau/ruau-components/src/main/components/ui/label/label.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/label/label.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/label/label.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/label/label.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/label/label.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/label/label.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/label/label.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/label/label.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/label/label.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/label/label.css:.THIS.uiLabel-top, .THIS.uiLabel-bottom{
ruau/ruau-components/src/main/components/ui/label/label.css:	display: block;
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/label/labelHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:	updateAttribute: function(cmp){
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        var forVal = cmp.get("v.for");
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        if (forVal) {
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        	var gId;
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        	if ($A.util.isString(forVal)) {
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                var valueProvider = cmp.getAttributeValueProvider();
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                //try find the target component for the "for" attribute from valueProvider
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                var refCmp = valueProvider.find(forVal);
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                	//use first one in the list if there are multiples
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                	gId = refCmp.getGlobalId();
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                	//try as globalId
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:                	gId = $A.componentService.get(forVal) ? forVal : null;
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        	} else if ($A.util.isObject(forVal) && forVal.getGlobalId) {
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        		gId = forVal.getGlobalId();
ruau/ruau-components/src/main/components/ui/label/labelHelper.js:        		//update dom element directly
ruau/ruau-components/src/main/components/ui/label/label.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/label/label.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/label/label.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/label/label.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/label/label.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/label/label.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/label/label.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/label/label.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/label/label.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/label/label.cmp:<ruau:component extensible="true" description="The label displayed on an input component. To bind a label to an input component, use the for attribute.">
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<ruau:attribute name="label" type="String" description="The text of the label." />
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<ruau:attribute name="class" type="String" description="A CSS style to be attached to the label." />		
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<ruau:attribute name="labelDisplay" default="true" type="Boolean" description="Specifies whether the label is displayed. If not, we add a hidden text for accessibility purpose." />
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<ruau:attribute name="for" type="Object" description="Specified to indicate a component with which the label is to be associated. This attribute can accept raw string, localId, globalId, or the component object. If the value is resolved to a component, the global id of the component will be used in the output." />
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<ruau:attribute name="requiredIndicator" type="Ruue.Component[]" description="A component that displays the indicator for the required field. " />
ruau/ruau-components/src/main/components/ui/label/label.cmp:	<label class="{!v.class}" ruau:id="labelElement" for="{!v.for}">
ruau/ruau-components/src/main/components/ui/label/label.cmp:		<span class="{!v.labelDisplay ? null : 'assistiveText' }">{!v.label}</span>
ruau/ruau-components/src/main/components/ui/label/label.cmp:		{!v.requiredIndicator}
ruau/ruau-components/src/main/components/ui/label/label.cmp:	</label>	
ruau/ruau-components/src/main/components/ui/label/label.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/list/list.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/list/list.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/list/list.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/list/list.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/list/list.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/list/list.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/list/list.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/list/list.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/list/list.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/list/list.cmp:<ruau:component
ruau/ruau-components/src/main/components/ui/list/list.cmp:    extends="ui:abstractList"
ruau/ruau-components/src/main/components/ui/list/list.cmp:    description="A list component that iterates over and displays the items in the ui:dataProvider component.">
ruau/ruau-components/src/main/components/ui/list/list.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/main/components/ui/list/list.cmp:	<ul class="{!v.class}">
ruau/ruau-components/src/main/components/ui/list/list.cmp:    	<ruau:iteration items="{!v.items}" var="{!v.itemVar}" body="{!v.itemTemplate}"/>
ruau/ruau-components/src/main/components/ui/list/list.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/list/listController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/list/listController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/list/listController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/list/listController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/list/listController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/list/listController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/list/listController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/list/listController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/list/listController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/list/listController.js:        var dataProvider = component.get("v.dataProvider[0]");
ruau/ruau-components/src/main/components/ui/list/listController.js:        if(dataProvider && dataProvider.getModel()) {
ruau/ruau-components/src/main/components/ui/list/listController.js:        	component.set("v.items", dataProvider.get("m.items"));
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:<ruau:event access="GLOBAL" support="GA" type="COMPONENT" description="Indicates that the menu trigger is clicked.">
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:    <ruau:attribute name="focusItemIndex" type="Integer" default="0" description="The index of the item which should be on focus when the menu displays."/>
ruau/ruau-components/src/main/components/ui/menuTriggerPress/menuTriggerPress.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	//number of milliseconds to wait before navigating to the next page with arrow key
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	//number of pixels the scroller has moved before handling the scrollMove event
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	//indicates only the selected page is visible or not
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    //Minimum distance to swipe to find out the intended swipe direction
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    //navContainer height, hardcode for now so it does not require updating the size dynamically if width and height is set
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    //number of previous or next pages to mark as visible while user is swiping
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		this.initPages(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var carouselSize = this.getCarouselSize(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._width = carouselSize.width;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp.set('v.priv_carouselStyle', this.getSizeStyle(carouselSize.width, carouselSize.height));
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageCmps = this.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pageCmps && pageCmps.length > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var snap = this.getSnap(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (snap) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				cmp.set('v.priv_snap', snap);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				var totalWidth = cmp._width * pageCmps.length;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				cmp.set('v.priv_scrollerWidth',	totalWidth + 'px');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	initPages: function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageModels = this.getPageModels(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pageCmps = this.getPageComponents(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			page, pageSuper, pageTmp, snap = this.getSnap(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pageHeight = this.getPageSize(cmp).height,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pages = [];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		//reset current page;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp.set('v.priv_currentPage', -1);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pageCmps && pageCmps.length > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//TODO: need a better solution to handle iteration inside the pageComponents
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (pageCmps[0].isInstanceOf('ruau:iteration')) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				pageCmps = this.getPageComponentsFromIteration(pageCmps[0]);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			for ( var i = 0; i < pageCmps.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				page = pageCmps[i];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				pageSuper = page.getSuper();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				//append page components to page container body
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				if ($A.util.isComponent(page) && page.isInstanceOf("ui:carouselPage")) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:                    page.autoDestroy(false);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp = pageSuper.isInstanceOf('ui:carouselPage') ? pageSuper : page;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					//page index starts with 1
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.pageIndex', i + 1);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.parent', [cmp]);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.priv_width', cmp._width);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.priv_height', pageHeight);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.priv_visible', isVisible);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.priv_snap', snap);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pageTmp.set('v.priv_continuousFlow', isContinuousFlow);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					pages.push(page);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp.set('v.pageComponents', pages, true);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		} else if (pageModels.length > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			for ( var i = 0; i < pageModels.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				page = pageModels[i];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				//create new instance of carousePage and pass pageModel to it
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				 var component=$A.componentService.newComponentDeprecated({
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            componentDef:{descriptor: 'markup://ui:carouselPage'},
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            //page index starts with 1
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            attributes:{values: {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            	'pageModel' : page,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            	'pageIndex' : i + 1,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            	'parent' : [cmp],
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            	'priv_snap' : snap,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			            	'priv_height' : pageHeight,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:                component.autoDestroy(false);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				pages.push(component);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp.set('v.pageComponents', pages, true);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		this.initPageIndicator(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	initPageIndicator : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var indCmp = this.getPageIndicatorsComponent(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			indCmp.set('v.pageComponents', cmp.get('v.pageComponents'));
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			indCmp.addHandler('pagerClicked', cmp, 'c.pagerClicked');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			indCmp.addHandler('pagerKeyed', cmp, 'c.pagerKeyed');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	attachEvents : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var el = cmp.getElement();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var helper = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var hasTouch = 'ontouchstart' in window;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._startEvt = hasTouch ? 'touchstart' : 'mousedown';
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._moveEvt = hasTouch ? 'touchmove' : 'mousemove';
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._resizeEvt =  hasTouch ? 'orientationchange' : 'resize';
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._onStart = function(e) {helper.onStart(cmp, e)};
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		$A.util.on(el, cmp._startEvt, cmp._onStart);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		$A.util.on(el, 'click', cmp._onClick, true); //useCapture
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	detachEvents : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var el = cmp.getElement();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var hasTouch = 'ontouchstart' in window;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		$A.util.removeOn(el, cmp._startEvt, cmp._onStart);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	onStart: function(cmp, evt) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var point = evt.touches && evt.touches.length == 1 ? evt.touches[0] : evt;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._startPos = {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			startx: point.pageX,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			starty: point.pageY
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (cmp._startPos && this.hasMoved(cmp, evt, this.HORIZONTAL)) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    		//swiping horizontally, stop event from bubbling up to prevent parent scroller from moving
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			evt.stopPropagation();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (this.hasMoved(cmp, evt)) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			$A.util.squash(evt, true);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		delete cmp._startPos;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Check whether the mouse/touch past the boundary since it started
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	hasMoved : function(cmp, evt, direction) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var startPos = cmp._startPos
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (!startPos) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			return false;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var point = evt.changedTouches && evt.changedTouches.length == 1 ? evt.changedTouches[0] : evt;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:        var dx = point.pageX - startPos.startx,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            dy = point.pageY - startPos.starty,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            y = Math.abs(dy),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            x = Math.abs(dx);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageComponentsFromIteration : function(iterCmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var body = iterCmp.get('v.body'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pageCmps = [];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		for (var i=0; i< body.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (body[i].isInstanceOf('ruau:iteration')) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				pageCmps = pageCmps.concat(this.getPageComponentsFromIteration(body[i]));
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			} else if (body[i].isInstanceOf("ui:carouselPage")) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				pageCmps.push(body[i]);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return pageCmps;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Handle window resize or orientationchange event
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		//need to call getConcreteComponent() in case there's a sub-component that extends this component
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (cmp.isValid() && cmp.getConcreteComponent().isRendered()) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var me = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var selectedPage = me.getSelectedPage(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var scroller = me.getScroller(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			me.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//Need to scroll if not on the first page to reset the x position after resize
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//TODO: this should be fixed inside ui:scroller instead of here
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (selectedPage > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					window.clearTimeout(cmp._scrollToTimeout)
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				//need to wait for scroller to finish refreshing
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					var curPage = me.getSelectedPage(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					if (curPage == selectedPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:						scroller.scrollToPage(--selectedPage, null, 0);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Update carousel and page size if carousel width is not pre-defined
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	updateSize: function(cmp, force) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var width = cmp.get('v.width'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pages = this.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		//need to update size width if carousel width and height is not explicitly set
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pages.length > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var carouselSize = this.getCarouselSize(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            // Do not update the carousel if the width is 0
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (carouselSize.width > 0) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    			this.updateCarouselSize(cmp, pages, carouselSize, force);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	updateCarouselSize: function(cmp, pages, carouselSize, force) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var cStyle = this.getSizeStyle(carouselSize.width, carouselSize.height);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (cStyle !== cmp.get('v.priv_carouselStyle') || force) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp.set('v.priv_carouselStyle', cStyle);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp.set('v.priv_scrollerWidth', carouselSize.width * pages.length + 'px');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.updatePageSize(cmp, pages, carouselSize);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	updatePageSize: function(cmp, pages, carouselSize) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageSize = this.getPageSize(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		for (var i=0; i< pages.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var e = pages[i].get('e.updateSize');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//page width always same as carousel width
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			e.setParams({pageSize: {width: carouselSize.width, height: pageSize.height}});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var style = width ? 'width:' + width + 'px;' : '';
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getCarouselSize: function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var width = cmp.get('v.width'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var el = cmp.getElement();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				width = el.parentNode.offsetWidth;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageSize: function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var width = cmp.get('v.width'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			navContainer = cmp.find('navContainer');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (navContainer && height) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var el = navContainer.getElement();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Update page content
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	updatePage: function(cmp, pageIndex, pageContentCmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageCmp = this.getPageComponentFromIndex(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var e = pageCmp.get('e.update');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		e.setParams({pageComponent: pageContentCmp});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	handlePagerClicked : function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		this.selectPage(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Handle carousel indicator key events
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	handlePagerKeyed : function(cmp, evt) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var keyCode = evt.getParam("event").keyCode;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:        // left arrow or right arrow
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            var pageComps = this.getPageComponents(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            	prevPage = evt.getParam("pageIndex"),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            	pageIndex = prevPage;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            if (keyCode === 37 && pageIndex > 0) {  // left arrow
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            	pageIndex--;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            if (keyCode === 39 && pageIndex < pageComps.length) {  // right arrow
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            	pageIndex++;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            if (cmp._keyPageSelectionTimeout != null) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    			window.clearTimeout(cmp._keyPageSelectionTimeout);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    			cmp._keyPageSelectionTimeout = null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    		// When coming from a key event, wait a second to commit to the page
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            var me = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    		cmp._keyPageSelectionTimeout = window.setTimeout(function() {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    			cmp._keyPageSelectionTimeout = null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    			me.selectPage(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:            if (evt.preventDefault) evt.preventDefault();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Handle scrollStart event
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	handleScrollMove: function(cmp, evt) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var scroller = this.getScroller(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			nextPage,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			toPage,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			prevSelectedPage = cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (scroller.absDistX > this.SCROLL_START_THRESHOLD && !cmp._isScrollStartProcessed) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var pages = this.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp._isScrollStartProcessed = true;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				//scroller page starts with 0;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				nextPage = scroller.currPageX + 2;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				toPage = Math.min(nextPage + this.NUMBER_OF_PAGES_TO_SHOW, pages.length);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				nextPage = scroller.currPageX;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				toPage = Math.max(1, nextPage - this.NUMBER_OF_PAGES_TO_SHOW);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (nextPage > 0 && nextPage <= pages.length) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				this.showPages(cmp, nextPage, toPage);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Handle scroll event
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	handleScrollEnd: function(cmp, evt) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var scroller = this.getScroller(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//scroller page starts with 0
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			currentPageX = scroller.currPageX + 1,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			prevSelectedPage = cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._isScrollStartProcessed = false;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		cmp._isMoving = false;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (prevSelectedPage == currentPageX) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//scrolled back to the same page
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var action = cmp.get("v.onPageChange");
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (action) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			action.runDeprecated(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		this.pageSelected(cmp, currentPageX);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	showPage: function(pageCmp, pageIndex){
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var e = pageCmp.get('e.show');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		e.setParams({'pageIndex' : pageIndex});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	hidePage: function(pageCmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var e = pageCmp.get('e.hide');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		e.setParams({'pageIndex' : pageIndex});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Page is selected, delegate the event to page component
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	pageSelected: function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var prevSelectedPage = cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var me = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (prevSelectedPage == pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var curPageCmp = this.getPageComponentFromIndex(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (curPageCmp && curPageCmp.isRendered()) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var prePageCmp = this.getPageComponentFromIndex(cmp, prevSelectedPage);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.setSelectedPage(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			me.firePageSelectedEventToPageIndicator(cmp, curPageCmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp.set('v.priv_currentPage', pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			me.firePageSelectedEventToPage(prePageCmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			me.firePageSelectedEventToPage(curPageCmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var pageModel = me.getPageModelFromIndex(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				if (cmp.isValid()) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					var e = cmp.get('e.loadPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					e.setParams({pageComponent: curPageCmp, pageModel: pageModel, pageIndex: pageIndex});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					//Fire pageSelected to let any sub-components that are handling it know the change has been done.
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					cmp.get("e.pageSelected").setParams({pageComponent: curPageCmp, "pageModel" : pageModel, pageIndex: pageIndex}).fire();
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			me.delayHideAllUnselectedPages(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	showPages: function(cmp, from, to) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var that = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pages = this.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if ($A.util.isNumber(from) && $A.util.isNumber(to) && from > 0 && from <= pages.length && to > 0 && to <= pages.length) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var pageCmp = pages[from-1]
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.showPage(pageCmp, from);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//show rest of the pages for smoother swiping
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (to > from && to <= pages.length) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				for (var i=from + 1; i<= to; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					this.showPage(pages[i-1], i);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				for (var i=from - 1; i >= to; i--) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:					this.showPage(pages[i-1], i);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			for (var i=1; i<= pages.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				this.showPage(pages[i-1], i);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	hideAllUnselectedPages: function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (!cmp.isValid() || cmp.isValid() && cmp.get('v.continuousFlow')) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (cmp._delayHidePagesTimer) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			window.clearTimeout(cmp._delayHidePagesTimer);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp._delayHidePagesTimer = null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.delayHideAllUnselectedPages(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pages = this.getPageComponents(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			selectedPage = this.getSelectedPage(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		for (var i=1; i<= pages.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			if (i != selectedPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				this.hidePage(pages[i-1], i);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Fire pageSelected event to page component
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	firePageSelectedEventToPage: function(pageCmp, selectedPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pageCmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var e = pageCmp.get('e.pageSelected');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			e.setParams({pageIndex : selectedPage});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	firePageSelectedEventToPageIndicator: function(carouselCmp, pageCmp, selectedPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageIndicator = this.getPageIndicatorsComponent(carouselCmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pageIndicator && pageIndicator.isRendered()) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var pageId = pageCmp.getElement().id,
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				e = pageIndicator.get('e.pageSelected');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			e.setParams({pageIndex : selectedPage, pageId: pageId});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Selecting a page from non-scrolling events
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	selectPage : function(cmp, pageIndex, time) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pages = this.getPageComponents(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			prevSelectedPage = cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pageIndex > 0 && pageIndex <= pages.length && prevSelectedPage !== pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//show all pages in between before scrolling for better UI experience
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var from = prevSelectedPage == -1 ? pageIndex : (prevSelectedPage < pageIndex ? ++prevSelectedPage : --prevSelectedPage);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//save the pageIndex, so that it won't be hide by the callback in the timer, which could cause flickering and performance issue
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.setSelectedPage(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			this.showPages(cmp, from, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var scroller = this.getScroller(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			//scroller page starts with 0
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			scroller.scrollToPage(--pageIndex, null, time);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	selectDefaultPage : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var curPage = cmp.get('v.priv_currentPage'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (!scroller || curPage > -1) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		this.selectPage(cmp, cmp.getConcreteComponent().getDef().getHelper().getDefaultPageIndex(cmp), 0);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getDefaultPageIndex : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var	pageCmps = this.getPageComponents(cmp),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			defaultPage = cmp.get('v.defaultPage'),
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pageToSelect = 1;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (defaultPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			pageToSelect = defaultPage;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		    for (var i = 0; i < pageCmps.length; i++) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		        if (pageCmps[i].get('v.isDefault')) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		        	//page starts at 1
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		        	pageToSelect = i + 1;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return pageToSelect;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageComponents:function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return cmp.get('v.pageComponents') || [];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageModels:function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return cmp.get('v.pageModels');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageModelFromIndex: function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pageModels = this.getPageModels(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		//page start from 1
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		pageIndex--;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return pageModels ? pageModels[pageIndex] : null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageComponentFromIndex: function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var pages = this.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		//page start from 1
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		pageIndex--;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (pages && pageIndex >=0 && pageIndex < pages.length) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			return pages[pageIndex];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getPageIndicatorsComponent : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var navContainer = cmp.find('navContainer');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var indicators = navContainer ? navContainer.get('v.body') : null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return cmp.get('v.continuousFlow') != true && indicators ? indicators[0] : null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	getSnap : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var id = cmp.getGlobalId().replace(';', '_').replace(':', '-');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		return cmp.get('v.continuousFlow') != true ? 'section.snap-class-' + id + '' : null;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	 * Buffer the execution of the function, if during the time interval, the function is call again, the previous execution will be canceled
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	delayHideAllUnselectedPages : function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		if (!cmp._delayHidePagesTimer) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var that = this;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			cmp._delayHidePagesTimer = window.setTimeout(function(){that.hideAllUnselectedPages(cmp)}, 500);
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:	showLoadingIndicator: function (cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:		var spinner = cmp.get("v.spinner")[0];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var evt = spinner.getEvent("toggle");
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				evt.setParams({"isVisible": true});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    hideLoadingIndicator: function (cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    	var spinner = cmp.get("v.spinner")[0];
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:			var evt = spinner.getEvent("toggle");
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:				evt.setParams({"isVisible": false});
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    setSelectedPage: function(cmp, selectedPage) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    	cmp._selectedPage = selectedPage;
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    getSelectedPage: function(cmp) {
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    	return cmp._selectedPage || cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselHelper.js:    	this.detachEvents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:	onPageComponentsChanged: function(cmp, evt, helper) {		
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	helper.initPages(cmp); 
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle scrollStart event coming from scroller
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	helper.handleScrollMove(cmp, evt);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle scrollEnd event coming from scroller
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	helper.handleScrollEnd(cmp, evt);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle scroller refreshed event
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:		//fire selectDefaultPage only after the the scroller has initialized and ready
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:		var e = cmp.getEvent("selectDefaultPage");
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle window resize event
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    onRefreshCurrentPage: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	var curPage = cmp.get('v.priv_currentPage');
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	var pages = helper.getPageComponents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    	if (curPage > 0 && curPage <= pages.length) {
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:	    	var e = cmp.get('e.loadPage'),
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:	    		pageCmp = helper.getPageComponentFromIndex(cmp, curPage),
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:	    		pageModel = helper.getPageModelFromIndex(cmp, curPage);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:			e.setParams({pageModel: pageModel, pageComponent: pageCmp, pageIndex: curPage});    			
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle clicking event from page indicator
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    pagerClicked: function (cmp, evt, helper) {    	
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:        var pageIndex = evt.getParam("pageIndex");
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:        helper.handlePagerClicked(cmp, pageIndex);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:        if (evt.preventDefault) evt.preventDefault();
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:     * Handle key event from page indicator
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    pagerKeyed: function (cmp, evt, helper) {	
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:        helper.handlePagerKeyed(cmp, evt);
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    selectDefaultPage: function (cmp, evt, helper) {   	
ruau/ruau-components/src/main/components/ui/carousel/carouselController.js:    		helper.selectDefaultPage(cmp, evt);
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	position: relative;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	background: #2e4153;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	display: block;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	backface-visibility:hidden;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	-webkit-backface-visibility: hidden;		
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-nav-container { 	
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	position: relative;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	padding: 20px 0;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	display: block;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css:	text-align: center;	
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-pages {
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	position: relative;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	clear: both;	
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-pages .page-list { 
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	padding: 0px;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	margin: 0px;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-nav-position-top {
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-nav-position-bottom {
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: .THIS .carousel-pages .carousel-page { 	
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	display: inline-block;
ruau/ruau-components/src/main/components/ui/carousel/carousel.css: 	vertical-align: top;    
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:    // Excluded on IE7/8 because uses unsupported HTML5 features
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:	testCarouselNavTop: {
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			var nav = component.find('navContainer');
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			$A.test.assertTrue($A.util.hasClass(nav.getElement(),'carousel-nav-position-top'));
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:	testCarouselNavBottom: {
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:		attributes : {pageIndicatorPosition : 'bottom'},
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			var nav = component.find('navContainer');
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			$A.test.assertTrue($A.util.hasClass(nav.getElement(),'carousel-nav-position-bottom'));
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:	testContinousFlowNavigationIndicatorsDoNotDisplay: {
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:		attributes : {continuousFlow : 'true'},
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			var nav = component.find('navContainer');
ruau/ruau-components/src/main/components/ui/carousel/carouselTest.js:			$A.test.assertTrue($A.util.isUndefinedOrNull(nav,'Navigation indicators should not be displayed'));
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		//update size in case carousel width is not specified
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		helper.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		helper.attachEvents(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		helper.selectDefaultPage(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		var shouldRerender = false;
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		var forceUpdate = cmp.isDirty("v.pageComponents");
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:		if (cmp.isDirty("v.width") || cmp.isDirty("v.height") || cmp.isDirty("v.priv_carouselStyle") || cmp.isDirty("v.pageComponents")) {
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:			helper.updateSize(cmp, forceUpdate);
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:			if (forceUpdate) {
ruau/ruau-components/src/main/components/ui/carousel/carouselRenderer.js:				helper.selectDefaultPage(cmp);
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:<ruau:component  extends="ui:interactive"  extensible="true" 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:	 description="A tabset component that enables swiping through groups of related content types in addition to standard keyboard, touch, and mouse interactions. The carousel provides page indicators by default and supports horizontal overflow of pages.">
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="title" type="String" description="Title of the carousel" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="width" type="Integer" description="Width of the carousel in pixels" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="height" type="Integer" description="Height of the carousel in pixels" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="useTransition" type="Boolean" default="true" description="" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="pageIndicatorPosition" type="String" default="top" description="Position of the page indicator. Acceptable values are 'top' and 'bottom'. " />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="continuousFlow" type="Boolean" default="false" description="Set to true if the carousel pages should flow continuously. The default is 'false'." />		
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="defaultPage" type="Integer" description="Default page to display. Setting this will override the 'isDefault' attribute in the ui:carouselPage component." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="pageModels" type="Object[]" description="The model used to create a carousel page." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="pageComponents" type="Ruue.Component[]" description="Carousel page components that is rendered as carousel pages." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="navigationTabs" type="Boolean" default="false" description="Enable navigational tabs on the pageIndicator"/>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="onPageChange" type="Ruue.Action" description="The action invoked when the carousel changes to a different page." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="spinner" type="Ruue.Component[]" description="Spinner component used during asynchronous loading. Must fire and handle a 'toggle' event with an isVisible attribute." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="priv_currentPage" type="Integer" description="PRIVATE - the currently selected page index." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="priv_carouselStyle" type="String" description="PRIVATE - inline style of the carousel container." />				 	
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="priv_scrollerWidth" type="String" description="PRIVATE - the scroller width in pixels." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="priv_snap" type="String" description="PRIVATE - Scroller snap option."/>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:attribute name="priv_scrollContentClass" type="String" description="PRIVATE - Scroller content css class." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:registerevent name="selectDefaultPage" type="ui:carouselPageEvent" description="The event fired when the default page is selected."/>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    	<ruau:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the page is selected."/>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    	<ruau:registerevent name="loadPage" type="ui:carouselPageEvent" description="The event fired when the page is loaded." />    	
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:registerevent name="scrollEnd" type="ui:scrollEnd" description="The event fired when the end of the scroller is reached." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:registerevent name="refreshCurrentPage" type="ui:carouselPageEvent" description="Fire this event to refresh the current carousel page." />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:    	<ruau:handler name="selectDefaultPage" action="{!c.selectDefaultPage}" />    	    
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:handler name="init" value="{!this}" action="{!c.onInit}" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:handler name="change" value="{!v.pageComponents}" action="{!c.onPageComponentsChanged}" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<ruau:handler name="refreshCurrentPage" action="{!c.onRefreshCurrentPage}" />
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		<article class="{!v.class}" style="{!v.priv_carouselStyle}" role="article">
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:				<h2 class="assistiveText">{!v.title}</h2>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:				<ruau:if isTrue="{!v.continuousFlow != true &amp;&amp; v.pageIndicatorPosition == 'top'}" >
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:					<nav ruau:id="navContainer" class="{!'carousel-nav-container carousel-nav-position-' + v.pageIndicatorPosition}" role="tablist">        		 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:	        			<ui:carouselPageIndicator navigationTabs="{!v.navigationTabs}" />        		 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:					</nav>					
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:				</ruau:if>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		    	<div ruau:id="pageContainer" class="carousel-pages">
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		    		<!--TODO: each page should has its own spinner -->
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		    		<ruau:if isTrue="{!v.spinner.length > 0}"> 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			   		</ruau:if>
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	<ui:scrollerDeprecated ruau:id="scroller"			    		
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	 	class="scroll-container"			    	 	
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	   	vScroll="false"			    	   				    	   				    	   
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	   	snap="{!v.priv_snap}"
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	   	scrollContentClass="{!v.priv_scrollContentClass}"
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:			    	   	useTransition="{!v.useTransition}">
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:							{!v.pageComponents}
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:					</ui:scrollerDeprecated>					
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:				<ruau:if isTrue="{!v.continuousFlow != true &amp;&amp; v.pageIndicatorPosition == 'bottom'}" >
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:					<nav ruau:id="navContainer" class="{!'carousel-nav-container carousel-nav-position-' + v.pageIndicatorPosition}" role="tablist">        		 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:	        			<ui:carouselPageIndicator />      		 
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:					</nav>	
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:				</ruau:if>		          
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:		</article>		
ruau/ruau-components/src/main/components/ui/carousel/carousel.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    limitations under the License.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:<ruau:documentation>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:	<ruau:description>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:			<code>ui:carousel</code> displays a list of items horizontally where users can swipe through the list or click through the page indicators. 
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:			Note that the carousel will not be accessible if <code>visible="false"</code> is set on the <code>ui:carouselPageIndicatorItem</code>, since this setting hides the page indicators from view. 
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:			Similarly, <code>continuousFlow="true"</code> hides the page indicators from view.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:		    You can use <code>ui:carouselPage</code> in a <code>ui:carousel</code> component to create carousel pages.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:		    To add carousel pages, use <code>&lt;ruau:set attribute="pageComponents"&gt;</code> in the <code>ui:carousel</code> component and nest the <code>ui:carouselPage</code> components in the <code>ruau:set</code> tag.</p>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:		    For a continuous horizontal flow, use the <code>continuousFlow="true"</code> attribute in <code>ui:carousel</code>.
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:		    <p>If multiple carousels are used, specify the <code>width</code> and <code>height</code> attributes for each carousel. Additionally, ensure that the child carousel has a smaller dimension than its parent carousel. If the <code>width</code> and <code>height</code> attributes are not specified, these values default to the screen length and height.</p>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:	</ruau:description>	
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:		<ruau:example name="carousel" ref="ruaudocs:demoCarousel" label="Using ui:carousel">
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:    	<p>This example shows a carousel that loads content from a client-side model.</p>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:	</ruau:example>
ruau/ruau-components/src/main/components/ui/carousel/carousel.ruaudoc:</ruau:documentation>
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/copy/copy.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/copy/copy.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/copy/copy.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the user has copied content to the clipboard."></ruau:event>
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:<ruau:event type="COMPONENT" support="GA" description="The standard event object that is fired for listView events.">
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    <ruau:attribute name="type" type="String"      description="The type of event that was fired."/>
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    <ruau:attribute name="context" type="Object"   description="Context relevant to the execution of the event."/>
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:    <ruau:attribute name="data" type="Object"      description="Context sensitive data relevant to the execution of the event."/>
ruau/ruau-components/src/main/components/ui/listViewEvent/listViewEvent.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.initDataProvider(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.initItems(cmp, cmp.get('v.items'), cmp.get('v.defaultSelectedItem'));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var trigger = cmp.get('v.trigger'),
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			triggerLabel = cmp.get('v.triggerLabel');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			if (triggerLabel) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				trigger[0].set("v.label", triggerLabel);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			trigger[0].addHandler('click', cmp, 'c.onOpen');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		} else if (triggerLabel) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var menuTrigger = $A.componentService.newComponentDeprecated({
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	            	"descriptor" : "markup://ui:menuTriggerLink"
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	            "attributes" : {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	            	"values" : {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	            		"label": triggerLabel
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			menuTrigger.addHandler('click', cmp, 'c.onOpen');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	initDataProvider: function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        var dataProviders = cmp.get("v.dataProvider");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if ($A.util.isArray(dataProviders)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        	cmp._dataProviders = dataProviders;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            for (var i = 0; i < dataProviders.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            	//add handler
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                dataProviders[i].addHandler("onchange", cmp, "c.handleDataChange");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (!cmp._sortOrderMap) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			cmp._sortOrderMap = {};
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//init sortOrderMap for default selected items
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var filteredItems = [], sList = [], fieldName, label;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				for (var i=0; i< selectedItems.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					cmp._sortOrderMap[selectedItems[i].fieldName] = {order: selectedItems[i].ascending ? this.CONSTANTS.ASC : this.CONSTANTS.DESC, selected: true};				
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var indx = 0;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i=0; i<items.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				if (typeof items[i].isSortable == 'undefined' || items[i].isSortable == true) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					fieldName = items[i].fieldName;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					label = items[i].label;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					if (!cmp._sortOrderMap[fieldName]) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						//default to ASC order
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						cmp._sortOrderMap[fieldName] = {order: this.CONSTANTS.ASC, index: indx, selected: false}; 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						cmp._sortOrderMap[fieldName].index = indx;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						//add to selected list
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						sList.push({value: fieldName, label: label, index: indx});
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					filteredItems.push({fieldName : fieldName, label: label});
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			cmp.set('v.defaultSelectedItems', selectedItems);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	handleOnOpen : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var items = cmp.get('v.items');		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.attachEventHandler(cmp);		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var selected = this.getDefaultSortBy(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//update selected item sort orders
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i=0; i< selected.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				if (cmp._sortOrderMap[selected[i].fieldName]) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					cmp._sortOrderMap[selected[i].fieldName].order = selected[i].ascending ? this.CONSTANTS.ASC : this.CONSTANTS.DESC;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//reset selectedItems to default
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//focus on the first selected default item 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var index = selected[0].index;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.appendElementToBody(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	handleOnCancel : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.removeEventHandler(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		cmp.set('v.visible', false, true);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.setVisible(cmp, false);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var action = cmp.get('v.onCancel');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if (action) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        	action.runDeprecated();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	handleApply : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.removeEventHandler(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		cmp.set('v.visible', false, true);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		this.setVisible(cmp, false);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var action = cmp.get('v.onApply');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (action) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var result = [], order;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var selectedItems = this.getSelectedMenuItems(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i=0; i < selectedItems.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				// append prefix for descending order
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				result.push({ sortBy: order + selectedItems[i].fieldName, label: selectedItems[i].label });
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			action.runDeprecated(result);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	 * Reset selected items and sort orders
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		/*var sMap = cmp._sortOrderMap;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		for (var prop in sMap) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			if (sMap.hasOwnProperty(prop)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				if (!sMap[prop].selected) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					//default to ASC order
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:					sMap[prop].order = this.CONSTANTS.ASC;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var menuItems = cmp.find('sorterMenuList').get('v.childMenuItems')		 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		for (var i=0; i < menuItems.length; i++) {			 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var item = menuItems[i];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				item.set('v.selected', false, true);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	 * Get default sortBy from data provider
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	getDefaultSortBy: function(cmp) {		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    	//TODO: need to support multiple data providers
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var sortBy = this.parseSortBy(cmp, cmp.get('v.defaultSelectedItems'));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		for (var i=0; i< sortBy.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			if (cmp._sortOrderMap[sortBy[i].fieldName]) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				//update item index
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				sortBy[i].index = cmp._sortOrderMap[sortBy[i].fieldName].index; 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	 * Parse sortBy string which are comma separated into an array of objects
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	parseSortBy: function(cmp, sortBy) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var ret = [];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var fieldName;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i=0; i<sortBy.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				//fieldName starts with "-" prefix means descending
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    			var fn = sortBy[i].substring(1); 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    			ret.push({fieldName: fn, ascending: false});
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    			ret.push({fieldName: sortBy[i], ascending: true});
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		} else if ($A.util.isArray(sortBy)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    triggerDataProvider: function(cmp, index) {    	
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if (index >= 0 && index < cmp._dataProviders.length) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            cmp._dataProviders[index].get("e.provide").fire();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (cmp.get('v.modal')) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			$A.util[visible ? 'addClass' : 'removeClass'](cmp.find('mask').getElement(),'open');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var el = cmp.find('sorterContainer').getElement();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			$A.util[visible ? 'addClass' : 'removeClass'](el,'open');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			$A.util[visible ? 'addClass' : 'removeClass'](el,'modal');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			$A.util[visible ? 'addClass' : 'removeClass'](cmp.find('sorterContainer').getElement(),'open');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	updateSortOrder : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var selectedItems = this.getSelectedMenuItems(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var values = [];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i=0; i<selectedItems.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				cmp._sortOrderMap[selectedItems[i].fieldName].order = selectedItems[i].isAscending ? this.CONSTANTS.ASC : this.CONSTANTS.DESC;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var menuList = cmp.find('sorterMenuList');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var values = [];		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var menuItems = menuList.get('v.childMenuItems');	         
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i = 0; i < menuItems.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				var c = menuItems[i];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			    	values.push({fieldName: c.get('v.value'), label: c.get('v.label'), index: i, isAscending: c.get('v.isAscending')});
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    return values;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var menuList = cmp.find('sorterMenuList');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var menuItems = menuList.get('v.childMenuItems');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var item;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			for (var i = 0; i < selectedItems.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:						item.set('v.isAscending', selectedItems[i].ascending);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			this.updateSortOrder(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	attachEventHandler : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		$A.util.on(document, 'keydown', this.getKeydownHandler(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		$A.util.on(document.body, this.getOnClickEventProp("onClickStartEvent"), this.getOnClickStartFunction(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        $A.util.on(window, 'orientationchange', this.getOrientationChangeHandler(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	removeEventHandler : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		$A.util.removeOn(document, 'keydown', this.getKeydownHandler(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		$A.util.removeOn(document.body, this.getOnClickEventProp("onClickStartEvent"), this.getOnClickStartFunction(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        $A.util.removeOn(window, 'orientationchange', this.getOrientationChangeHandler(cmp));
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	appendElementToBody : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (!cmp.get('v.modal')) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var id = this.CONSTANTS.CONTAINER_ELEMENT_ID;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var containerEl = document.getElementById(id);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var maskEl = cmp.find('mask').getElement();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var sorterEl = cmp.find('sorterContainer').getElement();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (!containerEl) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//attach the dom to the document body as a modal dialog
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		containerEl = document.createElement('div');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		containerEl.setAttribute('id', id);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		$A.util.addClass(containerEl, cmp.getConcreteComponent().getDef().getStyleClassName());
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		containerEl.appendChild(maskEl);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		containerEl.appendChild(sorterEl);    		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		document.getElementsByTagName("body")[0].appendChild(containerEl);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		} else if (!$A.util.contains(containerEl, sorterEl)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			containerEl.appendChild(maskEl);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			containerEl.appendChild(sorterEl);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:     * Update dialog size
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    updateSize : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	var containerEl = cmp.find('sorterContainer').getElement(); 
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		var isPhone = $A.get("$Browser.isPhone");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var viewPort = $A.util.getWindowSize(),
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				header = cmp.find('headerBar').getElement(),
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				menuListHeight = viewPort.height - header.offsetHeight;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			$A.util.addClass(cmp.find('sorterContainer').getElement(), 'phone');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			containerEl.style.width = viewPort.width + 'px';
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			containerEl.style.height = viewPort.height + 'px';
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//update sorter menu size to fill up the rest of the screen with the menu list
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			//update sorter menu size to fill up the rest of the screen with the menu list
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var header = cmp.find('headerBar').getElement(),
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				menuListHeight = containerEl.offsetHeight - header.offsetHeight;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	 * Handler for device orientation change event
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	getOrientationChangeHandler : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (!cmp._orientationChange) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			var helper = this;		
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			cmp._orientationChange = function(event) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				helper.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		return cmp._orientationChange;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:     * Constructs the handler for the DOM keydown event. Includes handlers for tab key (including shift+tab)
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    getKeydownHandler : function(cmp) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	if (!cmp._keydownHandler) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			cmp._keydownHandler = function(event) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		            case 9: // tab key, keep focus inside the dialog
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		            	var container = cmp.find('sorterContainer').getElement(),
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		    			currentFocus = document.activeElement,
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		    			applyBtn = cmp.find('set').getElement();  	
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	                    if (currentFocus === applyBtn && !shiftPressed) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	                        $A.util.squash(event, true);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		                break;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	return cmp._keydownHandler;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	getOnClickStartFunction: function(component) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if ($A.util.isUndefined(component._onClickStartFunc)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            var helper = this;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            var f = function(event) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    var touch = event.changedTouches[0];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    // record the ID to ensure it's the same finger on a
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    component._onStartId = touch.identifier;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    component._onStartX = touch.clientX;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    component._onStartY = touch.clientY;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    component._onStartX = event.clientX;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    component._onStartY = event.clientY;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            component._onClickStartFunc = f;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        return component._onClickStartFunc;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            var helper = this;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            var f = function(event) {            	
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                // ignore gestures/swipes; only run the click handler if it's a
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:				// click or tap
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                var clickEndEvent;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    var touchIdFound = false;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    for (var i = 0; i < event.changedTouches.length; i++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                        clickEndEvent = event.changedTouches[i];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                        if (clickEndEvent.identifier === component._onStartId) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                            break;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                var startX = component._onStartX, startY = component._onStartY;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                var endX = clickEndEvent.clientX, endY = clickEndEvent.clientY;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                if (Math.abs(endX - startX) > 0 || Math.abs(endY - startY) > 0) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                if (!helper.isElementInComponent(component.find('sorterContainer'), event.target)) {                	
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                    // Collapse the sorter
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:                	helper.handleOnCancel(component);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        // create the cache
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if ($A.util.isUndefined(this.getOnClickEventProp.cache)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            this.getOnClickEventProp.cache = {};
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        // check the cache
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        var cached = this.getOnClickEventProp.cache[prop];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if (!$A.util.isUndefined(cached)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            return cached;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        // fill the cache
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        this.getOnClickEventProp.cache["isTouchDevice"] = !$A.util.isUndefined(document.ontouchstart);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        if (this.getOnClickEventProp.cache["isTouchDevice"]) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            this.getOnClickEventProp.cache["onClickStartEvent"] = "touchstart";
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            this.getOnClickEventProp.cache["onClickEndEvent"] = "touchend";
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            this.getOnClickEventProp.cache["onClickStartEvent"] = "mousedown";
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:            this.getOnClickEventProp.cache["onClickEndEvent"] = "mouseup";
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:        return this.getOnClickEventProp.cache[prop];
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    isElementInComponent : function(component, targetElem) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:		if (!component || !targetElem) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:			return false;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    var componentElements = component.getElements();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    // go up the chain until it hits either a sibling or the root
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    var currentNode = targetElem;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	        for (var index = 0; index < componentElements.length ; index++) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	        currentNode = currentNode.parentNode;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:	    return false;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	var containerEl = document.getElementById(this.CONSTANTS.CONTAINER_ELEMENT_ID);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	if (containerEl) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    		$A.util.removeElement(containerEl);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterHelper.js:    	var sorterMenu = cmp.find('sorterMenu');
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:<ruau:component extensible="true" description="This component provides the user selected items with sort order based on the data from the data provider.">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="dataProvider" type="Ruue.Component[]" description="A list of data provider components. Use a ui:dataProvider component to provide list data."/>	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="class" type="String" description="A CSS style to be attached to the component. This style is added in addition to base styles output by the component." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="title" type="String" default="Sort" description="The title of this component." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="cancelLabel" type="String" default="Cancel" description="The label for the cancel button." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="applyLabel" type="String" default="Apply" description="The label for the apply button." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="visible" type="Boolean" default="false" description="Controls the visibility of the component."/>		
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="items" type="Object[]" description="An array of arbitrary map objects representing the rows of data in the list." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="defaultSelectedItems" type="Object" description="Default selected row item." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="triggerLabel" type="String" description="The text displayed on the trigger component." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="ascendingLabel" type="String" default="Ascending" description="Assistive text label for the ascending button" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="descendingLabel" type="String" default="Descending" description="Assistive text label for the descending button" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="trigger" type="Ruue.Component[]" description="Trigger component" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="modal" type="Boolean" default="true" description="Determines whether the component is a modal dialog." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="rowVar" type="String" description="The name by which to refer to the current data object inside of the sorter for each sorter row."/>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="rowDef" type="Ruue.ComponentDefRef[]" description="Component definition to use for each row in the list sorter"/> 	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="onApply" type="Ruue.Action" description="The action invoked when the user click on the apply button. The selected items are passed in as the argument. If the sort order is descending, the prefix '-' is appended to the the item." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="onOpen" type="Ruue.Action" description="The action invoked when the user click on the trigger to open the sorter component." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:attribute name="onCancel" type="Ruue.Action" description="The action invoked when the user click on the cancel button or hit ESC key to close the listSorter component." />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:registerEvent name="refresh" type="ui:refresh"/>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}" />	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:handler name="change" value="{!v.visible}" action="{!c.onVisible}" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	<ruau:handler name="refresh" action="{!c.refresh}" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:		<div ruau:id="trigger">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	    <div ruau:id="sorterContainer" class="{!v.class + ' listSorterContainer'}">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	    	<div class="body">            	           
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:				<ui:menu ruau:id="sorterMenu" class="sorterMenu">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:					<ui:menuList ruau:id="sorterMenuList" closeOnTabKey="false" visible="{!v.visible}" class="sorterMenuList scrollable" menuSelect="{!c.onMenuSelected}" menuExpand="{!c.onMenuExpand}" menuCollapse="{!c.onMenuCollapse}" closeOnClickOutside="false">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:						<ruau:iteration items="{!v.items}" var="{!v.rowVar}" body="{!v.rowDef}" />
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:			<div ruau:id="headerBar" class="headerBar">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            <a ruau:id="cancel" onclick="{!c.onCancel}" class="cancel button" href="javascript:void(0);">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            	{!v.cancelLabel}
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            </a>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            <span ruau:id="title" class="title">{!v.title}</span>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            <a ruau:id="set" onclick="{!c.onApply}" class="apply button" href="javascript:void(0);">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            	{!v.applyLabel}
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:	            </a>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:		<ruau:if isTrue="{!v.modal}">
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:			<div ruau:id="mask" class="listSorterMask">&nbsp;</div>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:		</ruau:if>
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: *         http://www.apache.org/licenses/LICENSE-2.0
