ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:     * These tests moved here due to bug W-1465202 - value attribute as empty string must be set in markup.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:     * TODO(W-1465202): Once bug is fixed, remove these tests and re-enable tests on components themselves.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:    testOutputDateEmptyStringValue: {
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:            $A.test.assertEquals("", $A.test.getText(component.find('date').getElement()), "Expected an empty span for outputDate.");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:    testOutputCurrencyEmptyStringValue: {
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:            $A.test.assertEquals("", $A.test.getText(component.find('currency').getElement()), "Expected an empty span for outputCurrency.");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:    testOutputDateTimeEmptyStringValue: {
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:            $A.test.assertEquals("", $A.test.getText(component.find('dateTime').getElement()), "Expected an empty span for outputDateTime.");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:    testOutputNumberEmptyStringValue: {
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:            $A.test.assertEquals("", $A.test.getText(component.find('number').getElement()), "Expected an empty span for outputNumber.");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:    testOutputPercentEmptyStringValue: {
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValueTest.js:            $A.test.assertEquals("", $A.test.getText(component.find('percent').getElement()), "Expected an empty span for outputPercent.");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    <ui:outputDate ruau:id="date" value=""/>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    <ui:outputCurrency ruau:id="currency" value=""/>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    <ui:outputDateTime ruau:id="dateTime" value=""/>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    <ui:outputNumber ruau:id="number" value=""/>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:    <ui:outputPercent ruau:id="percent" value=""/>
ruau/ruau/SouRCeS/test/components/uitest/outputCmps_EmptyStringValue/outputCmps_EmptyStringValue.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:    	var isGetDataFromServer = component.get("v.getDataFromServer");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:    	var listType = component.get("v.listType")
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:    	var currentPage = component.get("v.currentPage");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        var pageSize = component.get("v.pageSize");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        var start = (currentPage - 1) * pageSize;
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        var limit = start+pageSize;
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        var data = [];
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	limit = start+1;
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        if (isGetDataFromServer) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	var action = component.get("c.getList");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	action.setParams({
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        		"start" : start,
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	action.setCallback(this, function(action) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        		if (action.getState() === "SUCCESS") {
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        			data = action.getReturnValue();
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        			helper.fireDataChangeEvent(component, data);
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	$A.enqueueAction(action);
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        	for (var i=start; i<limit; i++) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        		data.push({
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:        			"char": String.fromCharCode(65 + (i%26))
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	        // TODO: figure out why this server hit is necessary to get the parent scroller to refresh...
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	        var action = component.get("c.dummy");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	    	action.setCallback(this, function(action) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:				// we don't actually care--we just want the server action lifecycle to fire so the scroller will refresh...
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	        	helper.fireDataChangeEvent(component, data); 
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	    	this.runAfter(action);
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:			// this should be all that's needed...        
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProviderController.js:	        //helper.fireDataChangeEvent(component, data);
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:<ruau:component extends="ui:dataProvider" controller="java://org.ruauframework.impl.java.controller.JavaTestController">
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    <ruau:attribute name="listType" type="String"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:    <ruau:attribute name="getDataFromServer" type="Boolean"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:	<ruau:handler name="provide" action="{!c.provide}"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteDataProvider/infiniteDataProvider.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:<ruau:attribute name="message" type="String"></ruau:attribute>
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:This component will try to fill up browser's local storage with junk. Look for messages in browser console.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:<ui:button label="Fill up Local Storage" press="{!c.fillLocalStorage}"></ui:button>
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFiller.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:    fillLocalStorage: function(component) {
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:        var ITERS_TO_TRIGGER_LOCAL_STORAGE_ERROR = 100000
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:            for(var i = 0; i < ITERS_TO_TRIGGER_LOCAL_STORAGE_ERROR; i ++){
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:                localStorage.setItem('localStorageFiller'+i,'junk data');
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:        catch(err){
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:            $A.log('Triggered following error in '+i+' iterations,');
ruau/ruau/SouRCeS/test/components/uitest/localStorageFiller/localStorageFillerController.js:        $A.log('Unable to cause local storage to fill up..');
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:<div id="textAreaWithLabel">
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:<ui:inputTextArea ruau:id="textAreaWithLabel" label="textAreaWithLabel" value="textAreaWithLabel" updateOn="keyup"/>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:output: <ui:outputText value=""/>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_UpdateOnTest/inputTextArea_UpdateOnTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:attribute name="caseToRender" type="String" default="full"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}" />
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Testing to make sure that the utility can handle inputs with multiple ids
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        Note that the ariaDescribedBy attribute is set in this components init function.-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testMultiULToOne'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	    <ui:inputText ruau:id="inputTextId" label="hello"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputDefaultError ruau:id="error1" value="first error, second error, third error, fourth error"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputDefaultError ruau:id="error2" value="first error, second error, third error, fourth error"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Top panel is hidden, no errors-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTopPanelHidden'}"> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	    <section class="stage panelSlide forceAccess" aria-hidden="true">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	        <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <div class="forcePanelOverlay active" aria-hidden="false">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Test active top panel Aria hidden is set to true one error-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <ruau:if isTrue="{!v.caseToRender == 'testActiveTopPanelAriaHiddenIsTrue'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <section class="stage panelSlide forceAccess" aria-hidden="false">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <div class="uiPanelDialog active">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:             <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--test base panel aria hidden is false, one error-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:      <ruau:if isTrue="{!v.caseToRender == 'testBasePanelAriaHiddenIsFalse'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <section class="stage panelSlide forceAccess" aria-hidden="false">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <div class="uiPanelDialog active">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Test no active top panel no errors-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <ruau:if isTrue="{!v.caseToRender == 'testNoActiveTopPanelAriaHiddenOk'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:           <section class="stage panelSlide forceAccess">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:           <div class="uiPanelDialog" aria-hidden="true">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--test no active top panel and base panel is set to true, 1 error-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <ruau:if isTrue="{!v.caseToRender == 'testNoActiveTopPanelBasePanelAriaHiddenIsTrue'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <section class="stage panelSlide forceAccess" aria-hidden="true">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <div class="uiPanelOverlay" aria-hidden="true">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Test no active top panel with aria hidden, error 1-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <ruau:if isTrue="{!v.caseToRender == 'testNoActiveTopPanelAriaHiddenNotExists'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:             <section class="stage panelSlide forceAccess" aria-hidden="false">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <span>test</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:             <div class="uiPanelDialog">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <div class="panelModal">test</div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should have 1 error -->   
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testInputDefaultError'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <uitest:inputDefaultError_Test ruau:id="inputErrorTest" caseToRender="all"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputDefaultError value="first error, second error, third error, fourth error"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:      <!--Should Pass Since there are no headers -->   
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testWithNoHeader'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:             <td>January</td>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Should Pass since we are using scope but don't have TD--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testThWithScopeNoTD'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:              <th scope="col">Year</th>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Should Pass since we are using scope--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testThWithIdNoTD'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:              <th id="month">Year</th>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should Pass since we are using scope--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTableHeaderWithScope'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:              <th scope="col">Year</th>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:              <td>January</td>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should Pass since all td header attributes are associated with with th ids--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTHandTDtagsAssociateCorrectly'}">            
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th rowspan="2" id="h">Homework</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="e">Exams</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="p">Projects</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e1" headers="e">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e2" headers="e">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="ef" headers="e">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p1" headers="p">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p2" headers="p">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="pf" headers="p">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="h">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e1">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e2">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e ef">20%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p1">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p2">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p pf">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should fail since a TD has an invalid id in its headers--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTDUsesWrongID'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th rowspan="2" id="h">Homework</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="e">Exams</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="p">Projects</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e1" headers="e">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e2" headers="e">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="ef" headers="e">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p1" headers="p">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p2" headers="p">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="pf" headers="p">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="h">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e1">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e3">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e ef">20%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p1">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p2">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p pf">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <!--Should fail since a TD does not have a header attribute--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTDWithOutHeaderAttrib'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th rowspan="2" id="h">Homework</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="e">Exams</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="p">Projects</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e1" headers="e">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e2" headers="e">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="ef" headers="e">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p1" headers="p">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p2" headers="p">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="pf" headers="p">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="h">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e1">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e2">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e ef">20%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p2">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p pf">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should fail since a TH does not have an id attribute--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTableHeaderWoID'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th rowspan="2" >Homework</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="e">Exams</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th colspan="3" id="p">Projects</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e1" headers="e">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="e2" headers="e">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="ef" headers="e">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p1" headers="p">1</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="p2" headers="p">2</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <th id="pf" headers="p">Final</th> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e1">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e e2">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="e ef">20%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p1">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p p2">10%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td headers="p pf">15%</td> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should fail since a TH does not have id--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testTableHeadersWandWoScope'}">              
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <th>Year</th>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:               <td>January</td>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should fail since a TH does not have scope or id--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testThNoWoScope'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                 <td>January</td>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Should fail since a TH has a wrong scope--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'testScopeWithWrongVal'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <td>January</td>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for case where VF creates iframes but they dynamically add title after rendering. Test is to make sure that VF items are skipped-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'skipIframeForVisForce'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <iframe id="vfFrameId" src="http://localhost.blah.com/apex//testDetail0000?id=000x000xxx0000000"></iframe>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <iframe id="DiffernetID" src="/apex/blahField?id=00-xx00000000000"></iframe>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <iframe id="vfFrameId" src="/setup/ui/blah.jsp"></iframe>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <iframe src="http://www.salesforce.com"></iframe> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for image alt. Mixture of failures and correct tags-->  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'imageTagTest'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <img src="1" alt="Blah"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <ui:image src="2" alt="" imageType="decorative"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <ui:image src="3" alt="  Blah  " imageType="informational"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <!--Images that are going to be errors-->        
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <img src="4" alt="UnDeFiNeD"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <img src="5" alt="Null"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <img src="6" alt="EMPTY"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <img src="8" alt=""/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <ui:image src="9" alt="  UnDeFiNeD  " imageType="informational"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <ui:image src="10" alt="  EMPTY  " imageType="informational"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <ui:image src="11" alt="  NuLl  " imageType="informational"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <div ruau:id="injectableDiv"></div>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for buttons. Making sure that the label attribute is set correctly-->  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'buttonLabelValid'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <!--Buttons should fail, no label-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <ui:button iconImgSrc="/ruauFW/resources/ruau/images/bug.png" label=""/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <ui:button labelDisplay="false" label=" "/> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <ui:button label=""/> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <!--Three buttons that are set correctly-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <ui:button iconImgSrc="/ruauFW/resources/ruau/images/bug.png" label="bug Icon" />
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <ui:button label="This should be shown"/>  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for inputs that don't need labels. Verifying that they don't fail-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'labelsNotNeeded'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <label for="ID_EGO">Something Something</label>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="submit" id="ID_EGO" size="25" value="SUBMIT TO ME"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="reset" value="Reset ALL THE THINGS!"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="image" src="/ruauFW/resources/ruau/images/ruauNoteDemo.png" name="image" alt="img" width="60" height="60"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="hidden" value="I AM HIDDERN"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="button" size="25" value="CLick me"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <input type="image" src="/ruauFW/resources/ruau/images/ruauNoteDemo.png" name="image" width="60" height="60"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for fieldset legends. All fields sets should have a legend associated with them-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'fieldSetWithStyles'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <fieldset  ruau:id="field_set_W_style_and_legend">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                     <legend>field_set_W_style_and_legend</legend>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <fieldset ruau:id="field_set_field_style_no_legend">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <fieldset ruau:id="field_set_fieldset_no_style_legend">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <fieldset ruau:id="field_set_no_sytle_no_legend">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <fieldset ruau:id="field_set_fieldset_wrong_style_legend" style="BLAH">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <fieldset  ruau:id="field_set_wrong_style_no_legend" >
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Generic test. Making sure that all of these separate test modules find the correct errorneous items-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'full'}">  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <div id="table1">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	        <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	                    <ui:inputText ruau:id="first" placeholder="First name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	                    <ui:inputText ruau:id="mid" placeholder="Middle Name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	                    <ui:inputText ruau:id="last" placeholder="Last name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	            <tr><td><iframe title="Lets go to google" height="300px" width="50%" src="http://www.salesforce.com"></iframe></td></tr>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:	        </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:label for="birthdayInput" label="Birthday"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputDate ruau:id="birthdayInput" displayDatePicker="true"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <fieldset id="field_set" class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <span>what is your age range?</span>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label label="21-25"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="21-25"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label label="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label label="31-35"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="31-35"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label label="36-40">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="36-40"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      </ui:label>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio label="Old and wise enough" ruau:id="Old and wise enough"/>   
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputRadio label="I WANT TO BE CLICKED!!!!" ruau:id="click me"/>  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputTextArea ruau:id="tellUsAboutYou" placeholder="Tell us about yourself" rows="10" cols="20"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <iframe height="300px" width="50%" src="http://www.salesforce.com"></iframe>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </table> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Same test as above. The difference is that this one focuses on having labels above and below their respective inputs. 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        As long and an input has a label, it should not matter where it is located in the dom
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'labelTest'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:label for="first" label="first"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:label for="mid" label="mid"/>    
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                    <ui:inputText ruau:id="first" placeholder="First name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                    <ui:inputText ruau:id="mid" placeholder="Middle Name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                    <ui:inputText ruau:id="last" placeholder="Last name"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <tr><td><iframe title="Lets go to google" height="300px" width="50%" src="http://www.salesforce.com"></iframe></td></tr>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputDate ruau:id="birthdayInput" displayDatePicker="true"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <legend>what is your age range?</legend>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label for="21-25" label="21-25"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="21-25"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label for="26-30" label="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:label for="31-35" label="31-35"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio ruau:id="31-35"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                      <ui:inputRadio label="Old and wise enough" ruau:id="Old and wise enough"/>   
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputRadio label="I WANT TO BE CLICKED!!!!" ruau:id="click me"/>  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:inputTextArea ruau:id="tellUsAboutYou" placeholder="Tell us about yourself" rows="10" cols="20"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <iframe height="300px" title="tmpTitle" width="50%" src="http://www.salesforce.com"></iframe>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:label for="tellUsAboutYou" label="tellUsAboutYou"/> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:label for="last" label="last"/> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:label for="birthdayInput" label="Birthday"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!-- Test for Anchor inner text. All anchors should have some innerText. This test does not have innerText-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'anchorWOInnerText'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <a href="javascript:void(0)">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </a>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!-- Test for Anchor inner text. All anchors should have some innerText. This test has innerText-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'anchorWInnerText'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <a href="javascript:void(0)">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                        <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                                         <ui:label for="26-30" label="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                                         <ui:inputRadio ruau:id="26-30"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            </table>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </a>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for outputURL. This test makes sure that img wrapped anchors have alt and that they are found correctly.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     This test should not have a failure
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'anchorInOutputURLInfo'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <a href="javascript:void(0);" title="" dir="ltr" class="uiOutputURL">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <img class="/ruauFW/resources/ruau/s.gif uiImage" alt="heloo" src="/ruauFW/resources/ruau/s.gif" />
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </a>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for outputURL. This test makes sure that img wrapped anchors have alt and that they are found correctly.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        This test should fail since no alt is defined
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:     <ruau:if isTrue="{!v.caseToRender == 'anchorInOutputURLDeco'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:         <a href="javascript:void(0);" title="" dir="ltr" class="uiOutputURL">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <img class="/ruauFW/resources/ruau/s.gif uiImage" src="/ruauFW/resources/ruau/s.gif" />
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        </a>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:   <!--Test specifically making sure that it doesn't break menuitems. All menuItems default to radio buttons--> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:   <ruau:if isTrue="{!v.caseToRender == 'anchorMenuTest'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:menuTriggerLink class="radioMenuLabel" ruau:id="radioMenuLabel" label="National League West"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:menuList class="radioMenu" ruau:id="radioMenu">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:radioMenuItem class="radioItem1" ruau:id="radioItem1" label="San Francisco"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:radioMenuItem class="radioItem2" ruau:id="radioItem2" label="LA Dodgers"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:radioMenuItem class="radioItem3" ruau:id="radioItem3" label="Arizona"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:radioMenuItem class="radioItem4" ruau:id="radioItem4" label="Diego" disabled="true"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:                <ui:radioMenuItem class="radioItem5" ruau:id="radioItem5" label="Colorado"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test making sure that we skip ckeditor. There is an issue with the current version of CKEDITOR with one of its attributes
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        Skipping until, we upgrade
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'ckeditor_test'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRichText ruau:id="RICH_TEXT" label="label For Rich Text" value="{!v.testContent}"/> <br/> 
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--test for radio buttons in fieldSets. All radio buttons with the same name should be in a fieldset. No errors-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'NoRadioErrors'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio1" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio2" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio3" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio4" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputRadio label="Radio5" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputRadio label="Radio6" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputRadio label="Radio7" name="Group2"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputCheckbox label="Radio8" name="Group3"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio label="Radio9" name="Group4"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--test for radio buttons in fieldSets. All radio buttons with the same name should be in a fieldset. Errors-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:   <ruau:if isTrue="{!v.caseToRender == 'RadioErrors'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:       <fieldset class="field_set">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio1" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio2" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio3" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:            <ui:inputCheckbox label="Radio4" name="Group1"/>  
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio    label="Radio5" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio    label="Radio6" name="Group1"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio    label="Radio7" name="Group2"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio    label="Radio8" name="Group2"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputCheckbox label="Radio9" name="Group3"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <ui:inputRadio    label="Radio10" name="Group4"/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test for header elements. These test make sure that the header order is sequential
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <h1></h1>, <h2></h2> are correct. <h1></h1>, <h3></h3> is incorrect order
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'headersCorrectOrder'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h1>1stHeader</h1>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h2>2ndHeader</h2>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h3>3rdHeader</h3>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h4>4thHeader</h4>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h5>5thHeader</h5>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h6>6thHeader</h6>      
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'headersWrongOrder'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h1>1stHeader</h1>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h3>3rdHeader</h3>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h5>5thHeader</h5>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>    
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'headersWrongOrderReverse'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h6>6thHeader</h6>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h5>5thHeader</h5>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h4>4thHeader</h4>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h3>3rdHeader</h3>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h2>2ndHeader</h2>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h1>1stHeader</h1>      
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'headersWrongOrderWrapAround'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h1>1stHeader</h1>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h3>3rdHeader</h3>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h5>5thHeader</h5>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h6>6thHeader</h6>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:          <h4>4thHeader</h4>      
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <!--Test that will make sure that the accessibility tool can handle empty tags that do not have any attributes-->
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    <ruau:if isTrue="{!v.caseToRender == 'tagsWithoutAttributes'}">
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <a/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:        <iframe/>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityTool.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolController.js:		if(cmp.get("v.caseToRender") == "testMultiULToOne"){
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolController.js:			var inputText = cmp.find("inputTextId");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolController.js:    	    var inputError1 = cmp.find("error1").get("v.domId");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolController.js:    	    var inputError2 = cmp.find("error2").get("v.domId");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolController.js:    	    inputText.set("v.ariaDescribedBy", inputError1+" "+inputError2);
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:    //Excluding IE7/8 because this test will only work with modern browsers
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        runTest: function (expected, errorMessage, element, testsToSkip) {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            var output = $A.devToolService.checkAccessibility(element, testsToSkip);
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            var actual = 0;
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            	actual = output.trim().split("\n\n").length;
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            $A.test.assertEquals(expected, actual, errorMessage + output);
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTopPanelHidden : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTopPanelHidden'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testActiveTopPanelAriaHiddenIsTrue : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testActiveTopPanelAriaHiddenIsTrue'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testBasePanelAriaHiddenIsFalse : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testBasePanelAriaHiddenIsFalse'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testNoActiveTopPanelAriaHiddenOk : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testNoActiveTopPanelAriaHiddenOk'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testNoActiveTopPanelBasePanelAriaHiddenIsTrue : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testNoActiveTopPanelBasePanelAriaHiddenIsTrue'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testNoActiveTopPanelAriaHiddenNotExists: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testNoActiveTopPanelAriaHiddenNotExists'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        //This test is used for checking that we can conditionally skip checks
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'full'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testMultiInputDefaultULToSingleInput :  {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testMultiULToOne'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testInputDefaultError : {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        	attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testInputDefaultError'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            	cmp.find("inputErrorTest").find("validate").getEvent("press").fire({});
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testWithNoHeader: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testWithNoHeader'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testThWithScopeNoTD'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testThWithIdNoTD'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTableHeaderWithScope: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTableHeaderWithScope'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTHandTDtagsAssociateCorrectly: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTHandTDtagsAssociateCorrectly'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTDUsesWrongID'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTDWithOutHeaderAttrib: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTDWithOutHeaderAttrib'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTableHeaderWoID: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTableHeaderWoID'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTableHeadersWandWoScope: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testTableHeadersWandWoScope'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testThNoWoScope'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testScopeWithWrongVal: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'testScopeWithWrongVal'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'fieldSetWithStyles'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                cmp.find("field_set_W_style_and_legend").getElement().style.display = "none";
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                cmp.find("field_set_field_style_no_legend").getElement().style.display = "none";
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testButtonLabelValid: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'buttonLabelValid'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testImageTagTest: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'imageTagTest'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testHeadersCorrectOrder: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'headersCorrectOrder'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testHeadersWrongOrder: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'headersWrongOrder'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testHeadersWrongOrderWrapAround: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'headersWrongOrderWrapAround'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testHeadersWrongOrderReverse: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'headersWrongOrderReverse'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'anchorWInnerText'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'anchorWOInnerText'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'anchorInOutputURLInfo'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'anchorInOutputURLDeco'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testRadioIsInFieldSetError: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'RadioErrors'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testRadioIsInFieldSetNoError: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'NoRadioErrors'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testLabels: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'labelTest'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testLabelsNotNeeded: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'labelsNotNeeded'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'anchorMenuTest'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'ckeditor_test'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'full'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                    this.runTest(4, "Unexpected return from CheckAccessibility, should return 4 error. output: \n", document.getElementById("table1"));
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'None'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testSkipVisualForceIframes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'skipIframeForVisForce'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:        testTagsWithoutAttributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:            attributes: {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                caseToRender: 'tagsWithoutAttributes'
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                var expected = 10;
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                var actual = "";
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                    $A.test.assertAccessible();
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                } catch (err) {
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                    actual = err.message.trim().split("\n\n").length;
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolTest.js:                    $A.test.assertEquals(expected, actual, "Unexpected return from assertAccessilbe, expected: " + expected + " actual: " + actual);
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolRenderer.js:    afterRender : function(cmp, hlp){
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:	       //Function that will only inject if we are looking at the correct component
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:           if(cmp.get("v.caseToRender") === "imageTagTest"){
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      var div = cmp.find("injectableDiv").getElement();
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      var img = document.createElement("img");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      img.alt = "Hell World!";
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      div.appendChild(img);
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      img = document.createElement("img");
ruau/ruau/SouRCeS/test/components/uitest/accessibilityTool/accessibilityToolHelper.js:    	      div.appendChild(img);
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:<ruau:component extends="ui:outputDateTime">	
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZone.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js:    testFormatDateTime:{
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js:	attributes: {value : '2004-09-23T16:30:00.000Z'},
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(cmp.getSuper().find('span').getElement()).length > 0;},function(){
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneTest.js:                ruau.test.assertEquals("Sep 23, 2004 12:30:00 PM", $A.test.getText(cmp.getSuper().find('span').getElement()), "Timezone should be the one specified in the overridden method");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js:        return 'America/New_York';
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js:	displayDateTime: function(component, displayValue) {
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js:        var outputCmp = component.getSuper().find("span");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js:        var elem = outputCmp ? outputCmp.getElement() : null;
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_OverriddenGetTimeZone/outputDateTime_OverriddenGetTimeZoneHelper.js:            elem.textContent = elem.innerText = displayValue;
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js:    testNonDateJavaObj:{
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js:            var testCmp = cmp.find('NonDateFromJava');
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObjTest.js:            ruau.test.assertEquals("Model", $A.test.getText(testCmp.find('span').getElement()), "Expected the original value");
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:    <ui:outputDate value='{!m.string}'  ruau:id='NonDateFromJava' />
ruau/ruau/SouRCeS/test/components/uitest/outputDate_NonDateJavaObj/outputDate_NonDateJavaObj.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js:    	var ret = this.superRerender();
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateRenderer.js:    afterRender: function(cmp, helper) {
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js:    	var elem = cmp.getConcreteComponent().find("ctOption").getElement();
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js:    		$A.util.removeClass(cmp.getConcreteComponent().find("ctOption"), "invisible");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateHelper.js:    		$A.util.addClass(cmp.getConcreteComponent().find("ctOption"), "invisible");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:    handleFocus: function(cmp) {
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:    	var elem = cmp.getConcreteComponent().find("ctOption").getElement();
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:        $A.util.addClass(elem, "highlight");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:    handleBlur: function(cmp) {
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:    	var elem = cmp.getConcreteComponent().find("ctOption").getElement();
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplateController.js:        $A.util.removeClass(elem, "highlight");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:<ruau:component extends="ui:interactive">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:	<ruau:attribute name="value" type="String"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:	<ruau:attribute name="visible" type="Boolean"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:	<ruau:handler name="focus" action="{!c.handleFocus}"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:	<!-- has to be an HTML element that can be focusable so that autocomplete can 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:		 function properly, or else using key down/up will not navigate to next
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:	<div><a ruau:id="ctOption">{!v.value}</a></div>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css:.THIS a.highlight {
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css:    background-color:#FFFF00;
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_CustomTemplate/autoComplete_CustomTemplate.css:    display: none;
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:	<div>Autocomplete with no data provided</div><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <ui:autocomplete ruau:id="autoCompleteNoData" optionVar="row" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        matchDone="{!c.handleInputChangeNoDataMatchDone}"
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        inputChange="{!c.handleInputChangeNoData}" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        selectListOption="{!c.handleSelectOptionNoData}" keydown="{!c.handleKeyDown}">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autocomplete_TestDataProvider dataType="emptyList"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="listOption">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <ui:autocompleteOption label="{!row.label}" keyword="{!row.keyword}" value="{!row.value}" visible="{!row.visible}"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    </ui:autocomplete>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Match Count: <ui:outputText ruau:id="autoCompleteNoDataMatchSize" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <div>Autocomplete with large list of data</div><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <ui:autocomplete ruau:id="autoCompleteLargeList" optionVar="row" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        matchDone="{!c.handleInputChangeLargeListMatchDone}"
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        inputChange="{!c.handleInputChangeLargeList}" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        selectListOption="{!c.handleSelectOptionLargeList}" label="Large List Auto Complete" labelPosition="hidden">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autocomplete_TestDataProvider dataType="largeList"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="listOption">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <ui:autocompleteOption label="{!row.label}" keyword="{!row.keyword}" value="{!row.value}" visible="{!row.visible}"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    </ui:autocomplete>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:  	Match Count: <ui:outputText ruau:id="autoCompleteLargeListMatchSize" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <div>Autocomplete with custom template</div><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <ui:autocomplete ruau:id="autoCompleteCustomTemplate" optionVar="row" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        matchDone="{!c.handleInputChangeCustomTemplateMatchDone}"
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        inputChange="{!c.handleInputChangeCustomTemplate}" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        selectListOption="{!c.handleSelectOptionCustomTemplate}">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autocomplete_TestDataProvider/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="listOption">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autoComplete_CustomTemplate value="{!row.label}" visible="{!row.visible}"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    </ui:autocomplete>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Match Count: <ui:outputText ruau:id="autoCompleteCustomTemplateMatchSize" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <div>Autocomplete extending ui:autocompleteOption</div><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    <ui:autocomplete ruau:id="autoCompleteCustomOption" optionVar="row" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        matchDone="{!c.handleInputChangeCustomOptionMatchDone}"
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        inputChange="{!c.handleInputChangeCustomOption}" 
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        selectListOption="{!c.handleSelectOptionCustomOption}">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autocomplete_TestDataProvider/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        <ruau:set attribute="listOption">
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:            <uitest:autoComplete_CustomOption label="{!row.label}" visible="{!row.visible}"/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    </ui:autocomplete>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:    Match Count: <ui:outputText ruau:id="autoCompleteCustomOptionMatchSize" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:	Event Fired: <ui:outputText ruau:id="outputLabel" class="outputLabel" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/autoComplete_updateOnTest/autoComplete_updateOnTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:<ruau:attribute name="maxlength" type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:  <ui:inputTextArea class="textArea" ruau:id="textArea" maxlength="{!v.maxlength}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputTextArea_MaxLength/inputTextArea_MaxLength.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    <ui:dataTable ruau:id="dataTable">
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:    </ui:dataTable>
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValue.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:     * Verify that ui:datatable works when there are no headerValues specified.
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:    _testDataTableWithNoHeader:{
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            var dataTable = cmp.find('dataTable');
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            var tableElement = dataTable.find('table').getElement();
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertTrue(tableElement instanceof HTMLTableElement, "expected to see a Table dom element in data Table.");
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertEquals(1, tableElement.rows.length, "Expected to see only one row in the table.")
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            var dataRow = tableElement.firstChild;
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertTrue(dataRow instanceof HTMLTableRowElement, "Expected table row dom element." )
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertEquals("Row1 Col1Row1 Col2" , $A.test.getText(dataRow), "Text set in markup of dataTable not displayed." )
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertTrue(dataRow.cells[0] instanceof HTMLTableCellElement)
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertEquals('TD', dataRow.cells[0].tagName, 'Data in non header row should be shown using TD tags')
ruau/ruau/SouRCeS/test/components/uitest/dataTable_NoHeaderValue/dataTable_NoHeaderValueTest.js:            ruau.test.assertFalse( $A.util.hasClass(dataRow.cells[0],'header') , "data cells should not have header class" );
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElement.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElement.cmp:	<ruau:registerevent name="popupTargetToggle" type="ui:popupTargetToggle" />
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElement.cmp:	<ui:label class="customTriggerLabel" label="Custom trigger" /> <ui:button class="customTriggerButton" press="{!c.hideTarget}" label="Close Target" /><br />
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElement.cmp:	<ui:inputText class="customTriggerInput" focus="{!c.showTarget}" />
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElement.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:	showTarget : function(component) {
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:		var evt = $A.get('e.ui:popupTargetToggle');
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:		evt.setParams({
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:	hideTarget : function(component) {
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:		var evt = $A.get('e.ui:popupTargetToggle');
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:		evt.setParams({
ruau/ruau/SouRCeS/test/components/uitest/popupTestTriggerElement/popupTestTriggerElementController.js:			show : false
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:<ruau:component model="java://org.ruauframework.impl.java.model.TestJavaModel">
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    <ruau:attribute name="testCmpName" type="string" default="SelectMulti"/>
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    <uitest:inputSelect_Extend multiple="true" ruau:id="SelectMulti" options="{!m.selectOptions}" value="{!m.selectValue}"/> <br/>
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:    <ruautest:baseInputTest cmpType="{!v.testCmpName}" ref="{!m.selectValue}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputMultiSelect_Test/inputMultiSelect_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.css:.THIS.container .viewport, .THIS.container .footer {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.css:	position: relative;
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:    <ruau:dependency resource="markup://ui:button" />
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:    <div class="container">
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:        <div class="footer">
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:            <div ruau:id="content">content to show inside panel</div>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:            <ui:button class="panelDialogModalButton" press="{!c.showModal}" label="Show Panel Dialog Modal"></ui:button>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:            <ui:button class="panelDialogNonModalButton" press="{!c.showNonModal}" label="Show Panel Dialog Non-Modal" ruau:id="nonModalButton"></ui:button>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:    <ui:panelManager />
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				componentDef: 'markup://ui:outputText',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				attributes : {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:					values :
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:						value : 'testing'
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				componentDef: 'markup://ui:button',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				attributes : {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:					values :
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:						label : 'button 1'
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				componentDef: 'markup://ui:button',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				attributes : {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:					values :
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:						label : 'button 2'
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				componentDef: 'markup://ui:button',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:				attributes : {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:					values :
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:						"class": 'pressOverlay',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestHelper.js:						label : 'open another overlay'
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:	showModal: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:		var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:		var overlay = cmps[3];
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:		overlay.addHandler('press', cmp, 'c.showModal')
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:		var openPanelEvent = $A.get('e.ui:openPanel').setParams({
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            isModal: true,
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            isDialog: true,
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        	title: 'my panel',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        	'class': 'myClass',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            callbacks: { onCreate: function(panel){
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            	var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            	panel.set("v.body", cmps);
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        openPanelEvent.fire();
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:    showNonModal: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        var overlay = cmps[3];
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        var referenceElement = cmp.find("nonModalButton").getElement();
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        overlay.addHandler('press', cmp, 'c.showNonModal');
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        var openPanelEvent = $A.get('e.ui:openPanel').setParams({
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            isModal: false,
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            isDialog: true,
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            title: 'my panel',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:            'class': 'myClass',
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            callbacks: { onCreate: function(panel){
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            	var cmps = $A.componentService.newComponentAsync(this, function(){}, helper.getConfig(cmp));
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js://            	panel.set("v.body", cmps);
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:        openPanelEvent.fire();
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:	newOverlay: function(cmp,event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/panelTest/panelTestController.js:		this.showModal(cmp,event, helper);
ruau/ruau/SouRCeS/test/components/uitest/popupTestExtendedTarget/popupTestExtendedTargetHelper.js:	handleKeyboardEvent : function(component, event) {
ruau/ruau/SouRCeS/test/components/uitest/popupTestExtendedTarget/popupTestExtendedTargetHelper.js:		alert('keyboard event!');
ruau/ruau/SouRCeS/test/components/uitest/popupTestExtendedTarget/popupTestExtendedTarget.cmp:<ruau:component extends="ui:popupTarget">
ruau/ruau/SouRCeS/test/components/uitest/popupTestExtendedTarget/popupTestExtendedTarget.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('outputCurrencyEmpty');
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Should have displayed a blank value.");
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            var testCmp = cmp.find('outputCurrencyNull');
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTestTest.js:            ruau.test.assertEquals('', $A.test.getText(testCmp.find('span').getElement()), "Should have displayed a blank value.");
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:<ruau:component model="java://org.ruauframework.impl.java.model.TestJavaModel">   
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:	<ui:outputCurrency ruau:id="outputCurrencyEmpty" value="{!m.stringEmpty}" /> <br/> 
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:    <ui:outputCurrency ruau:id="outputCurrencyNull" value="{!m.stringNull}" /> <br/> 
ruau/ruau/SouRCeS/test/components/uitest/outputCurrency_FormattingWithNullOrEmptyStringTest/outputCurrency_FormattingWithNullOrEmptyStringTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:	<ruau:attribute name="testIncorrectPostionValue" type="boolean" default="true"></ruau:attribute>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:	<ruau:if isTrue="{!v.testIncorrectPostionValue}">
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:			<ui:inputCheckbox label="inputCheckbox" labelPosition="test" value="false"/>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:	</ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:     * Verify labelPosition must be one of the following values: 'top', 'right', 'bottom', 'left', 'hidden'
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:    testThrowLabelPositionError: {
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:        ruauErrorsExpectedDuringInit : ["labelPosition must be one of the following values: 'top', 'right', 'bottom', 'left', 'hidden'"],
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:            var message = ruau.util.getElement("ruauErrorMessage");
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:            var errorMessage = "labelPosition must be one of the following values: 'top', 'right', 'bottom', 'left', 'hidden'";
ruau/ruau/SouRCeS/test/components/uitest/label_displayPositionTypoTest/label_displayPositionTypoTestTest.js:            $A.test.assertTrue(ruau.test.contains(ruau.test.getText(message),errorMessage), "Expected " + errorMessage);
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueDefSelectionExists: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VDSE"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Def_Selection_Exists");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Bear", value,"ValueDefSelectionExists failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueUndefWithNoDefault: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VUWND"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Undef_With_No_Default");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueUndefWithNoDefault failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueUndefWithDefault: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VUWD"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Undef_With_Default");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Lion", value,"ValueUndefWithDefault failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueDefSelectionDNE: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VDSDNE"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Def_Selection_DNE");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueDefSelectionDNE failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueNullNoOptions: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VNNO"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Null_No_Options");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("", value,"ValueNullNoOptions failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueNullWithNoNullOption: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VNWNNO"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_No_Null_Option");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueNullWithNoNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueNullWithNullOption: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VNWNO"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Null_Option");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("", value,"ValueNullWithNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueNullWithDefaultAndNullOption: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VNWDANO"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Default_And_Null_Option");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("", value, "ValueNullWithDefaultAndNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:    testValueNullWithDefaultAndNoNullOption: {
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:	attributes :{whichToRender:"VNWDANNO"},
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var inputSelect = cmp.find("Value_Null_With_Default_And_No_Null_Option");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		var value = inputSelect.get("v.value");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValueTest.js:		$A.test.assertEquals("Tiger", value,"ValueNullWithDefaultAndNoNullOption failed to initialize, by using inputSelect options in the body");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:attribute name="whichToRender" type="String" default="VUWND"/>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when no default value is given in inputSelect, 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        and not inputSelectOption is chosen result should Tiger is default
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VUWND'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Undef_With_No_Default" options="{!m.noOptionsSel}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when no default value is given in inputSelect, 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        and inputSelectOption is set to true for Lion. Lion should be chosen
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:      <ruau:if isTrue="{!v.whichToRender == 'VDSE'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Def_Selection_Exists" value="Bear" options="{!m.noOptionsSel}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Bear, result 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        should be bear is the initial item shown
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VUWD'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Undef_With_Default" options="{!m.secondOptionSel}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Moose, result 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        should be Moose but it doesn't exist as an option so default goes 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VDSDNE'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Def_Selection_DNE" value="Moose" options="{!m.noOptionsSel}"/>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is null, and there are no inputSelectOptions
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        result should be that nothing is selected
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VNNO'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Null_No_Options" value="" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Null, result 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VNWNNO'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Null_With_No_Null_Option" value="" options="{!m.noOptionsSel}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Null, result 
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VNWNO'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Null_With_Null_Option" value="" options="{!m.noOptionsSelWithNone}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Null, and an inputSelectOption
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VNWDANO'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Null_With_Default_And_Null_Option" value="" options="{!m.thirdOptionSelWithNone}"/>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        Checking for case when default for input select is Null, and an inputSelectOption
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    <ruau:if isTrue="{!v.whichToRender == 'VNWDANNO'}">
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:        <ui:inputSelect ruau:id="Value_Null_With_Default_And_No_Null_Option" value="" options="{!m.thirdOptionSel}" />
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/InputSelect_OptionsAttributeInitValue/InputSelect_OptionsAttributeInitValue.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:<ruau:component controller="java://org.ruauframework.impl.java.controller.JavaTestController">
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:	<ruau:attribute name="errorMessage" type="String"/>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:	<ui:inputText ruau:id="inputCmp" value="" onError="{!c.handleError}" onClearErrors="{!c.handleClearError}"/> <br/>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:	Error message: <div id="errorDiv">{!v.errorMessage}</div>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:	Error Status: <ui:outputText ruau:id="outputStatus" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    <div id="ErrorFireOnErrorEvent"><ui:button label="Server error - Fire onError event" press="{!c.doServerErrorFireOnErrorEvent}"/></div>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:    <div id="ClearFireOnClearErrrorsEvent"><ui:button label="Clear error - Fire onClearErrors event" press="{!c.clearErrorFireOnClearErrorsEvent}"/></div>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js: 	handleError: function(component, event){
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var inputCmp = component.find("inputCmp");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var errorsObj = event.getParam("errors");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            var errMsgs = [];
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            for (var i = 0; i < errorsObj.length; i++) {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:                errMsgs.push("Custom Error Msg: " + errorsObj[i].message);
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            // uncomment after bug: W-1412621
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            errorCmp = $A.componentService.newComponentDeprecated({
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:                "componentDef": "markup://ui:inputDefaultError",
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:                "attributes": {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:                    "values": {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:                        "value" : errMsgs
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            // test infrastructure expects error css set
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            var element = inputCmp.getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        	var htmlCmp = $A.componentService.getRenderingComponentForElement(element);
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        	var valueProvider = htmlCmp.getComponentValueProvider();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            valueProvider.addClass("inputError");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            component.set("v.errorMessage", errMsgs.join(";"));
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            component.find("outputStatus").set("v.value", "Got Error");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:    handleClearError: function(component, event) {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var inputCmp = component.find("inputCmp");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        // uncomment after bug: W-1412621
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        // test infrastructure expects error css cleared
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var element = inputCmp.getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var htmlCmp = $A.componentService.getRenderingComponentForElement(element);
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        var valueProvider = htmlCmp.getComponentValueProvider();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        valueProvider.removeClass("inputError");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        component.set("v.errorMessage", "");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        component.find("outputStatus").set("v.value", "Cleared error");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:		var a = component.get("c.throwsException");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:		a.setParams({
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:            errorMsg : "Error Happens!"
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        a.setCallback(component, function(action){
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        	if (action.getState() === "SUCCESS") {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        		var retValue = action.getReturnValue();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	        	component.find("outputStatus").set("v.value", "EXPECTED ERROR but got: " + retValue);
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	        	var errors = action.getError();
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	        	var inputCmp = component.find("inputCmp");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	        	var errorEvent = inputCmp.getEvent("onError");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	        	errorEvent.setParams({ "errors" : errors});
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:        $A.enqueueAction(a);
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	clearErrorFireOnClearErrorsEvent : function(component, event) {
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:		var inputCmp = component.find("inputCmp");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:		var cleanErrorEvent = inputCmp.getEvent("onClearErrors");
ruau/ruau/SouRCeS/test/components/uitest/inputError_CustomTest/inputError_CustomTestController.js:	    cleanErrorEvent.fire();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	//Helper function that will go to the component, and either validate it or invalidate it
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	addErrorsToCmp : function(invalidCmp){		    	
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:    	 var ariaDesc = document.getElementById(invalidCmp.get("v.ariaDescribedBy"))
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:    	 var value = "v.value";
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:    	 if($A.util.isEmpty(ariaDesc)){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:    		 invalidCmp.setValid(value, false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:        	 invalidCmp.addErrors(value, {"message":"The wren"});
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:        	 invalidCmp.addErrors(value, {"message":"Earns his living"});
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:        	 invalidCmp.addErrors(value, {"message":"Noiselessly"});
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:    		 invalidCmp.setValid(value, true);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	//Extracting out the ability to create this new inputDefaultError
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	createNewCmp : function(cmp, lblAide){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                    var propsArea=cmp.find("propsArea");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:                        var body=propsArea.get("v.body");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:                        propsArea.set("v.body",body);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                    "componentDef": "markup://uitest:inputDefaultErrorDynamic_test",
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                    "attributes": {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                        "values": {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                            label: "Label"+lblAide,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                            value : "123",
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                            name: "Label"+lblAide,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestHelper.js:	                            newClass : "class"+lblAide
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:	 //If in the correct mode, creating the necessary inputDefaultError
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:            if(cmp.get("v.caseToRender") == 'dynamic'){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:            	  hlp.createNewCmp(cmp, "1");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    //Creating a new defaultError component on the fly
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    createNew : function(cmp, evt, hlp) {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:       hlp.createNewCmp(cmp, "2");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:     //controller that grabs all the ids and puts invalidates all of them
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:     validateInput : function(cmp, evt, helper){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 var baseId = cmp.get("v.caseToRender");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 var componentIdArray = [];
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 if(baseId === 'all'){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    		 componentIdArray = ["default", "select", "search", "textArea", "date", "radio", "range", "autoCompleteTextArea", "autoCompleteText", "text"];
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    		 componentIdArray = [baseId];
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 //Going through Array. This id array will be either of size 1 or 12. 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 //It will get the component associated with each element then invalidate it 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    	 for(var i = 0; i < componentIdArray.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestController.js:    		 helper.addErrorsToCmp(cmp.find(componentIdArray[i] +"Invalid"));
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    limitations under the License.   
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:attribute name="caseToRender" type="String" default="default" />
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       Test that will verify that the the inputDefault error shows up when there is an error, and doesn't when there isn't an error  
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'dynamic' }">   	
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <div ruau:id="propsArea"></div>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:button label="New" ruau:id="new_button" press="{!c.createNew}"/>	   
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       Test that will verify that the the inputDefault error shows up when there is an error, and doesn't when there isn't an error  
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'default' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:label label="testing inputNumber, inputCurrency, inputPercent"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:label for="defaultValid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:inputNumber class="formInput" ruau:id="defaultValid" value="20" placeholder="at least 6 chars"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:label for="defaultInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:inputNumber class="formInput" ruau:id="defaultInvalid" value="100000" placeholder="at least 6 chars"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:          Test verifying that the inputDefault component can be used by itself
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'customUsage'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:label for="customUsageInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:inputNumber class="formInput" ruau:id="customUsageInvalid" value="100000" placeholder="at least 6 chars">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	      <ruau:set attribute="errorComponent">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	      	 <ui:inputDefaultError/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	      </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:         Individual test per input component. If a component extends another component and doesn't overwrite the html, I thought of that as one text
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:         These tests are just to make sure that the ul shows up for all of these components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'select' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    <ui:label for="selectInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputSelect ruau:id="selectInvalid">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    	<ui:inputSelectOption text="hello1b" label="hello1b"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    	<ui:inputSelectOption text="hello2b" label="hello2b"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    	<ui:inputSelectOption text="hello3b" label="hello3b"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:	    	<ui:inputSelectOption text="hello4b" label="hello4b"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'search' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ui:label for="searchInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ui:inputSearch ruau:id="searchInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     <ruau:if isTrue="{!v.caseToRender == 'textArea' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ui:label label="Test for inputRichText"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="textAreaInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputTextArea ruau:id="textAreaInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     <ruau:if isTrue="{!v.caseToRender == 'date' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="dateInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputDate ruau:id="dateInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ruau:if isTrue="{!v.caseToRender == 'dateTime'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="dateTimeInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputDateTime ruau:id="dateTimeInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'radio' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="radioInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputRadio ruau:id="radioInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ruau:if isTrue="{!v.caseToRender == 'range' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="rangeInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputRange ruau:id="rangeInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     <ruau:if isTrue="{!v.caseToRender == 'autoCompleteTextArea' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="autoCompleteTextAreaInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputTextAreaForAutoComplete ruau:id="autoCompleteTextAreaInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     <ruau:if isTrue="{!v.caseToRender == 'autoCompleteText' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:label for="autoCompleteTextInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:        <ui:inputTextForAutoComplete ruau:id="autoCompleteTextInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     <ruau:if isTrue="{!v.caseToRender == 'text' || v.caseToRender == 'all'}">
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp: 	   <ui:label label="Test for inputEmail, inputPhone, inputSecret, inputTime InputURL"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ui:label for="textInvalid" label="testingInvalidInput"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:       <ui:inputText ruau:id="textInvalid"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:     </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:    <ui:button label="validate" press="{!c.validateInput}" ruau:id="validate"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:	ERROR_OUTPUT : "The wren, Earns his living, Noiselessly",
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:	IDENTIFIER   : "Invalid",
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Verify aria-describedby value on the input tags matches the ul of inputDefaultError
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    verifyAriaIdCorrect : function(ul, input){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	var ulId = $A.test.getElementAttributeValue(ul, "id");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        var inputId =  $A.test.getElementAttributeValue(input, "aria-describedby");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        $A.test.assertEquals(ulId, inputId, "Aria-describedby attribute on the input tag and the id from the ul do not match")
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Verify that the component actually is how we expect it to be
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    verifyInputDefaultStructure : function(input, ul, ulLength, childLength, ulIndex2Use){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	 $A.test.assertEquals(ulLength, ul.length, "uiInputDefaultError unordered list was not found");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:         //Grab the uls children and verify that there are three
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:         var chlds = ul[ulIndex2Use].children;
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:         $A.test.assertEquals(childLength, chlds.length, "The amount of children is incorrect");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:       //Verify aria-describedby value on the input tags matches the ul of inputDefaultError
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js: 		this.verifyAriaIdCorrect(ul[ulIndex2Use], input)
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Code that happens multiple places, fires, grabs necessary data, then validates
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    validateBasic : function(cmp, ruauId){  	
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:		var input = cmp.find(ruauId).getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:		this.verifyInputDefaultStructure(input, ul, 1, 3, 0); 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Fire validation on component and verify that it is there 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    fireErrorValidation : function(butn, ulIsNotPresent){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	$A.test.addWaitFor(ulIsNotPresent, function (){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:			return $A.util.isUndefinedOrNull($A.test.getElementByClass("uiInputDefaultError"));
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     //Testing that the input default component can still links up correctly when validated during the init.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testInputDefaultDynamic : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        attributes : {"caseToRender" : "dynamic"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        	$A.test.addWaitFor(false, function (){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    			return $A.util.isUndefinedOrNull($A.test.getElementByClass("uiInputDefaultError"));
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var input = $A.test.getElementByClass("class1");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            //Grabbing the original id (the first element created)
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var aId = $A.util.getElementAttributeValue(ul[0],"id");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var ulIndex2Use = 0;
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            this.verifyInputDefaultStructure(input[0], ul, 1, 1, ulIndex2Use)
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        	 //Validate the components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("new_button"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var ulIndex2Use = 0;
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var aId = $A.util.getElementAttributeValue(ul[0],"id");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            //Making sure that we are only looking at the ul that we have not seen yet
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            if($A.util.getElementAttributeValue(ul[0],"id") === aId){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            //Verify second dynamically created input works correctly
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var input = $A.test.getElementByClass("class2");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            this.verifyInputDefaultStructure(input[0], ul, 2, 1, ulIndex2Use);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Verify that inputDefault error only shows up on the correct input that is broken, and that it has the correct values
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testInputDefaultShowsWithOnlyOneItem : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes : {"caseToRender" : "default"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Verify that there are no inputDefaultErrors or uls on the page
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		$A.test.assertEquals(document.getElementsByTagName("ul").length, 0, "There should be no uls present")
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Validate the components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var chldsText = "",
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//There should only be on ul/inputDefaultError component on the page
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(cmp.find("defaultInvalid").getElement(), ul, 1, 3, 0);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		 //Grab the uls children and verify that there are three
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            var chlds = ul[0].children;
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Verify error messages are correct
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:            	$A.test.assertTrue(this.ERROR_OUTPUT.indexOf(chldsText) > -1, "Error message that is present is incorrect");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * Show inputDefault error then take it away, then put it back
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testInputDefaultToggles : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: {"caseToRender" : "default"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Validate the components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var input = cmp.find("defaultInvalid").getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Grab ul with errors
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Verify IDS match and the amount of errors match
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 3, 0);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        	this.fireErrorValidation(cmp.find("validate"), true);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:		    $A.test.assertUndefinedOrNull($A.test.getElementByClass("uiInputDefaultError"), "There should not be an inputDefaultError on the page!");	
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Make the component have errors again
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        	this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var input = cmp.find("defaultInvalid").getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Verify IDS match and the amount of errors match
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 3, 0);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    //Show inputDefault error then take it away (DOES NOT WORK!) W-2302015
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    _testInputDefaultWorkWithErrorComponentAttribute : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: {"caseToRender" : "customUsage"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Grab ul with errors
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var ul = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var input = cmp.find("customUsageInvalid").getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//InputDefaultError Should be rendered already
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 0, 0);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Validate the components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 3, 0); 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		//Validate the components
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 0, 0); 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:     * All tests from here on down, test individual components and make sure that the connection is still present 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "select"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"select"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "text"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"text"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputSearch : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "search"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"search"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputTextArea : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "textArea"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"textArea"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputDate : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "date"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"date"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    //This component is special because it has two inputDefaultErrors already on page
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputDateTime : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "dateTime"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:        	var ulArray = $A.test.getElementByClass("uiInputDefaultError");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var input = cmp.find("dateTime"+this.IDENTIFIER).getElement();
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		var ul = [];
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		for(var i = 0; i< ulArray.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		   if($A.util.getElementAttributeValue(ulArray[i], "class").indexOf("hide") < 0){
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    			   ul.push(ulArray[i]);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.verifyInputDefaultStructure(input, ul, 1, 3, 0); 
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputRadio : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "radio"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"radio"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputRange : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "range"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"range"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    testCmpWithInputTextAreaForAutoComplete : {
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "autoCompleteTextArea"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"autoCompleteTextArea"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    	attributes: { "caseToRender" : "autoCompleteText"},
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.fireErrorValidation(cmp.find("validate"), false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultError_Test/inputDefaultError_TestTest.js:    		this.validateBasic(cmp,"autoCompleteText"+this.IDENTIFIER);
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:  <ui:inputText maxlength="5"/>
ruau/ruau/SouRCeS/test/components/uitest/inputText_MaxLength/inputText_MaxLength.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:<ruau:component>	
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ruau:attribute name="label" type="String" description="label of the property" />
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ruau:attribute name="name" type="String" description="name of the property" />
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ruau:attribute name="value" type="Integer" description="value of the property" />
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ruau:attribute name="newClass" type="String" description="name of the property" />
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:	<ui:inputNumber label="{!v.label}" value="{!v.value}" class="{!v.newClass}" ruau:id="myInputNumber"/>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js:	  var inputCmp = cmp.find("myInputNumber")
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js:        inputCmp.setValid('v.value',false);
ruau/ruau/SouRCeS/test/components/uitest/inputDefaultErrorDynamic_test/inputDefaultErrorDynamic_testController.js:        inputCmp.addErrors('v.value',[{message : "This is an invalid value: " + inputCmp.get('v.value')}]);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:        var totalItems = cmp.get('v.pageSize')* cmp.get("v.totalPages");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:        cmp.set('v.totalItems', totalItems);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:    handleProvide: function (cmp, evt, hlp) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:        var currentPage = cmp.get('v.currentPage'),
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:            pageSize = cmp.get('v.pageSize'),
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:            tasks = hlp.createTasks(cmp, currentPage, pageSize),
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:            ascending = true;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:            ascending = false;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:            hlp.sort(tasks, column, ascending);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderController.js:        hlp.fireDataChangeEvent(cmp, tasks);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:<ruau:component extends="ui:dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:attribute name="sortBy" type="String"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:attribute name="currentPage" type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:attribute name="pageSize" type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:attribute name="loadData" type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:attribute name="totalPages" type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:    <ruau:handler name="provide" action="{!c.handleProvide}"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProvider.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:     * ascending - b is greater than a.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:    sort: function (items, column, ascending) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        items.sort(function (a, b) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:            var aGtb = parseInt(a[column]) > parseInt(b[column]),
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:            if (aGtb) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:            else if (a[column] === b[column]) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:            if (!ascending) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:    createTasks: function (cmp, currentPage, pageSize) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        var items = [];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        // Hack to make 'zero based'. 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        --currentPage;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        var tmpId;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        for (var i = 1; i <= pageSize; i++) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:        	tmpId = ((currentPage * pageSize) + i);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:                date : '2014-01-01 '+tmpId,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:                name : 'John Doe '+tmpId, 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_TestDataProvider/dataGrid_TestDataProviderHelper.js:                relatedTo : 'Acme '+tmpId
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  EXPECTED_5    : ['Id', 'Subject', 'Name', 'RelatedTo', 'Due Date'],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  EXPECTED_1    : ['Name'],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  EXPECTED_2_1  : ['Item Id', 'Item Subject', "Name"],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  EXPECTED_ADD  : ['Due Date'],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Function that will extract firing the button
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:     var button = cmp.find(buttonId).getElement();
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Function that will create the expected data for the expected headers
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  getExpectedData : function(baseElement){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	var elements = [], 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    values = [],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    inBetweenValues=[],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    arrayValue;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	if(baseElement === "6"){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		values = ["", "Foo ", "John Doe ", "Acme ", ""];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		keys   = ['id', 'subject', 'name', 'relatedTo', 'Date'];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	else if(baseElement === "5"){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		values = ["", "Foo ", "John Doe ", "Acme ", "2014-01-01 "];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		keys   = ['id', 'subject', 'name', 'relatedTo', 'date'];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	else if (baseElement === "2"){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		values = ["", "Foo "];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	else if (baseElement === "1"){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		values = ["John Doe "];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		keys   = ['name'];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		values = ["2014-01-01 "];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		keys   = ['date'];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	for(var i = 0; i < 10; i++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		inBetweenValues=[];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		for(var j = 0; j < values.length; j++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:				arrayValue = values[j]+""+(i+1);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:				arrayValue = undefined;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:			inBetweenValues.push(arrayValue);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		elements.push(inBetweenValues);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	return {"keys" : keys,  "values" : elements };
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Verify that each row element is correct and does what we want it to
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  verifyRow : function(domRow, expectedValues, cmpRow, assertFunc){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var keys = expectedValues["keys"];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var expectedRows = expectedValues["values"];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var tds = null;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var currExpectedRow = null;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var currCmpRow = null;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      for(var i = 0; i < domRow.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	  tds = domRow[i].getElementsByTagName("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	  for(var j = 0; j < keys.length; j++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    		  assertFunc($A.util.getText(tds[j]), ""+currExpectedRow[j], ""+currCmpRow[keys[j]], keys.length-1 == j);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Verify that the headers that have been rendered are correct
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  verifyHeaderElements : function(grid, expectedNumberOfHeaders, expectedResults){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    var headers_rendered = grid.getElement().getElementsByTagName("th");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    var headers_internal = grid.get("v.columns");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    var headerText_internal = "";
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    var headerText_rendered = "";
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    //Verify Header number
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    $A.test.assertEquals(expectedNumberOfHeaders, headers_rendered.length, "The total amount of headers expected was not correct");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    $A.test.assertEquals(expectedNumberOfHeaders, headers_internal.length, "The total amount of headers in v.columns was not correct");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    for(var i = 0; i < expectedNumberOfHeaders; i++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:       headerText_internal = $A.util.getText(headers_internal[i].getElement());
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:       headerText_rendered = $A.util.getText(headers_rendered[i]);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:       $A.test.assertEquals(expectedResults[i],headerText_internal,"Header value from internal variable is not correct");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:       $A.test.assertEquals(expectedResults[i],headerText_rendered,"Header rendered is not correct");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:     * function that will only get the elements that are not comments
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var elementArray = [];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:       for(var i = 0; i < elements.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:          if(elements[i].tagName != "!"){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            elementArray.push(elements[i]);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      return elementArray;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            var tbody = document.getElementsByTagName("tbody")[0];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            var trs = this.getOnlyTrs(tbody.children);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            var itemsInBody =  cmp.find("grid").get("v.items");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            $A.test.assertEquals(colCount, trs.length, "The total amount of items on the page are incorrect");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            $A.test.assertEquals(colCount, itemsInBody.length, "The total amount of elements in v.items is incorrect");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Make sure that the body that has been rendered is correct. This will check both internal and external variables
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  verifyBodyElements : function(cmp, expectedElements, assertFunc){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var trs = this.getRowElements(cmp, 10);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var body_rendered = trs[0];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var body_internal = trs[1];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      if($A.util.isUndefinedOrNull(assertFunc)){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	  assertFunc = function(td, expectedDomRow, currCmpRow){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    		  $A.test.assertEquals(td, expectedDomRow, "Row element data does not match what it should be");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:              $A.test.assertEquals(""+currCmpRow, expectedDomRow, "Row data stored in cmp data does not match what it should be");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      this.verifyRow(body_rendered, expectedElements ,body_internal, assertFunc);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Fire button that will create and add headers, then wait for them to appear
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  fireAndWait : function(cmp, id, firstElm){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      $A.test.addWaitFor(true, function() {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:         var text = cmp.find("grid").getElement().getElementsByTagName("th")[0]
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:           return false;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Function that will check for the headers, grab how we think the data grid should look, verify the body elements, then change the body
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  baseFunction : function(cmp, initialArray, secondArray, totalExpected, secondButtonID){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	  //Verify table headers have something (cmp and dom table, no data)
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      this.verifyHeaderElements(cmp.find("grid"), totalExpected, initialArray);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      var expectedElements = this.getExpectedData(""+totalExpected);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      //fire and wait for next elements to come
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:      this.fireAndWait(cmp, secondButtonID, secondArray[0]); 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Verifying that going from header to another of same size does not change
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  testHeaderSizeDoesNotChange : {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:         this.fireAndWait(cmp, "goTo1Column", this.EXPECTED_1[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	   this.baseFunction(cmp, this.EXPECTED_1, this.EXPECTED_ADD, 1, "addAColumn");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:           //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:           this.verifyHeaderElements(cmp.find("grid"), 1, this.EXPECTED_ADD); 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  * Verifying that going from a small header to a larger header renders the correct data
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js: testHeaderSizeChangesFromSmallToLarge: {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:        this.fireAndWait(cmp, "goTo1Column", this.EXPECTED_1[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	  this.baseFunction(cmp, this.EXPECTED_1, this.EXPECTED_2, 1, "goTo2Columns");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:          //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:          this.verifyHeaderElements(cmp.find("grid"), 2, this.EXPECTED_2); 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Verifying that going from headers to no headers actually works and renders nothing on screen
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  testHeaderToNoHeaders : {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:        this.fireAndWait(cmp, "goTo5Columns", this.EXPECTED_5[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:    	  this.baseFunction(cmp, this.EXPECTED_5, [undefined], 5, "removeColumns");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:          //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:          this.verifyHeaderElements(cmp.find("grid"), 0, []);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Minimal case. Verifying going from large to small header renders the correct elements
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  testLargeHeaderToSmallHeader  : {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        this.fireAndWait(cmp, "goTo5Columns", this.EXPECTED_5[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    	  this.baseFunction(cmp, this.EXPECTED_5,  this.EXPECTED_2, 5, "goTo2Columns");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    	  //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	          this.verifyHeaderElements(cmp.find("grid"), 2, this.EXPECTED_2);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * verifying that appending the data works as expected
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	  attributes : {"appendOrOverwrite" : "append"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            this.fireAndWait(cmp, "goTo2Columns", this.EXPECTED_2[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        this.baseFunction(cmp, this.EXPECTED_2,  this.EXPECTED_2_1, 2, "goTo1Column");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            this.verifyHeaderElements(cmp.find("grid"), 3, this.EXPECTED_2_1);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Using columns that are already present verify that we can append to them dynamically
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	  attributes : {"appendOrOverwrite" : "append", "useDynamicColumns" : "false"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        this.baseFunction(cmp, this.EXPECTED_2,  this.EXPECTED_2_1, 2, "goTo1Column");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            this.verifyHeaderElements(cmp.find("grid"), 3, this.EXPECTED_2_1);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Verify that using a column with  the wrong name renders the incorrect header but nothing else 
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:  testCaseSensitiveColumn : {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		 this.fireAndWait(cmp, "goToColumnWithWrongName", this.EXPECTED_5[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		// this.verifyHeaderElements(cmp.find("grid"), 5, this.EXPECTED_5);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		 var expectedElements = this.getExpectedData("6");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:		 var assertFunction = function(td, expectedDomRow, currCmpRow, lastRow){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:			 var lastRowValue = "";
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:			 if(!lastRow){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:				 lastRowValue = expectedDomRow;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   		    $A.test.assertEquals(td, lastRowValue, "Row element data does not match what it should be");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:            $A.test.assertEquals(currCmpRow, expectedDomRow, "Row data stored in cmp data does not match what it should be");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	     this.verifyBodyElements(cmp, expectedElements, assertFunction);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:   * Test the ability to flow from one column type to the next
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	        this.fireAndWait(cmp, "goTo5Columns", this.EXPECTED_5[0]);  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    	  this.baseFunction(cmp, this.EXPECTED_5,  this.EXPECTED_2, 5, "goTo2Columns");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    	  //verify that headers and correct data does not exists
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	          this.verifyHeaderElements(cmp.find("grid"), 2, this.EXPECTED_2);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	          this.baseFunction(cmp, this.EXPECTED_2,  this.EXPECTED_1, 2, "goTo1Column");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestTest.js:	    	  this.verifyHeaderElements(cmp.find("grid"), 1, this.EXPECTED_1);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp: <ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="pageSize"            type="Integer" default="10"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="currentPage"         type="Integer" default="1"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="totalPages"          type="Integer" default="5"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="colCount"            type="Integer" default="0"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="useSecondColumnType" type="Boolean" default="true"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="appendOrOverwrite"   type="String"  default="overwrite"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="useDynamicColumns"   type="Boolean" default="true"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="sortBy"              type="String"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:attribute name="totalItems"          type="Integer"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:dependency resource="markup://ui:dataGrid"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ruau:dependency resource="markup://ui:dataGridColumn"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="Add a Column"   press='{!c.addAColumn}'              ruau:id="addAColumn"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="5 Columns"      press='{!c.goTo5Columns}'            ruau:id="goTo5Columns"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="2 Columns"      press='{!c.goTo2Columns}'            ruau:id="goTo2Columns"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="1 Columns"      press='{!c.goTo1Column}'             ruau:id="goTo1Column"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="use wrong name" press='{!c.goToColumnWithWrongName}' ruau:id="goToColumnWithWrongName"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    <ui:button label="remove Columns" press='{!c.removeColumns}' ruau:id="removeColumns"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:     <ruau:if isTrue="{!v.useDynamicColumns}">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	     <ui:dataGrid ruau:id="grid" mode="VIEW" sortBy="{!v.sortBy}">  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	            <uitest:dataGrid_TestDataProvider      ruau:id="provider"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	                                                   pageSize="{!v.pageSize}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	                                                   currentPage="{!v.currentPage}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	                                                   totalPages="{!v.totalPages}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	                                                   totalItems="{!v.totalItems}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    	</ui:dataGrid>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    	<ruau:set attribute="else">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    		<ui:dataGrid ruau:id="grid" mode="VIEW" sortBy="{!v.sortBy}">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	    		<ruau:set attribute="columns">     
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		            <ui:dataGridColumn label="Item Id" name="id" editable="false" sortable="true"/>             
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		            <ui:dataGridColumn label="Item Subject" name="subject"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		        </ruau:set>  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		        <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		            <uitest:dataGrid_TestDataProvider      ruau:id="provider"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		                                                   pageSize="{!v.pageSize}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		                                                   currentPage="{!v.currentPage}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		                                                   totalPages="{!v.totalPages}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		                                                   totalItems="{!v.totalItems}"
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:		        </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:	    	</ui:dataGrid>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    	</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp:    </ruau:if>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTest.cmp: </ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:	//Only add due date
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:    addAColumn    : function(cmp, evt, helper){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:    	var cols = helper.getColumnJson(4, 1, "A");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, cols, cmp.get("v.appendOrOverwrite"));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		var cols = helper.getColumnJson(0, 5, "A");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, cols, cmp.get("v.appendOrOverwrite"));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:	//Only get the first two headers/columns (id, column)
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		var cols;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:			cmp.set("v.useSecondColumnType", false);			
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, cols, cmp.get("v.appendOrOverwrite"));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:	//Only add the third column (name)
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		var cols = helper.getColumnJson(2, 1, "A");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, cols, cmp.get("v.appendOrOverwrite"));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:	goToColumnWithWrongName : function(cmp, evt, helper){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		var cols = helper.getColumnJson(0, 5, "C");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, cols, cmp.get("v.appendOrOverwrite"));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestController.js:		helper.addColumns(cmp, [], "overwrite");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:	//Create the json header that will link with the data provider
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    getColumnJson : function(colStart, amount, useGroup){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	var COLUMN_HEADER_A = [{label:'Id', name: "id"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	                       {label:'Subject',  name: "subject"},{label:'Name', name: "name"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	                       {label:'RelatedTo', name: "relatedTo"}, {label:'Due Date', name: "date"}],
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	    COLUMN_HEADER_B = [{label:'Item Id', name: "id"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	                       {label:'Item Subject',  name: "subject"},{label:'Item Name', name: "name"},
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	                       {label:'Item RelatedTo', name: "relatedTo"}, {label:'Item Due Date', name: "date"}];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	 var arr = [];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    		 arr = COLUMN_HEADER_A;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    		 arr = COLUMN_HEADER_B;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    		 arr = COLUMN_HEADER_A;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    		 arr[4].name = "Date";
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	 return arr.splice(colStart, amount);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    //Add all of the columns that are sent in
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    addColumns : function(cmp, colJson, which2use){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:      var colToEndOn   = colJson.length;
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:      var columns = [];
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:      var funcToUse =  function(newCmp) {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:	  for(var i = 0; i<colToEndOn; i++){  
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    	this.createColumns(colJson[i], funcToUse);
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:	  var grid = cmp.find("grid");
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:          grid.set("v.columns", grid.get("v.columns").concat(columns));
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    //Creating the columns and adding them into the array to put in the data grid
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:    createColumns : function(colInfo, funcToUse){
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:					"componentDef": "markup://ui:dataGridColumn",
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:		            "attributes": {
ruau/ruau/SouRCeS/test/components/uitest/dataGrid_ColumnsTest/dataGrid_ColumnsTestHelper.js:		                "values": colInfo
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:      <ruau:attribute name="value" type="String" default="2013-09-25"/>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:      <ui:inputDateTrigger ruau:id="inputWDefValue" displayDatePicker="true" format="yyyy-MM-dd" value="{!v.value}"/><br/>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:      &nbsp;&nbsp;&nbsp;&nbsp;<ui:inputDateTrigger ruau:id="inputWODefValue" class="date_input_box" displayDatePicker="true" format="MM/dd/yyyy"/><br/>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<ui:inputDate value="{!v.value}" ruau:id="inputWNoDatePicker" displayDatePicker="true" loadDatePicker="true" format="yyyy-MM-dd"/>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:      <ui:datePickerManager ruau:id="dpm"/>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    defValueID : "inputWDefValue",
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    noDefValueID : "inputWODefValue",
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    defDatePickerID : "inputWNoDatePicker",
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    dateId : "dpm",
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Test that opens multiple datepickers then verifies that they are not overriding eachtohers Values
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    testDatepickerStoresCorrectValue : {
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:            	     this.openDatePicker(cmp, this.defValueID);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var pastWeek   = this.getDatePicker(cmp).find("grid").find("17");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       pastWeek.getEvent("click").fire({});
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:		       this.openDatePicker(cmp, this.noDefValueID);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var today = this.getDatePicker(cmp).find("today").getElement();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       $A.test.clickOrTouch(today);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var inputWDefaultValue = cmp.find(this.defValueID).getElement().value;
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var inputWODefaultValue = cmp.find(this.noDefValueID).getElement().value;
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       $A.test.assertNotEquals(inputWDefaultValue, inputWODefaultValue, "The dates in the inputText should not be equal");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Test verifying that the inputText takes in input
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Ignores iphone/ipad because those are going to be readonly fields
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    testDatepickerOpensToCorrectValue : {
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:            	     cmp.find(this.noDefValueID).set("v.value", "2013-09-25");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:            	     this.openDatePicker(cmp, this.noDefValueID);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var pastWeek   = this.getDatePicker(cmp).find("grid").find("17");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       pastWeek.getEvent("click").fire({});
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       var inputValue = cmp.find(this.defValueID).getElement().value;
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                       $A.test.assertEquals(inputValue, "2013-09-25", "The dates in the inputText should not be equal");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Test verifying that each datepicker opens up on the safe y-axis as the input 
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Ignored in IE7 because ie7 handles bounding rectangle differently and the datepicker ends up be askewed 
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    testCheckDatePickerPosition : {
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                    this.openDatePicker(cmp, this.defValueID);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	           this.verifyPosition(cmp, this.defValueID);  
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                    this.openDatePicker(cmp, this.noDefValueID);
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	           this.verifyPosition(cmp, this.noDefValueID);  
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Test verifying that there are two datepickers on the screen (1 from manager, and the other from a normal inputDate components)
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    testNumberOfDatepickersOnPage : {
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                 var datePickerSize = $A.test.getElementByClass("uiDatePicker").length;
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                 $A.test.assertEquals(2, datePickerSize, "There should be two datePickers on the screen and there aren't");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    getDatePicker: function(cmp){
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	return cmp.find("dpm").find("datePicker");
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * Method allowing us to extract whether or not we are looking at a mobile device. Extracted from two functions because 
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * depending on which mode we are in (Desktop or other), we either have a header with the Month Year combo or an outputText 
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:     * and a select value
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:                         return $A.get('$Browser.formFactor').toLowerCase() === "desktop";
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:    openDatePicker : function(cmp, inputId) {
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	var opener = cmp.find(inputId).getSuper().find("datePickerOpener").getElement();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	var inputBox = cmp.find(inputId).getSuper().find("inputText").getElement();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	var datePicker = this.getDatePicker(cmp).getElement();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	$A.test.addWaitFor(true, function(){return $A.util.hasClass(datePicker, "visible")});
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:	 var inp = cmp.find(elmId).getElement().getBoundingClientRect();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:         var dp = this.getDatePicker(cmp).getElement().getBoundingClientRect();
ruau/ruau/SouRCeS/test/components/uitest/datePickerManager_Test/datePickerManager_TestTest.js:         $A.test.assertEquals(inp["left"].toFixed(1), dp["left"].toFixed(1),"Bounding left side of inputTextBox and Datepicker for "+elmId+" do not match");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js:	updateTriggerLabel: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js:		helper.handleUpdateTriggerLabel(cmp, event, helper,"trigger");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js:	updateTriggerLabelForAttachToBody: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestController.js:		helper.handleUpdateTriggerLabel(cmp, event, helper,"triggerAttachToBody");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:<ruau:application model="java://org.ruauframework.component.ui.MenuTestModel">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:<ruau:attribute name="expandEventFired" type="boolean" default="false"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:<ruau:attribute name="collapseEventFired" type="boolean" default="false"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:<div style="display:inline-block;width:50%;vertical-align:top;overflow:hidden;">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:        <h2>Attach MenuList To Body</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:        <ui:menu ruau:id="uiMenu" class="clubMenu">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:            <ui:menuTriggerLink class="trigger" ruau:id="trigger" label="Please pick your favorite soccer club"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:            <ui:menuList class="actionMenu" ruau:id="actionMenu" attachToBody="true">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItem1" ruau:id="actionItem1" label="Bayern München" click="{!c.updateTriggerLabel}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItem2" ruau:id="actionItem2" label="FC Barcelona" click="{!c.updateTriggerLabel}" disabled="true"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItem3" ruau:id="actionItem3" label="Inter Milan" click="{!c.updateTriggerLabel}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItem4" ruau:id="actionItem4" label="Manchester United" click="{!c.updateTriggerLabel}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:	<ui:block ruau:id="overflowHidden">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:		<ruau:set attribute="right">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:		<div style="display:inline-block;width:50%;vertical-align:top;overflow:hidden;">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:        <h2>Attach MenuList To Body</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:        <ui:menu ruau:id="uiMenuAttachToBody" class="uiMenuAttachToBody">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:            <ui:menuTriggerLink class="triggerAttachToBody" ruau:id="triggerAttachToBody" label="Please pick your favorite soccer club"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:            <ui:menuList class="actionMenuAttachToBody" ruau:id="actionMenuAttachToBody" attachToBody="true">
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItemAttachToBody1" ruau:id="actionItemAttachToBody1" label="Bayern München" click="{!c.updateTriggerLabelForAttachToBody}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItemAttachTBody2" ruau:id="actionItemAttachToBody2" label="FC Barcelona" click="{!c.updateTriggerLabelForAttachToBody}" disabled="true"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItemAttachToBody3" ruau:id="actionItemAttachToBody3" label="Inter Milan" click="{!c.updateTriggerLabelForAttachToBody}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:                <ui:actionMenuItem class="actionItemAttachToBody4" ruau:id="actionItemAttachToBody4" label="Manchester United" click="{!c.updateTriggerLabelForAttachToBody}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:		 </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTest.app:</ruau:application>
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js:	handleUpdateTriggerLabel: function(cmp, event, helper,triggerId) {
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js:		var triggerCmp = cmp.find(triggerId);
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js:            var source = event.getSource();
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js:            var label = source.get("v.label");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestHelper.js:            triggerCmp.set("v.label", label);
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	 * Test to verify action menu works when interacting with the menu items 
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	 * which has attachToBody attribute set
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	 * TODO: Disabling test in IE7&8, bug W-2320774
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	testActionMenuWithAttachToBodySet:{
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:				actionMenu = cmp.find("actionMenuAttachToBody");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	menuLabel = cmp.find("triggerAttachToBody");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	item1 = "actionItemAttachToBody1";
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	item2 = "actionItemAttachToBody2";
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	item3 = "actionItemAttachToBody3";
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	//check menu is default to hidden by using AURA API
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	$A.test.assertFalse(actionMenu.get('v.visible'),"Action Menu should not be visible");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	//check menu is default to hidden by using DOM API
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	$A.test.assertTrue($A.util.hasClass(actionMenu.getElement(),"uiMenuList"), "Class name should be just uiMenuList");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	$A.test.assertFalse($A.util.hasClass(actionMenu.getElement(),"visible"), "Class name should not contain visible");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	menuLabel.get("e.click").fire();
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            //Check if secondItem in the menu is disabled
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            $A.test.addWaitForWithFailureMessage(true, function(){return cmp.find(item2).get("v.disabled");}, "Check if Item2 in the menu is disabled");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:				//make sure menuItem is attached to body directly and its not attached to uiMenu instead
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            //Test case for W-2181713
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:				var actionMenuParentElement = actionMenu.getElement().parentNode;
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:				var bodyElement = document.getElementsByTagName("body")[0];
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            $A.test.assertEquals(actionMenuParentElement, bodyElement,"Menu Item List should be attached to body");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            //Make sure horizontal alignment of menuItem is correct with reference to triggerElement
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            var actionMenuLeftPostionValue = actionMenu.getElement().getBoundingClientRect().left;
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            var triggerLeftPositonValue = menuLabel.getElement().getBoundingClientRect().left;
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            $A.test.assertEquals(actionMenuLeftPostionValue, triggerLeftPositonValue,"Menu Item is not alligned properly wrt to trigger it should be at left:"+triggerLeftPositonValue);
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            var disableAttrValue = cmp.find(item1).get("v.disabled");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:				$A.test.assertFalse(disableAttrValue,"Menu item 1 should be clickable");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	$A.test.assertTrue(actionMenu.get('v.visible'),"Menu should be visible");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	$A.test.assertTrue($A.util.hasClass(actionMenu.getElement(),"visible"), "Class name should be uiMenuList visible");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	//disable ActionItem1
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	cmp.find(item1).set("v.disabled", true);
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	        	var disableAttrValue = cmp.find(item1).get("v.disabled");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            $A.test.assertTrue(disableAttrValue,"Menu item 1 should not be clickable");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            //click actionItem3 and check if label is updated
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:	            $A.test.addWaitForWithFailureMessage(cmp.find(item3).get('v.label'), function(){return menuLabel.get('v.label')}, "Label should be updated to "+ cmp.find(item3).get('v.label'));
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:     * TODO: Disabling test in IE7&8, bug W-2320774
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:			var menuItem1 = cmp.find("actionItem1");
ruau/ruau/SouRCeS/test/components/uitest/menu_AttachToBodyTest/menu_AttachToBodyTestTest.js:			$A.test.addWaitForWithFailureMessage(menuItem1.get('v.label'), function(){return $A.test.getActiveElementText()}, "Focus should be on item 1");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    font-family: Arial;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    font-family: Arial;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    white-space: nowrap;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    display: inline-block;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:.THIS a.imageLink {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    background: url('/ruauFW/resources/qa/images/tiger2.png') no-repeat center center;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    display: block;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:.THIS li.tiger1 > a, .THIS a.tiger1 {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    background: url('/ruauFW/resources/qa/images/tiger1.jpg') no-repeat center center;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    display: block;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:.THIS li.tiger3 > a, .THIS a.tiger3 {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    background: url('/ruauFW/resources/qa/images/tiger3.png') no-repeat center center;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    display: block;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:.THIS li.tiger4 > a, .THIS a.tiger4 {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    background: url('/ruauFW/resources/qa/images/tiger4.png') no-repeat center center;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.css:    display: block;
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<ruau:application model="java://org.ruauframework.component.ui.MenuTestModel">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<ruau:dependency resource="ui:*" type="COMPONENT" />
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<div style="margin:20px;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;vertical-align:top;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Checkbox - Metadata driven menu</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuTriggerLink ruau:id="metadatatrigger" label="Snow Resorts"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Checkbox - Metadata driven menu source codes:</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;ui:menu&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuTriggerLink ruau:id="metadatatrigger" label="Snow Resorts"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuList menuItems="{&#160;!m.resorts}"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;/ui:menu&#62;'/>      
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<div style="margin:20px;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;vertical-align:top;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Actions - Metadata driven menu</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuTriggerLink class="trigger" ruau:id="trigger" label="Please pick your favorite soccer club"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuList class="actionMenu" menuItems="{!m.places}" menuSelect="{!c.pickPlace}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Actions - Metadata driven menu source codes:</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;ui:menu&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuTriggerLink ruau:id="metadataAction" label="Pick a ski place"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuList menuItems="{&#160;!m.places}" menuSelect="{&#160;!c.pickPlace}"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;/ui:menu&#62;'/>      
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<div style="margin:20px;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;vertical-align:top;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Example: how to get menu selected values</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuTriggerLink class="checkboxMenuLabel" ruau:id="checkboxMenuLabel" label="NFC West Teams"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuList class="checkboxMenu" ruau:id="checkboxMenu" menuItems="{!m.data}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:button class="checkboxButton" ruau:id="checkboxButton" press="{!c.getMenuSelected}" label="Check the selected menu items"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText class="result" ruau:id="result" value="Which items get selected"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;ui:menu&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuTriggerLink ruau:id="metadatatrigger" label="Snow Resorts"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#160;&#160;&#60;ui:menuList ruau:id="myMenu" menuItems="{&#160;!m.data}"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;/ui:menu&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;ui:button press="{&#160;!c.getMenuSelected}" label="Check the selected menu items"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <ui:outputText value='&#60;ui:outputText ruau:id="result" value="Which items get selected"/&#62;'/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:<div style="margin:20px;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:    <div style="display:inline-block;width:50%;vertical-align:top;">
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:        <h2>Example: custom Image Menu Item</h2>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuTriggerLink ruau:id="imageTrigger" class="imageLink" label="Tiger"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:            <ui:menuList ruau:id="tigerMenu" class="inline" menuItems="{!m.images}" menuSelect="{!c.pickTiger}"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTest.app:</ruau:application>
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:	handleUpdateTriggerLabel: function(cmp, event,triggerId) {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:		var triggerCmp = cmp.find(triggerId);
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            var source = event.getSource();
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            var label = source.get("v.label");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            triggerCmp.set("v.label", label);
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:    	var triggerCmp = cmp.find(triggerId);
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            var source = event.getParam("selectedItem");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            var label = source.get("v.label");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestHelper.js:            triggerCmp.set("v.label", label);
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:    updateTriggerLabel: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        helper.handleUpdateTriggerLabel(cmp, event, "trigger");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:    updateLabel: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        helper.handleUpdateTriggerLabel(cmp, event, "mytrigger");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var source = event.getSource();
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var label = source.get("v.label");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        console.log("click menu item " + label);
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:    pickPlace: function(cmp, event, helper) {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        helper.menuSelect(cmp, event, "imageTrigger");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var menuCmp = cmp.find("checkboxMenu");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var menuItems = menuCmp.get("v.childMenuItems");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var values = [];
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        for (var i = 0; i < menuItems.length; i++) {
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:            var c = menuItems[i];
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:                values.push(c.get("v.label"));
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        var resultCmp = cmp.find("result");
ruau/ruau/SouRCeS/test/components/uitest/menu_MetadataTest/menu_MetadataTestController.js:        resultCmp.set("v.value", values.join(","));
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js:		component.set("v.isDoneRendering", false);
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js:        var list = component.find("list");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestController.js:	handleRerenderComplete: function(component) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:	 * Test able to grab and display more data from server.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:	testDataFromServerDisplays : {
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:		attributes: {isGetDataFromServer : true},
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			// waiting for intial items of list to load.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			$A.test.addWaitFor(25, function(){
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			// more items should be fetched and displayed.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			var btn = cmp.find("btnShowMore");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			$A.test.assertEquals(false, cmp.get("v.isDoneRendering"), "isDoneRendering should be false.");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:			$A.test.addWaitFor(50, function(){return cmp.find("list").get("v.items").length;}, function(){
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_TestTest.js:				$A.test.assertEquals(true, cmp.get("v.isDoneRendering"), "isDoneRendering should be true.");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:<ruau:component implements="ui:pagingInterface, ui:scrollerEmbeddable">
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:	<ruau:attribute name="isDoneRendering" type="Boolean" default="{!false}"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:	<ruau:attribute name="isGetDataFromServer" type="Boolean"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:	<ruau:handler name="showMore" action="{!c.showMore}"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:	<ui:infiniteList ruau:id="list" itemVar="row" currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}" rerenderComplete="{!c.handleRerenderComplete}">
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:		<ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:			<uitest:infiniteDataProvider currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}" getDataFromServer="{!v.isGetDataFromServer}"/>		
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:		</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:		<ruau:set attribute="itemTemplate">
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:			<div style="border: 1px solid black">{!row.index} : {!row.char}</div>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:		</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:	<ui:button ruau:id="btnShowMore" label="show more" press="{!c.showMore}"/><br/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteListCscc_Test/infiniteListCscc_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:     * Verify that outputDateTime can accept ISO8601 format from java model and display it.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:    testDateTimeISOValueFromJavaModel:{
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            var testCmp = cmp.find('ISOStringFromJava');
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(testCmp.find('span').getElement()).length > 0;},function(){
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:                ruau.test.assertEquals('10/23/2004 16:30:00 +00:00', $A.test.getText(testCmp.find('span').getElement()), "Failed to display DateTime from Java model");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:     * Verify that timezone can be 'overriden' using timezone attribute.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:    testCalendarISOValueWithTimeZoneOverride:{
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            var testCmp = cmp.find('ISOStringFromJavaWithTZOverride');
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.addWaitFor(true, function(){return $A.test.getText(testCmp.find('span').getElement()).length > 0;},function(){
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:                ruau.test.assertEquals('2004-10-23 09:30:00', $A.test.getText(testCmp.find('span').getElement()), "Failed to display DateTime from Java model");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:     * Verify that outputDateTime can accept Calendar object from java model and display it.  
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:    testCalendarValueFromJavaModel:{
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            var testCmp = cmp.find('calendarFromJava');
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.assertEquals('Oct 23, 2004 4:30:00 PM', testCmp.find('span').getElement().textContent, "Failed to display DateTime from Java model");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:     * Verify that timezone can be 'overriden' using timezone attribute.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:    testCalendarValueWithTimeZoneOverride:{
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            var testCmp = cmp.find('calendarFromJavaWithTZOverride');
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:            ruau.test.addWaitFor(true, function(){return testCmp.find('span').getElement().textContent.length > 0;},function(){
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModelTest.js:                ruau.test.assertEquals('2005-07-04 09:30:00', testCmp.find('span').getElement().textContent, "Failed to display DateTime from Java model");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    <ui:outputDateTime value='{!m.dateTimeISOString}' ruau:id='ISOStringFromJava' format='MM/dd/yyyy HH:mm:ss Z' timezone='GMT'/>
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    <ui:outputDateTime value='{!m.dateTimeISOString}' timezone='America/Phoenix' format='yyyy-MM-dd hh:mm:ss' ruau:id='ISOStringFromJavaWithTZOverride' />
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    <ui:outputDateTime value='{!m.calendar}' ruau:id='calendarFromJava' timezone='GMT'/>
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:    <ui:outputDateTime value='{!m.calendarWithTimeZone}' timezone='America/Phoenix' format='yyyy-MM-dd hh:mm:ss' ruau:id='calendarFromJavaWithTZOverride' />
ruau/ruau/SouRCeS/test/components/uitest/outputDateTime_JavaModel/outputDateTime_JavaModel.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<!-- attribute that indicates that search has been called atleast once. Its set via c.doSearch -->
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<ruau:attribute name="searched" type="boolean" default="false"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<ruau:attribute name="value" type="string" />
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<ruau:attribute name="showClear" type="boolean" default="{!false}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<div id="search">
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:<ui:inputSearch ruau:id="searchCmp" class="search" updateOn="search" search="{!c.doSearch}" value="{!v.value}" showClear="{!v.showClear}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEvent.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js:    doSearch: function(cmp) {
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js:      $A.log('do search called');
ruau/ruau/SouRCeS/test/components/uitest/inputSearch_HandlingSearchEvent/inputSearch_HandlingSearchEventController.js:      cmp.set("v.searched", true);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:    <ui:inputSelect ruau:id="dynamicSelect"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptions.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js:		var opts = [{ "label": "Option1", "value": "Option1", "class": "option" },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js:		            { "label": "Option2", "value": "Option2", "class": "option", selected: true },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js:		            { "label": "Option3", "value": "Option3", "class": "option" },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js:		            { "label": "Option4", "value": "Option4", "class": "option" }];
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_DynamicOptions/inputSelect_DynamicOptionsController.js:		cmp.find("dynamicSelect").set("v.options", opts);
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css:	padding: 0;
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.css:	margin: 8px;
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js:	refresh: function(component, listName) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js:            var list = component.find(listName);
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js:	showMore: function(component, listName) {
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestHelper.js:            var list = component.find(listName);
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:<ruau:component implements="ui:pagingInterface, ui:scrollerEmbeddable">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:	<ruau:attribute name="extendedPullAtrib"  type="Ruue.Component[]"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:	 <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:	<ui:scroller ruau:id="scroller1" onPullToRefresh="{!c.refresh}" onPullToShowMore="{!c.showMore}" class="test">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:	    <ui:infiniteList ruau:id="list" itemVar="row" currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			<ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:				<uitest:infiniteDataProvider currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}"/>		
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			<ruau:set attribute="itemTemplate">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:				<div style="border: 1px solid black">{!row.index} : {!row.char}</div>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    <ui:scroller ruau:id="scroller2" onPullToRefresh="{!c.refresh2}" onPullToShowMore="{!c.showMore2}" class="test">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:	    <ui:infiniteList ruau:id="list2" itemVar="row" currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			<ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:				<uitest:infiniteDataProvider currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}" listType="single"/>		
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			<ruau:set attribute="itemTemplate">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:				<div style="border: 1px solid black">{!row.index} : {!row.char}</div>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:			</ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:    <ui:scroller ruau:id="scroller3" class="test">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:        <ui:infiniteList ruau:id="list3" itemVar="row" currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:            <ruau:set attribute="dataProvider">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:                <uitest:infiniteDataProvider currentPage="{!v.currentPage}" pageSize="{!v.pageSize}" totalItems="{!v.totalItems}" listType="single"/>       
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:            </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:            <ruau:set attribute="itemTemplate">
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:                <div style="border: 1px solid black">{!row.index} : {!row.char}</div>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:            </ruau:set>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:// Excluding ie8 and 7 browsers due to lack of support for addEventListener function
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:    * Testing to make sure that when pullToRefresh and PullToShowMore are not present,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:    * that there isn't a spacer div. This appears when the amount of data on the screen
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:    * does not fill out the scrollable area 
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:   testNoPullToRefreshNoDivSpace: {
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:            var wrapper     = cmp.find("scroller3").getElement(),
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:                content     = wrapper.children[0],
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestTest.js:            $A.test.assertFalse(divChildren > 1, "User does not want to pull to refresh, there should not be a div for a spacer here");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:            var array = [];
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                        array.push(newcmp);
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                        component.set("v.extendedPullAtrib",array);
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                            "descriptor": "markup://ui:outputText"
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                        "attributes": {
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                            "values": {
ruau/ruau/SouRCeS/test/components/uitest/infiniteList_ScrollerTest/infiniteList_ScrollerTestController.js:                            	"value"  : "12/12/2012 12:12"
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:    <ui:outputDate value='{!m.date}' format='M/dd/yy' ruau:id='dateFromJava'/>
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModel.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js:     * Verify that outputDate can accept Date object from java model and display it.
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js:    testDateValueFromJavaModel:{
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js:            var testCmp = cmp.find('dateFromJava');
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js:            ruau.test.assertNotNull(testCmp);
ruau/ruau/SouRCeS/test/components/uitest/outputDate_JavaModel/outputDate_JavaModelTest.js:            ruau.test.assertEquals('9/23/04', $A.test.getText(testCmp.find('span').getElement()), "Failed to display Date from Java model");
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:<ruau:component
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:	controller="java://org.ruauframework.component.ui.UIScrollerDataProvider"
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/> 	
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:			margin: 0;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:			padding: 0;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:	<div id="header" class="common">New Ruue Scroller</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:		<ui:scroller class="scrollWrapper" 
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:			useNativeScroller = "true"
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:			onScrollMove="{!c.scrollMoveHandler}" 
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:			ruau:id="test-scroller" showScrollbars="true">
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r1">Pretty row 1</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r2">Pretty row 2</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r3">Pretty row 3</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r4">Pretty row 4</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r5">Pretty row 5</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r6">Pretty row 6</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r7">Pretty row 7</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r8">Pretty row 8</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r9">Pretty row 9</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r10">Pretty row 10</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r11">Pretty row 11</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r12">Pretty row 12</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r13">Pretty row 13</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r14">Pretty row 14</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r15">Pretty row 15</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r16">Pretty row 16</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r17">Pretty row 17</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r18">Pretty row 18</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r19">Pretty row 19</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r20">Pretty row 20</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r21">Pretty row 21</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r22">Pretty row 22</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r23">Pretty row 23</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r24">Pretty row 24</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r25">Pretty row 25</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r26">Pretty row 26</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r27">Pretty row 27</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r28">Pretty row 28</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r29">Pretty row 29</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r30">Pretty row 30</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r31">Pretty row 31</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r32">Pretty row 32</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r33">Pretty row 33</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r34">Pretty row 34</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r35">Pretty row 35</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r36">Pretty row 36</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r37">Pretty row 37</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r38">Pretty row 38</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r39">Pretty row 39</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r40">Pretty row 40</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r41">Pretty row 41</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r42">Pretty row 42</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r43">Pretty row 43</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r44">Pretty row 44</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r45">Pretty row 45</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r46">Pretty row 46</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r47">Pretty row 47</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r48">Pretty row 48</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r49">Pretty row 49</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r50">Pretty row 50</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r51">Pretty row 51</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r52">Pretty row 52</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r53">Pretty row 53</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r54">Pretty row 54</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r55">Pretty row 55</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r56">Pretty row 56</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r57">Pretty row 57</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r58">Pretty row 58</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r59">Pretty row 59</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r60">Pretty row 60</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r61">Pretty row 61</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r62">Pretty row 62</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r63">Pretty row 63</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r64">Pretty row 64</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r65">Pretty row 65</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r66">Pretty row 66</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r67">Pretty row 67</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r68">Pretty row 68</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r69">Pretty row 69</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r70">Pretty row 70</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r71">Pretty row 71</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r72">Pretty row 72</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r73">Pretty row 73</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r74">Pretty row 74</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r75">Pretty row 75</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r76">Pretty row 76</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r77">Pretty row 77</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r78">Pretty row 78</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r79">Pretty row 79</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r80">Pretty row 80</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r81">Pretty row 81</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r82">Pretty row 82</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r83">Pretty row 83</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r84">Pretty row 84</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r85">Pretty row 85</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r86">Pretty row 86</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r87">Pretty row 87</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r88">Pretty row 88</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r89">Pretty row 89</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r90">Pretty row 90</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r91">Pretty row 91</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r92">Pretty row 92</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r93">Pretty row 93</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r94">Pretty row 94</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r95">Pretty row 95</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r96">Pretty row 96</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r97">Pretty row 97</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r98">Pretty row 98</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r99">Pretty row 99</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:				<div class="item" id="r100">Pretty row 100</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:	<div id="footer" class="common">This is a footer</div>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:	<span id="scrollMoveHandlerCalled">0</span>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeController.js:		document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeController.js:    scrollMoveHandler: function(component, event, helper){
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeController.js:    	var span = document.getElementById('scrollMoveHandlerCalled');
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeController.js:    	if(span.textContent.trim() === "0"){
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeController.js:    		span.textContent = "1";
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:	makeDOM : function(resultSet, cssClassName){
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:		var dom = [],
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:		for(var i in resultSet){
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:			divItem = document.createElement('div');
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:			divItem.textContent = resultSet[i].label;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:			divItem.id = resultSet[i].value + cssClassName;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNativeHelper.js:			divItem.className = "item " + cssClassName;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:.THIS#header {
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-color:#d51875;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-webkit-gradient(linear, 0 0, 0 100%, color-stop(0, #fe96c9), color-stop(0.05, #d51875), color-stop(1, #7b0a2e));
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-moz-linear-gradient(top, #fe96c9, #d51875 5%, #7b0a2e);
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-o-linear-gradient(top, #fe96c9, #d51875 5%, #7b0a2e);
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-color:#222;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-webkit-gradient(linear, 0 0, 0 100%, color-stop(0, #999), color-stop(0.02, #666), color-stop(1, #222));
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-moz-linear-gradient(top, #999, #666 2%, #222);
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-image:-o-linear-gradient(top, #999, #666 2%, #222);
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	position:absolute; z-index:2;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	padding: 0;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	text-align:center;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:.THIS.scrollWrapper {
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	position:absolute; 
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	overflow: auto;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background:#aaa;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	height: auto;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	padding:0 10px;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-color:#fafafa;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	padding:0;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	margin:0;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	text-align:left;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	padding:0 10px;
ruau/ruau/SouRCeS/test/components/uitest/scrollerNative/scrollerNative.css:	background-color:#fafafa;
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:<ruau:application model="java://org.ruauframework.component.ui.MenuTestModel">
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:    <div style="display:inline-block;width:50%;vertical-align:top;">
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:            <ui:menu ruau:id="uiMenu" class="clubMenu">
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                <ui:menuTriggerLink class="trigger" ruau:id="trigger" label="Please pick your favorite soccer club"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                <ui:menuList class="actionMenu" ruau:id="actionMenu">
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                    <uitest:menuItem_extend zclass="actionItem1" zlabel="Bayern München" ruau:id="actionItem1" />
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                    <uitest:menuItem_extend zclass="actionItem2" zlabel="FC Barcelona" ruau:id="actionItem2"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                	<uitest:menuItem_extend zclass="actionItem3" zlabel="Inter Milan" ruau:id="actionItem3"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:                	<uitest:menuItem_extend zclass="actionItem4" zlabel="Manchester United" ruau:id="actionItem4"/>
ruau/ruau/SouRCeS/test/components/uitest/menu_extendMenuItem/menu_extendMenuItem.app:</ruau:application>
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Testing utility to easily invoke an ApplyVisitor.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:    applyVisit : function(node, traverser, funcToApply) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:        node.getEvent('makeVisitor').setParams({
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            "traverser" : traverser,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            "callback" : function(args) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                args.visitor.funcToApply = funcToApply;
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                node.getEvent('traverse').setParams(args).fire();
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Verify that applyVisit is behaving as expected on a very simple case.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:    testApplySanity : {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var iota = cmp.find('iota');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var called = '';
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            this.applyVisit(iota, 'PostOrderTraverser', function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                called = node.get('v.title');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals('iota', called,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "ApplyVisitor is not being called");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            called = '';
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            this.applyVisit(iota, 'PreOrderTraverser', function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                called = node.get('v.title');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals('iota', called,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "ApplyVisitor is not being called");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Verify that the PostOrderTraverser accepts nodes in the proper order.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Populate our list of expected nodes
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var expectedIds = [ "iota", "mu", "lambda", "gamma", "pi", "rho",
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "tau", "G", "D", "alpha", "beta", "E", "F", "chi", "psi",
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "omega", "H", "B", "C", "A", "root" ];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var expected = [];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            for(var i=0; i < expectedIds.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var nodes = [];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var root = cmp.find('root');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var collect = function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            this.applyVisit(root, "PostOrderTraverser", collect);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(21, nodes.length,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "Greek tree should have 21 nodes");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            for ( var i = 0, n = nodes.length; i < n; i++) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                ruau.test.assertEquals(expected[i], nodes[i], "Node " + i
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Verify that the PreOrderTraverser accepts nodes in the proper order.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Populate our list of expected nodes
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var expectedIds = [ "root", "iota", "A", "mu", "B", "lambda", "D",
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "gamma", "G", "pi", "rho", "tau", "E", "alpha", "beta",
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "F", "H", "chi", "psi", "omega", "C" ];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var expected = [];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            for(var i=0; i < expectedIds.length; i++){
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var nodes = [];
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var root = cmp.find('root');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var collect = function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            this.applyVisit(root, "PreOrderTraverser", collect);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(21, nodes.length,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    "Greek tree should have 21 nodes");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            for ( var i = 0, n = nodes.length; i < n; i++) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                ruau.test.assertEquals(expected[i], nodes[i], "Node " + i
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Make sure that visitation properly short circuits if visit() returns false.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            cmp.find('B').set('v.expanded', true);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            cmp.find('D').set('v.expanded', true);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            cmp.find('F').set('v.expanded', true);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var ExpandedOnlyVisitor = function() {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ExpandedOnlyVisitor.prototype.visit = function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                return node.get('v.expanded');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ExpandedOnlyVisitor.prototype.accept = function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ExpandedOnlyVisitor.prototype.endVisit = function(node) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var visitor = new ExpandedOnlyVisitor();
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var B = cmp.find('B');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            B.getEvent('makeVisitor').setParams({
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                "traverser" : "PreOrderTraverser",
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                "callback" : function(args) {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    args.visitor = visitor;
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:                    B.getEvent('traverse').setParams(args).fire();
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(3, visitor.nodes.length);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(cmp.find('B'), visitor.nodes[0]);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(cmp.find('D'), visitor.nodes[1]);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertEquals(cmp.find('F'), visitor.nodes[2]);
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:     * Make sure that clicking a non-leaf node updates the expansion state.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:    testClickExpandCollapse : {
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:        // TODO(W-1574768): tree/treeNode are not compatible with IE7/8
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Get our initial state.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var A = cmp.find('A');
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(A.get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // First click expands.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            var elemA = document.getElementById('node_' + A.getGlobalId());
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertTrue(A.get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Second one collapses.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(A.get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Clicking other elements below doesn't actually affect our expansion state.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(cmp.find('C').get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            document.getElementById('node_' + cmp.find('C').getGlobalId()).click();
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(A.get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertTrue(cmp.find('C').get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            // Likewise, clicking elements above do not affect the local state.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertTrue(cmp.find('root').get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            document.getElementById('node_' + cmp.find('root').getGlobalId()).click();
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(A.get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_TestTest.js:            ruau.test.assertFalse(cmp.find('root').get('v.expanded'));
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:Construct the standard 21 node Subversion 'greek' tree out of ui:treeNode components
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /iota
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/mu                      /A/D/gamma
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/B/lambda                /A/D/H/psi
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/B/E                     /A/D/H/omega
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/B/E/alpha
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/B/E/beta                /A/D/G/
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:         /A/C/                      /A/D/G/tau
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:    <ui:treeNode ruau:id="root" title="/" expanded="{!true}">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:        <ui:treeNode ruau:id="iota" href="#iota" title="iota" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:        <ui:treeNode ruau:id="A" title="A">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:            <ui:treeNode ruau:id="mu" href="#mu" title="mu" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:            <ui:treeNode ruau:id="B" title="B">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                <ui:treeNode ruau:id="lambda" href="#lambda" title="lambda" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                <ui:treeNode ruau:id="D" title="D">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="gamma" href="#gamma" title="gamma" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="G" title="G">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                        <ui:treeNode ruau:id="pi" href="#pi" title="pi" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                        <ui:treeNode ruau:id="rho" href="#rho" title="rho" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                        <ui:treeNode ruau:id="tau" href="#tau" title="tau" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                <ui:treeNode ruau:id="E" title="E">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="alpha" href="#alpha" title="alpha" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="beta" href="#beta" title="beta" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                <ui:treeNode ruau:id="F" title="F" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                <ui:treeNode ruau:id="H" title="H">
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="chi" href="#chi" title="chi" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="psi" href="#psi" title="psi" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:                    <ui:treeNode ruau:id="omega" href="#omega" title="omega" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:            <ui:treeNode ruau:id="C" title="C" />
ruau/ruau/SouRCeS/test/components/uitest/treeNode_Test/treeNode_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	 * Verify dynamic value change in init
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	testChangeSelectionDynamic : {
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:			        this.setComponentOption(cmp.find("dynamicSelect"), "Option4");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:			        this.validateComponentOptions(cmp.find("dynamicSelect"), "Option4");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	 * Verify value change through model. In this case the component should have everything when it 
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	 * is actually hit the first time
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	testChangeSelectionDynamicUsingModel : {
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		            this.setComponentOption(cmp.find("dynamicSelectModel"), "Option1");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:			 		this.validateComponentOptions(cmp.find("dynamicSelectModel"), "Option1");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		cmp.set("v.value", option);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	validateComponentOptions : function(cmp, option) {
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		var optionCmps = cmp.getElement().children;
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:	verifySelectedOption : function(options, selectedLabel) {
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		var selectedOptionLabel = "None Selected";
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		var selectedOption = this.getSelectedOption(options);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:			selectedOptionLabel = $A.test.getText(selectedOption);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		$A.test.assertEquals(selectedLabel, selectedOptionLabel, 
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:			"Incorrect option selected; Comparing by \"Match by DOM Element\".");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestTest.js:		for (var i=0; i<options.length; i++) {
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js:		var opts = [{ "label": "Option1", "value": "Option1", "class": "option" },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js:		            { "label": "Option2", "value": "Option2", "class": "option", "selected": true },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js:		            { "label": "Option3", "value": "Option3", "class": "option" },
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js:		            { "label": "Option4", "value": "Option4", "class": "option" }];
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTestController.js:		cmp.find("dynamicSelect").set("v.options", opts);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:<ruau:component model='java://org.ruauframework.impl.java.model.TestJavaModel'>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    <ui:inputSelect ruau:id="dynamicSelect"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:    <ui:inputSelect options="{!m.selectOptions}" ruau:id="dynamicSelectModel"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_UseOptionsAtribTest/inputSelect_UseOptionsAtribTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            var link = component.find("testLink");
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            var hrefValue = link.getElement().href;
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            ruau.test.assertEquals("javascript:void(0/*#*/);", hrefValue, "href not expected");
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            var link = component.find("testAnchor");
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            var hrefValue = link.getElement().href;
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_TestTest.js:            $A.test.assertEquals("javascript:void(0/*#anchor*/);", hrefValue); //in test mode we incldue original href value 
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:	<a ruau:id="testLink" href="#">link</a>
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:	<a ruau:id="testAnchor" href="#anchor">anchor</a>
ruau/ruau/SouRCeS/test/components/uitest/href_Test/href_Test.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js:	handleonclick: function(cmp, evt, helper) {
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js:		cmp.find("onclickOutput").set("v.value", "onclick event fired");
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js:	handleOnClick: function(cmp, evt, helper) {
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitiveController.js:		cmp.find("onClickOuput").set("v.value", "onClick event fired");
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:    limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:	<a onclick="{!c.handleonclick}" class="onclickHandler" ruau:id="onclickHandler">fireonclick</a><br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:	<a onClick="{!c.handleOnClick}" class="onClickHandler" ruau:id="onClickHandler">fireOnClick</a><br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:	onclick Fired: <ui:outputText class="onclickOutput" ruau:id="onclickOutput" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:	onClick Fired: <ui:outputText class="onClickOuput" ruau:id="onClickOuput" value=""/> <br/><br/>
ruau/ruau/SouRCeS/test/components/uitest/html_onclickCaseSensitive/html_onclickCaseSensitive.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:<ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:<ruau:attribute name="total" type="Integer" default="3000"/>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:    <table>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:        <thead >
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:                    <a class="toggle">Id</a>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:                <th>Name</th>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:                <th>Related To</th>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:                <th>Due Date</th>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:        </thead>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:        <tfoot ruau:id="tfoot"></tfoot>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:        <tbody ruau:id="tbody"></tbody>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:    </table>    
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTest.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestRenderer.js:        afterRender: function(cmp, helper) {
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:        var tr, td, span, input;
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:        var amountToCreate = cmp.get("v.total");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:        var body = cmp.find("tbody").getElement();
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:        for(var i = 1; i <= amountToCreate; i++){
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr = document.createElement("tr")
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            input = document.createElement("input");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(input);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span = document.createElement("span");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span.innerText = i;
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(span);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span = document.createElement("span");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span.innerText = "Foo "+i;
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(span);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            //Name
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span = document.createElement("span");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span.innerText = "John Doe"
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(span);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            //Related to
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span = document.createElement("span");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span.innerText = "Acme"
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(span);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            //Due date
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td = document.createElement("td");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span = document.createElement("span");
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            span.innerText = "2014-01-01"
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            td.appendChild(span);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            tr.appendChild(td);
ruau/ruau/SouRCeS/test/components/uitest/dataGridPureHtmlTest/dataGridPureHtmlTestHelper.js:            body.appendChild(tr);
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_Extend/inputSelect_Extend.cmp:<ruau:component extends="ui:inputSelect">
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_Extend/inputSelect_Extend.cmp:    <ruau:handler name="change" value="{!v.value}" action="{!c.valueChange}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_Extend/inputSelect_Extend.cmp:    <ruau:handler name="change" value="{!v.options}" action="{!c.optionsChange}"/>
ruau/ruau/SouRCeS/test/components/uitest/inputSelect_Extend/inputSelect_Extend.cmp:</ruau:component>
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * you may not use this file except in compliance with the License.
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * You may obtain a copy of the License at
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * See the License for the specific language governing permissions and
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * limitations under the License.
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css: * Styling rules for the localizationComponent_Test.app
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:.uitestLocalizationComponent_Test .title{
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	background-color: #B0C4DE;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	font-family: monospace;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	margin-top:0;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	padding: 2px;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:/* placeholder for component blocks */
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:.uitestLocalizationComponent_Test.container{
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	border-radius: 5px;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	margin: 5px;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	padding: 5px;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	background-color: #E3EDFA;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:/* locale representation and submit count container */
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:.uitestLocalizationComponent_Test.banner {
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	font-family: monospace;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	color: black;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	background-color: #FFFFCC;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	border: 1px solid black;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:	margin-left: 70%;
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:/* top banner */
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:.uitestLocalizationComponent_Test.top {
ruau/ruau/SouRCeS/test/components/uitest/localizationComponent_Test/localizationComponent_Test.css:/* down banner */
