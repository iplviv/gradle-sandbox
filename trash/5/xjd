ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                            ret = valueFactory.create(actionDef, null, cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                            ar[key] = ret;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * A reference to the ComponentDefinition for this instance
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var componentDef = componentService.getDef(config["componentDef"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        $A.assert(componentDef, "componentDef is required");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.createComponentStack = function(facets,valueProvider,localCreation){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var facetStack={};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for (var i = 0; i < facets.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var facet = facets[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var facetName = facet["descriptor"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var facetConfig = facet["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (!$A.util.isArray(facetConfig)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                facetConfig = [facetConfig];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var action = $A.getContext().getCurrentAction();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (action) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                action.pushCreationPath(facetName);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var components=[];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            for (var index = 0; index < facetConfig.length; index++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var config = facetConfig[index];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if (config && config.ruauType === "Component") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    if (action) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        action.setCreationPathIndex(index);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    components.push($A.componentService.newComponentDeprecated(config, valueProvider, localCreation, true));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// This is hit, when you create a newComponentDeprecated and use raw values, vs configs on the attribute values.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// newComponentDeprecated("ui:button", {label: "Foo"});
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    $A.error("Component.createComponentStack: invalid config. Expected component definition, found '"+config+"'.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (action) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                action.popCreationPath(facetName);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            facetStack[facetName]=components;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        return facetStack;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.setupSuper = function(cmp, configAttributes, localCreation, ccc) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var superDef = this.componentDef.getSuperDef();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var superConfig = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var superDefConfig = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            superConfig["concreteComponentId"] = this.concreteComponentId || this.globalId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var superAttributes = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                superAttributes["values"]={}; // configAttributes["values"]||{};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var facets=this.componentDef.getFacets();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if(facets) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    for (var i = 0; i < facets.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        superAttributes["values"][facets[i]["descriptor"]] = facets[i]["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                superAttributes["valueProvider"] = configAttributes["facetValueProvider"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            superConfig["attributes"] = superAttributes;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            $A.pushCreationPath("super");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                ccc.loadComponent(superConfig, null, localCreation, this.setSuperComponent.bind(this), false, false, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                this.setSuperComponent(componentService.newComponentDeprecated(superConfig, null, localCreation, true));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            $A.popCreationPath("super");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.superComponent = this.valueProviders["super"] = component;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.setupAttributes = function(cmp, config, localCreation) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var configValues=(config&&config["values"])||{};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if(!configValues.hasOwnProperty("body")){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            configValues["body"]=[];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var attributes={};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var attributeDefs = this.componentDef.attributeDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var attributeNames=attributeDefs.getNames();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    for (var x = 0; x < attributeNames.length; x++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var name = attributeNames[x];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (!configValues.hasOwnProperty(name)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var defaultDef = attributeDefs.getDef(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var defaultValue = defaultDef.getDefault();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (defaultValue && defaultValue.length) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if (defaultDef.getTypeDefDescriptor() === "ruau://Ruue.Component[]" || defaultDef.getTypeDefDescriptor() === "ruau://Ruue.ComponentDefRef[]") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    configValues[defaultDef.getDescriptor().getQualifiedName()] = defaultValue;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    configValues[defaultDef.getDescriptor().getQualifiedName()]=valueFactory.create(defaultValue,null,cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for(var attribute in configValues) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var value = configValues[attribute];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var attributeDef = attributeDefs.getDef(attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (!attributeDef) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var isFacet = attributeDef.getTypeDefDescriptor() === "ruau://Ruue.Component[]";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var isDefRef = attributeDef.getTypeDefDescriptor() === "ruau://Ruue.ComponentDefRef[]";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if ($A.componentService.isConfigDescriptor(value)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                value = value["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (isFacet) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isUndefinedOrNull(value)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            	// If we don't setup the attributesValueProvider on the config, use the components.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            	var attributeValueProvider = (config&&config["valueProvider"])||cmp.getAttributeValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // JBUCH: HALO: DIEGO: TODO: Revisit to code is a bit ugly
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                value = valueFactory.create(value, attributeDef, config["valueProvider"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isExpression(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    value.addChangeHandler(cmp,"v."+attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    value = value.evaluate();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isString(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    value=[$A.newCmp({"componentDef":"ruau:text", "attributes":{"values":{"value":value}}})];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var facetStack = this.createComponentStack([{"descriptor": attribute, value: value}], attributeValueProvider, localCreation);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if (attribute === "body") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute]=(this.concreteComponentId&&cmp.getConcreteComponent().priv.attributes.get("body"))||{};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute][cmp.getGlobalId()] = facetStack["body"] || [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute] = facetStack[attribute];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if ($A.util.isUndefinedOrNull(value)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if(!$A.util.isArray(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// It's not an Array, is it an expression that points to a CDR?
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// Something like body="{!v.attribute}" on a facet should reference v.attribute
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// which could and should be a ComponentDefRef[]
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	var reference = valueFactory.create(value, attributeDef, config["valueProvider"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        reference.addChangeHandler(cmp,"v."+attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        value = reference.evaluate();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// So I'm not quite sure when or why we would want to go in here.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                	// Hopefully I can find the reason the tests try to do this and document that here.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:	                    value=[value];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:	                    $A.warning("Component_private.setupAttributes: CDR[] WAS NOT AN ARRAY");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var cdrs=[];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                for(var i=0;i<value.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    // make a shallow clone of the cdr with the proper value provider set
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    var cdr = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    cdr["componentDef"] = value[i]["componentDef"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    cdr["localId"] = value[i]["localId"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    cdr["attributes"] = value[i]["attributes"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    cdr["valueProvider"] = value[i]["valueProvider"] || config["valueProvider"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js://                    for(var x in cdr["attributes"]["values"]){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js://                        cdr["attributes"]["values"][x] = valueFactory.create(cdr["attributes"]["values"][x], null, config["valueProvider"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if (attribute === "body") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute]=(this.concreteComponentId&&cmp.getConcreteComponent().priv.attributes.get("body"))||{};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute][cmp.getGlobalId()] = cdrs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute] = cdrs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                attributes[attribute] = valueFactory.create(value, attributeDef, config["valueProvider"] || cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isExpression(attributes[attribute])){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    attributes[attribute].addChangeHandler(cmp,"v."+attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var concreteComponent=cmp.getConcreteComponent();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            concreteComponent.priv.attributes.merge(attributes);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.attributes=concreteComponent.priv.attributes;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.attributes = new AttributeSet(attributes, this.componentDef.attributeDefs, cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.validatePartialConfig=function(config, partialConfig){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var partialConfigO = partialConfig["original"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var partialConfigCD;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var configCD = config["componentDef"]["descriptor"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        } else if (configCD.getQualifiedName) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            configCD = configCD.getQualifiedName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (partialConfig["componentDef"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (partialConfig["componentDef"]["descriptor"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                partialConfigCD = partialConfig["componentDef"]["descriptor"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                partialConfigCD = partialConfig["componentDef"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (partialConfigO !== undefined && partialConfigCD !== configCD) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (partialConfigO !== configCD) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.log("Configs at error");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.log(partialConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.error("Mismatch at " + this.globalId
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    + " but got original " + partialConfigO
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    + " providing " + partialConfigCD + " from server "
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    + " for creationPath = "+this.creationPath);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        } else if (partialConfigCD) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (partialConfigCD !== configCD) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.log("Configs at error");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.log(partialConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.error("Mismatch at " + this.globalId
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    + partialConfigCD + " from server "
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    +" for creationPath = "+this.creationPath);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.getActionCaller = function(valueProvider, actionExpression) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        return function Component$getActionCaller(event) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (valueProvider.isValid && !valueProvider.isValid()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var clientAction;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            actionExpression=valueFactory.create(actionExpression, null, valueProvider);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if($A.util.isExpression(actionExpression)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                 clientAction=actionExpression.evaluate();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                 clientAction=valueProvider.get(actionExpression);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    clientAction=valueProvider.getConcreteComponent().get(clientAction);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                clientAction.runDeprecated(event);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(false, "no client action by name " + actionExpression);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.getEventDispatcher = function(cmp) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (!this.eventDispatcher && cmp) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var dispatcher = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.eventDispatcher = dispatcher;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.valueProviders["e"] = dispatcher;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        return this.eventDispatcher;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var dispatcher;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var events = this.componentDef.getAllEvents();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var len = events.length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                dispatcher = this.getEventDispatcher(cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                for (var i = 0; i < events.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    dispatcher[events[i]] = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var def = this.componentDef;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var keys = def.getAllEvents();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var values=config["events"]||config["values"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (values) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var valueProvider = config["valueProvider"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                for (var j = 0; j < keys.length; j++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    var key = keys[j];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    var eventValue = values[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    if (eventValue) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        $A.assert(!this.concreteComponentId,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                                    "Event handler for " + key
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                                    + this.globalId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        cmp.addHandler(key, valueProvider, eventValue["value"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var cmpHandlers = this.componentDef.getCmpHandlerDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (cmpHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            for (var k = 0; k < cmpHandlers.length; k++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var cmpHandler = cmpHandlers[k];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                cmp.addHandler(cmpHandler["name"], cmp, cmpHandler["action"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    function getHandler(cmp, actionExpression) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        return function ComponentPriv$getActionHandler(event) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (cmp.isValid && !cmp.isValid()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var clientAction = cmp.get(actionExpression);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                clientAction.runDeprecated(event);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(false, "no client action by name " + actionExpression);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.setupApplicationEventHandlers = function(cmp) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        // Handle application-level events
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var handlerDefs = this.componentDef.getAppHandlerDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (handlerDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            for (var i = 0; i < handlerDefs.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var handlerDef = handlerDefs[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var handlerConfig = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["globalId"] = cmp.getGlobalId();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["handler"] = getHandler(cmp, handlerDef["action"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["event"] = handlerDef["eventDef"].getDescriptor().getQualifiedName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                eventService.addHandler(handlerConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.setupValueEventHandlers = function(cmp) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        // Handle value-level events
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var handlerDefs = this.componentDef.getValueHandlerDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (handlerDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            for (var i = 0; i < handlerDefs.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var handlerDef = handlerDefs[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var handlerConfig = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["action"] = valueFactory.create(handlerDef["action"],null,cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["value"] = valueFactory.create(handlerDef["value"],null,cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                handlerConfig["event"] = handlerDef["name"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                cmp.addValueHandler(handlerConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * Adds a handler for the specified type of event. Currently only supports
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * 'change'.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.addValueHandler = function(cmp,config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var component=this.concreteComponentId?cmp.getConcreteComponent().priv:this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var event = config["event"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var handlers = component.handlers[event];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (!handlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            handlers = component.handlers[event] = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var expression = config["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (!handlers[expression]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            handlers[expression] = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for(var i=0;i<handlers[expression].length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (handlers[expression][i]===config["method"] || (config["id"] && config["key"] && handlers[expression][i]["id"] === config["id"] && handlers[expression][i]["key"] === config["key"])) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        handlers[expression].push(config["method"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * Removes a handler for the specified type of event. Currently only supports
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * 'change'.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.removeValueHandler = function(cmp,config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var component = this.concreteComponentId ? cmp.getConcreteComponent().priv : this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var event = config["event"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var handlers = component.handlers[event];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (handlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var expression = config["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (handlers[expression]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                for (var i = 0; i < handlers[expression].length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    var method = handlers[expression][i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        handlers[expression].splice(i--, 1);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:     * Fires handlers registered for the specified key when the value changes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.fireChangeEvent = function(cmp, key, oldValue, value, index) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var component=this.concreteComponentId?cmp.getConcreteComponent().priv:this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var handlers = component.handlers["change"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var observers=[];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var keypath = key+".";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for(var handler in handlers){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if(handler == key || handler.indexOf(keypath)===0 || key.indexOf(handler+".")===0){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                observers=observers.concat(handlers[handler]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var eventDef = $A.get("e").getEventDef("ruau:valueChange");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var dispatcher = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            dispatcher[eventDef.getDescriptor().getQualifiedName()] = observers;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var changeEvent = new Event({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                "eventDispatcher" : dispatcher
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            changeEvent.setParams({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                "value" : value,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                "oldValue" : oldValue,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            changeEvent.fire();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var def = this.componentDef.getModelDef();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (!config && this.partialConfig) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                config = this.partialConfig["model"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            this.model = def.newInstance(config || {}, cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var localId = this.localId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (localId) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var valueProvider=cmp.getAttributeValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if(valueProvider instanceof PassthroughValue){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                valueProvider=valueProvider.getComponent();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if(!valueProvider){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.error("No attribute value provider defined for component " + cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            valueProvider.index(localId, this.globalId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var localId = this.localId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (localId) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var valueProvider=cmp.getAttributeValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if(valueProvider instanceof PassthroughValue){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                valueProvider=valueProvider.getComponent();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            valueProvider.deIndex(localId, this.globalId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.injectComponent = function(config, cmp, localCreation, ccc) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var componentDef = this.componentDef;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if ((componentDef.isAbstract() || componentDef.getProviderDef()) && !this.concreteComponentId) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var act = $A.getContext().getCurrentAction();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if (act) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // allow the provider to re-use the path of the current component without complaint
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                act.reactivatePath();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var self = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var setProvided = function(realComponentDef, attributes) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(realComponentDef && realComponentDef.ruauType === "ComponentDef",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(!realComponentDef.isAbstract(),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    "Provided component cannot be abstract: " + realComponentDef);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(!realComponentDef.hasRemoteDependencies() || (realComponentDef.hasRemoteDependencies() && self.partialConfig),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    "Client provided component cannot have server dependencies: " + realComponentDef);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                self.componentDef = realComponentDef;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                self.attributes.merge(attributes, realComponentDef.getAttributeDefs());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // Re attaching values providers when injecting components
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // self.setupValueProviders(config["valueProviders"], cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // FIXME: @dval this is a BAD HACK, we need to understand rendering distance
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                // self.componentDef.getRenderingDetails().distance-=1;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var providerDef = componentDef.getProviderDef();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                providerDef.provide(cmp, localCreation, setProvided, ccc);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var partialConfig = this.partialConfig;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.assert(partialConfig,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                            "Abstract component without provider def cannot be instantiated : "
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                setProvided(componentService.getDef(partialConfig["componentDef"]), null);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var rd = this.componentDef.getRenderingDetails();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        $A.assert(rd !== undefined, "Instantiating " + this.componentDef.getDescriptor() + " which has no renderer");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var renderable = cmp;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for (var i = 0; i < rd.distance; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            renderable = renderable.getSuper();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var renderer = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            renderable : renderable
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var superComponent = renderable.getSuper();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var superRenderer = superComponent.getRenderer();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                return superRenderer.def.render(superRenderer.renderable);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                return superRenderer.def.rerender(superRenderer.renderable);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                superRenderer.def.afterRender(superRenderer.renderable);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                superRenderer.def.unrender(superRenderer.renderable);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.associateRenderedBy = function(cmp, element) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        // attach a way to get back to the rendering component, the first time
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        // we call associate on an element
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (!$A.util.hasDataAttribute(element, $A.componentService.renderedBy)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            $A.util.setDataAttribute(element, $A.componentService.renderedBy, cmp.getGlobalId());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.output = function(value, avp, serialized, depth) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (serialized === undefined) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            serialized = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        serialized.push(value);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        if (value){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            if(value.ruauType) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var type = value.ruauType;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    return this.outputComponent(value, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isArray(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    return this.outputArrayValue(value, avp, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                }else if($A.util.isObject(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    return this.outputMapValue(value, avp, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        return value ? value.toString() : value;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.outputMapValue = function(map, avp, serialized, depth) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var ret = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for(var key in map){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var value=map[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                if($A.util.isExpression(value)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    ret[key]=that.output(value.evaluate(), avp, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    ret[key] = that.output(value, avp, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            } catch (e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                $A.warning("Error in chrome plugin support", e);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.outputArrayValue = function(array, avp, serialized, depth) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:        for (var i = 0; i < array.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.push(this.output(array[i], avp, serialized, depth));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:    ComponentPriv.prototype.outputComponent = function(cmp, serialized, depth) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var ret = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.globalId = cmp.getGlobalId();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.localId = cmp.getLocalId();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.valid = cmp.isValid();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.attributes = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var model = cmp.getModel();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                ret.model = this.output(model, cmp.getAttributeValueProvider(), serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.attributeValueProvider = this.output(cmp.getAttributeValueProvider(),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                cmp.getAttributeValueProvider(), serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var superComponent = cmp.getSuper();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                ret["super"] = this.output(superComponent, cmp, serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                        LAZY : superComponent.getGlobalId()
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var attributeDefs = cmp.getDef().getAttributeDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            attributeDefs.each(function(attributeDef) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var key = attributeDef.getDescriptor().toString();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                var val;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    val = cmp.get("v."+key);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                } catch (e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                    val = undefined;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:                ret.attributes[key] = that.output(val, cmp.getAttributeValueProvider(), serialized, depth);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_private.js:            ret.attributes["__proto__"] = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    this.dynamicNamespaces = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.ruauType = "ComponentDefRegistry";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.cacheName = "componetDefRegistry.catalog";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.isLocalStorageAvailable= (function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    if (window.localStorage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        // Now actually try a test write because private browsing and use of local when not authorized by the user will only fail on writes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            window.localStorage.setItem("test", "test");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            window.localStorage.removeItem("test");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        } catch(ignore) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    return false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Returns a ComponentDef instance from registry, or config after adding to the registry.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Throws an error if config is not provided.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @param {Object} config Passes in a config, a ComponentDef, or the name of a ComponentDef.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @param {Boolean} noInit If set to false, try loading from cache first before
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * trying to write through of local storage cacheable componentDefs.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @returns {ComponentDef} a ComponentDef instance from registry, or config after adding to registry.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        throw new Error("ComponentDef Config required for registration");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    // We don't re-register (or modify in any way) once we've registered
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    var descriptor;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        descriptor = "markup://" + descriptor; // support shorthand
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    var ret = this.componentDefs[descriptor];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        var useLocalStorage = this.useLocalCache(descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        if (useLocalStorage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            $A.Perf.mark("ComponentDefRegistry.localStorageCache");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            $A.Perf.mark("Cleared localStorage (out of space) ");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            $A.Perf.mark("Wrote " + descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            // Try to load from cache
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            var cachedConfig = this.getConfigFromLocalCache(descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            if (cachedConfig) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                config = cachedConfig;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                useLocalStorage = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            $A.Perf.endMark("ComponentDefRegistry.localStorageCache");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        var descString = ret.getDescriptor().toString();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        if (descString.indexOf("layout://") === 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            this.dynamicNamespaces.push(ret.getDescriptor().getNamespace());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        if (useLocalStorage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            // Write through of local storage cacheable componentDefs
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                this.writeToCache(descriptor, config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:            } catch (e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                // Clear localStorage and try one more time to write through
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                localStorage.clear();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                $A.Perf.endMark("Cleared localStorage (out of space) ");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                    this.writeToCache(descriptor, config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                } catch(ignore) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:                    // Nothing we can do at this point - give up.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Use the local cache for the page session persistently when layouts are used.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.useLocalCache = function(descriptor) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    return this.isLocalStorageAvailable && !$A.util.isUndefinedOrNull(descriptor) && descriptor.indexOf("layout://") === 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Returns the JSON decoded localStorage values based on the cache name,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.getLocalCacheCatalog = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    if (!this.isLocalStorageAvailable) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    var catalog = localStorage.getItem(this.cacheName);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    return catalog ? $A.util.json.decode(catalog) : {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Returns the JSON decoded localStorage value.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @param {Object} descriptor The key to look up on the localStorage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.getConfigFromLocalCache = function(descriptor) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    if (!this.isLocalStorageAvailable) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    var item = localStorage.getItem(this.cacheName + "." + descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * Updates the local cache catalog and writes out the componentDef.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @param {Object} descriptor
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js: * @param {Object} config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:ComponentDefRegistry.prototype.writeToCache = function(descriptor, config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:    if (this.isLocalStorageAvailable) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        // Update the catalog
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        var catalog = this.getLocalCacheCatalog();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        catalog[descriptor] = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        localStorage.setItem(this.cacheName, $A.util.json.encode(catalog));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        localStorage.setItem(this.cacheName + "." + descriptor, $A.util.json.encode(config));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDefRegistry.js:        $A.Perf.endMark("Wrote " + descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @class ComponentDef
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Constructs a new ComponentDef object, which is a component definition.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * A ComponentDef instance is created as part of Ruue initialization.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var descriptor = new DefDescriptor(config["descriptor"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (config["hasServerDeps"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.hasRemoteDeps = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.interfaces = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var intfConfig = config["interfaces"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        for (var m = 0; m < intfConfig.length; m++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var intf = new DefDescriptor(intfConfig[m]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var intfName = intf.getNamespace() + ":" + intf.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            this.interfaces[intfName] = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var appHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var cmpHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var valueHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.facets = config["facets"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.isAbs = !!config["isAbstract"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (config["layouts"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.layouts = new LayoutsDef(config["layouts"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.layouts = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (config["locationChangeEventDef"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.locationChangeEventDef = eventService.getEventDef(config["locationChangeEventDef"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.locationChangeEventDef = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var registerEventDefs = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var allEvents = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.allEvents = allEvents;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var cred = config["registerEventDefs"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        for (var i = 0; i < cred.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var regConfig = cred[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var name = regConfig["attributeName"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            allEvents.push(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            registerEventDefs[name] = eventService.getEventDef(regConfig["eventDef"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var handlerDefConfigs = config["handlerDefs"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (handlerDefConfigs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        for (var j = 0; j < handlerDefConfigs.length; j++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var handlerConfig = handlerDefConfigs[j];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            if (handlerConfig["eventDef"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                // We cannot modify handlerConfig here, as it is sometimes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                // in localStorage. We used to replace eventDef with the actual
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                // eventDef, but the json serialize-deserialize loses the object
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                appHandlerConfig = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    "action" : handlerConfig["action"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    "eventDef" : eventService.getEventDef(handlerConfig["eventDef"])
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                if (!appHandlerDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    appHandlerDefs = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                appHandlerDefs.push(appHandlerConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            } else if (handlerConfig["value"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                if (!valueHandlerDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    valueHandlerDefs = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                valueHandlerDefs.push(handlerConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                if (!cmpHandlerDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    cmpHandlerDefs = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                cmpHandlerDefs.push(handlerConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var subDefs = config["subDefs"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        for (var k = 0; k < subDefs.length; k++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var imports = config["imports"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.libraryDefs = $A.util.reduce(imports, function(libraryDefs, imported) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            libraryDefs[imported["property"]] = componentService.getLibraryDef(imported.name, imported["libraryDef"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            return libraryDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.appHandlerDefs = appHandlerDefs || null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.cmpHandlerDefs = cmpHandlerDefs || null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.valueHandlerDefs = valueHandlerDefs || null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.isCSSPreloaded = config["isCSSPreloaded"] || false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.attributeDefs = new AttributeDefSet(config["attributeDefs"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.helperDef = componentService.getHelperDef(descriptor, config["helperDef"], this, this.libraryDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var providerDef = config["providerDef"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.ruauType = "ComponentDef";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Returns a DefDescriptor object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @returns {DefDescriptor} A DefDescriptor object contains a prefix, namespace,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *          and name.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Checks whether the Component is abstract. Returns true if the component is
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * abstract.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @returns {Boolean} True if component is abstract, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.isAbstract = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Returns the component definition for the immediate super type or null if none
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * exists (should only be null for ruau:component).
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @return {ComponentDef} The ComponentDef for the immediate super type
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Returns a HelperDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the Helper instance
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var def = this.getHelperDef();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Returns a RendererDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Checks whether the component has remote dependencies. Returns true if remote
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * dependencies are found.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @returns {Boolean} True if remote dependencies exist, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.hasRemoteDependencies = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.hasRemoteDeps;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getRenderingDetails = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.renderingDetails;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Returns a ProviderDef object associated with this ComponentDef.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets all the StyleDef objects, including inherited ones, for this
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.allStyleDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the CSS class name to use for Components of this type. Includes the
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * class names from all StyleDefs, including inherited ones, associated with
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * this ComponentDef. If multiple class names are found, the return value is a
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * space-separated list of class names. This string can be applied directly to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @returns {String} The style class name
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getStyleClassName = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var className = this.styleClassName;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (!className) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        className = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        var styleDefs = this.getAllStyleDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var styleDefLen = styleDefs.length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            for (var t = 0; t < styleDefLen; t++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                var styleDef = styleDefs[t];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                className = className + styleDef.getClassName() + " ";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                // Preloaded CSS should already be included in app.css
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                if (!this.isCSSPreloaded) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                    styleDef.apply();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.styleClassName = className;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return className;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the style definition. Returns a StyleDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets all the attribute definitions. Returns an AttributeDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.attributeDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the component facets. A facet is any attribute of type Ruue.Component[].
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getFacets = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.facets;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the controller definition. Returns a ControllerDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the model definition. Returns a ModelDef object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Value Event Enum
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.valueEvents = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    "change" : "ruau:valueChange",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    "init" : "ruau:valueInit",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    "destroy" : "ruau:valueDestroy"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @param {String}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *            The name of the event definition.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @param {Boolean}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *            includeValueEvents Set to true to include the value events.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getEventDef = function(name, includeValueEvents) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var ret = this.registerEventDefs[name];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (!ret && includeValueEvents) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        if ($A.ns.ComponentDef.valueEvents.hasOwnProperty(name)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            name = $A.ns.ComponentDef.valueEvents[name];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        ret=$A.get("e").getEventDef(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Get an event name by descriptor qualified name.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * This is only used in the case of an action firing a component event. It is a
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * bit of a hack, but will give back the name of the event that corresponds to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @param {String}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *            descriptor a descriptor qualified name.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @return {String} null, or the component fired event name.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getEventNameByDescriptor = function(descriptor) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    for (var name in this.registerEventDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        if (this.registerEventDefs[name] && this.registerEventDefs[name].descriptor && this.registerEventDefs[name].descriptor.qualifiedName === descriptor) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            return name;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets all events associated with the Component.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.allEvents;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the application handler definitions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getAppHandlerDefs = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.appHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the component handler definitions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getCmpHandlerDefs = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.cmpHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the value of the handler definitions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getValueHandlerDefs = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.valueHandlerDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Converts a ComponentDef object to type String.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.getDescriptor().getQualifiedName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Checks whether the Component is an instance of the given component name (or
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * interface name).
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @param {String}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *            name The name of the component (or interface), with a format of
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: *            <code>namespace:componentName</code> (e.g.,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @returns {Boolean} True if the Component is an instance, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.isInstanceOf = function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var thisName = this.descriptor.getNamespace() + ":" + this.descriptor.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    if (thisName === name || this.implementsDirectly(name)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        return this.superDef.isInstanceOf(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Primarily used by isInstanceOf().
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return !$A.util.isUndefined(this.interfaces[type]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Gets the location change event. Returns the qualified name of the event in
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * the format <code>markup://ruau:locationChange</code>.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getLocationChangeEvent = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var evt = this.locationChangeEventDef;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        return evt.getDescriptor().getQualifiedName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return "markup://ruau:locationChange";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:$A.ns.ComponentDef.prototype.getLayouts = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    return this.layouts;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        var sdef = $A.componentService.getDef(config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        $A.assert(sdef, "Super def undefined for " + this.descriptor + " value = " + config["descriptor"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Setup the style defs and renderer details.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * Note that the style defs are in reverse order so that they get applied in
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * forward order.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var rd = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        distance : 0,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.allStyleDefs = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    var s = this.superDef;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            var superStuff = s.getRenderingDetails();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:                rd.distance = superStuff.distance + 1;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        var superStyles = s.getAllStyleDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:            this.allStyleDefs = this.allStyleDefs.concat(superStyles);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        this.allStyleDefs.push(this.styleDef);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        // If we don't have a renderer, make sure we mark that here. Note
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        // that we can't assert that we have a renderer, because sometimes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        // there are component defs that don't, maybe the server shouldn't
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:        // send them down, as they cannot be instantiated on the client.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:    this.renderingDetails = rd;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/ComponentDef.js:// #include ruau.component.ComponentDef_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @class InvalidComponent
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:function InvalidComponent(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:	// Never used directly - just its prototype is leveraged
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.ruauType = "Component";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getDef = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.index = function(localId, globalId){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.deIndex = function(localId, globalId){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    // Unfortunately, there are some bizarre loops with deIndex and destroy.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    // For the moment, we don't enforce that this is a valid component until
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    // we can track down _why_ it is being called on already destroyed components
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.find = function(name){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.findInstancesOf = function(type, ret, cmp){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getSuperest = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.findInstanceOf = function(type){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.isInstanceOf = function(name){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @param {Object} type Applies the type to its definition.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.implementsDirectly = function(type){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.addHandler = function(eventName, valueProvider, actionExpression, insert){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.addValueHandler = function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * Forces the final destroy of a component (after async).
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.finishDestroy = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.destroy = function(async){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.isRendered = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.setUnrendering = function(unrendering) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.isUnrendering = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.setRendered = function(rendered) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getRenderer = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getGlobalId = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getLocalId = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getRendering = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getSuper = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.associateElement = function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getElements = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getElement = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.get = function(key){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.set = function (key, value) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getConcreteComponent = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.isConcrete = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getEventDispatcher = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getModel = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getEvent = function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getEventByDescriptor = function(descriptor) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.fire = function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.isValid = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    return false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.toString = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    return "InvalidComponent" + (this._description||'');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.toJSON = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.getFacets = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:    this.raiseInvalidComponentError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:InvalidComponent.prototype.raiseInvalidComponentError = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:	var error = "Invalid component";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:	if (this._globalId && this._componentDef) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js:		error += ": " + this._componentDef + " [" + this._globalId + "]";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent.js://#include ruau.component.InvalidComponent_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:var p = Component.prototype;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "ruauType", p.ruauType,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getGlobalId", p.getGlobalId,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getLocalId", p.getLocalId,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "associateElement", p.associateElement,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "clearReference", p.clearReference,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "markDirty", p.markDirty,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "isValid", p.isValid,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "setValid", p.setValid,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "addErrors", p.addErrors,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "clearErrors", p.clearErrors,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "autoDestroy", p.autoDestroy,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getEventDispatcher", p.getEventDispatcher,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "addHandler" , p.addHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "addDocumentLevelHandler" , p.addDocumentLevelHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "removeDocumentLevelHandler" , p.removeDocumentLevelHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "isInstanceOf", p.isInstanceOf,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getHandledEvents", p.getHandledEvents,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "hasEventHandler", p.hasEventHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "addValueHandler", p.addValueHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "removeValueHandler", p.removeValueHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getFacets", p.getFacets,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    // DCHASMAN TODO Kill these once we figure out how to replace them in Halo
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getAttributeValueProvider", p.getAttributeValueProvider,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/Component_export.js:    "getComponentValueProvider", p.getComponentValueProvider
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:var p = InvalidComponent.prototype;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "ruauType", p.ruauType,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getGlobalId", p.getGlobalId,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getLocalId", p.getLocalId,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "associateElement", p.associateElement,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "isValid", p.isValid,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getEventDispatcher", p.getEventDispatcher,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "addHandler" , p.addHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "isInstanceOf", p.isInstanceOf,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getHandledEvents", p.getHandledEvents,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "hasEventHandler", p.hasEventHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "addValueHandler", p.addValueHandler,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getFacets", p.getFacets,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    // DCHASMAN TODO Kill these once we figure out how to replace them in Halo
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getAttributeValueProvider", p.getAttributeValueProvider,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/component/InvalidComponent_export.js:    "getComponentValueProvider", p.getComponentValueProvider,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: * @description The Ruue Client Service, accessible using $A.services.client.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js: *            Communicates with the Ruue Server.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:var RuueClientService = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.controller.Action
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.controller.ActionCallbackGroup
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.controller.ActionQueue
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.controller.ActionCollector
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.model.ValueDef
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.RuueClientService_private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    var NOOP = function() {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    var clientService = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Init host is used to set the host name for communications.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * It should only be called once during the application life cycle, since it
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Note that in testing, this can be used to make the host appear unreachable.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {string} host the host name of the server.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Initialize ruau.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This should never be called by client code. It is exposed, but deleted after
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} config the configuration for ruau.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {string} token the XSS token.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {function} callback the callback when init is complete.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {object} container the place to install ruau (defaults to document.body).
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        init : function(config, token, callback, container) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Initial Component Created");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Initial Component Rendered");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var body = document.body;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // not on in dev modes to preserve stacktrace in debug tools
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // I think this should be done in all cases, the $A.error can be more
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // instructive than an uncaught exception.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // Why is this happening in the ClientService? --JT
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // NOTE: no creation path here, we are at the top level
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var component = componentService.newComponentDeprecated(config, null, false, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.Perf.endMark("Initial Component Created");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                renderingService.render(component, container || body);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                renderingService.afterRender(component);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.Perf.endMark("Initial Component Rendered");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                callback(component);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // not on in dev modes to preserve stacktrace in debug tools
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            } catch (e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This function is used by the test service to determine if there are outstanding actions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return priv.foreground.idle() && priv.background.idle() && priv.actionQueue.actions.length === 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Initialize definitions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This should never be called by client code. It is exposed, but deleted after
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} config the set of definitions to initialize
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var evtConfigs = ruau.util.json.resolveRefs(config["eventDefs"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Registered Events [" + evtConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for ( var j = 0; j < evtConfigs.length; j++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.endMark("Registered Events [" + evtConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var libraryConfigs = ruau.util.json.resolveRefs(config["libraryDefs"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Registered Libraries [" + libraryConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for (j = 0; j < libraryConfigs.length; j++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                componentService.getLibraryDef(libraryConfigs[j]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.endMark("Registered Libraries [" + libraryConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var controllerConfigs = ruau.util.json.resolveRefs(config["controllerDefs"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Registered Controllers [" + controllerConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.endMark("Registered Controllers [" + controllerConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var comConfigs = ruau.util.json.resolveRefs(config["componentDefs"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.mark("Registered Components [" + comConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for ( var i = 0; i < comConfigs.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.endMark("Registered Components [" + comConfigs.length + "]");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.Perf.endMark("PageStart");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // Let any interested parties know that defs have been initialized
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for ( var n = 0; n < priv.initDefsObservers.length; n++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // Use the non-existence of initDefs() as the sentinel indicating that defs are good to go
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Run a callback after defs are initialized.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This is for internal use only. The function is called synchronously if definitions have
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * already been initialized.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {function} callback the callback that should be invoked after defs are initialized
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        runAfterInitDefs : function(callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // Add to the list of callbacks waiting until initDefs() is done
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.initDefsObservers.push(callback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // initDefs() is done and gone so just run the callback
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                callback();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Load an app by calling loadComponent.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {DefDescriptor}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            descriptor The key for a definition with a qualified name
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            of the format prefix://namespace:name.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Map}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            attributes The configuration data to use in the app
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {function}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            callback The callback function to run
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        loadApplication : function(descriptor, attributes, callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            this.loadComponent(descriptor, attributes, callback, "APPLICATION");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Fire an event exception from the wire.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This is published, but only for use in the case of an event exception serialized as JS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * not sure if this is important.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} config The data for the exception event
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Load a component.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {DefDescriptor}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            descriptor The key for a definition with a qualified name
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            of the format prefix://namespace:name
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Map}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            attributes The configuration data to use. If specified,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            attributes are used as a key value pair.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {function}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            callback The callback function to run
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        loadComponent : function(descriptor, attributes, callback, defType) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    var desc = new DefDescriptor(descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    var tag = desc.getNamespace() + ":" + desc.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    var method = defType === "APPLICATION" ? "getApplication" : "getComponent";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    var action = $A.get("c.ruau://ComponentController." + method);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    action.setStorable({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // No, really, do not abort this. The setStorable above defaults this
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // to be abortable, but, even though nothing should ever trigger an action
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // that could be abortable here (we haven't loaded the app yet, so it shouldn't
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // be possible), we want to avoid any confusion.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    action.setAbortable(false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    action.setParams({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        name : tag,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        attributes : attributes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    action.setCallback(that, function(a) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        var state = a.getState();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        if (state === "SUCCESS") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            callback(a.getReturnValue());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        } else if (state === "INCOMPLETE"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            // Use a stored response if one exists
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            var storage = Action.prototype.getStorage();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            if (storage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                var key = action.getStorageKey();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                storage.get(key, function(actionResponse) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                    if (actionResponse) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        storage.log("RuueClientService.loadComponent(): bootstrap request was INCOMPLETE using stored action response.", [action, actionResponse]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        action.updateFromResponse(actionResponse);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        action.finishAction($A.getContext());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        $A.error("Unable to load application.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            // This can be either error or aborted, and we really should only
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            var errors = a.getError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            if (errors && errors[0] && errors[0].message) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                $A.error(a.getError()[0].message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                $A.error("Unable to load component, action state = "+state);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        $A.Perf.endMark("Sending XHR " + $A.getContext().getNum());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    clientService.enqueueAction(action);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                }, "loadComponent");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Check to see if we are inside the ruau processing 'loop'.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        inRuueLoop : function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return priv.ruauStack.length > 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Check to see if a public pop should be allowed.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * We allow a public pop if the name was pushed, or if there is nothing
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * on the stack.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {string} name the name of the public 'pop' that will happen.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @return {Boolean} true if the pop should be allowed.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        checkPublicPop : function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (priv.ruauStack.length > 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                return priv.ruauStack[priv.ruauStack.length-1] === name;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // Allow public pop calls on an empty stack for now.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Push a new name on the stack.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {string} name the name of the item to push.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        pushStack : function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            priv.ruauStack.push(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Pop an item off the stack.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * The name of the item must match the previously pushed. If this is the last
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * item on the stack we do post processing, which involves sending actions to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param name the name of the last item pushed.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        popStack : function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var count = 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var lastName;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var done;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (priv.ruauStack.length > 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                lastName = priv.ruauStack.pop();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (lastName !== name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    $A.error("Broken stack: popped "+lastName+" expected "+name+", stack = "+priv.ruauStack);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.warning("Pop from empty stack");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (priv.ruauStack.length === 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var tmppush = "$A.clientServices.popStack";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.ruauStack.push(tmppush);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    $A.renderingService.rerenderDirty(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        $A.error("popStack has not completed after 15 loops");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // Force our stack to nothing.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                lastName = priv.ruauStack.pop();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (lastName !== tmppush) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    $A.error("Broken stack: popped "+tmppush+" expected "+lastName+", stack = "+priv.ruauStack);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.ruauStack = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.actionQueue.incrementNextTransactionId();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Perform a hard refresh.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        hardRefresh : function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return priv.hardRefresh();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Marks the application as outdated.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        setOutdated : function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return priv.setOutdated();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * A utility to handle events passed back from the server.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        parseAndFireEvent : function(evtObj) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var descriptor = evtObj["descriptor"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (eventService.hasHandlers(descriptor)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var evt = $A.getEvt(descriptor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (evtObj["attributes"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    evt.setParams(evtObj["attributes"]["values"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * For bootstrapping only
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        fireLoadEvent : function(eventName) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return priv.fireLoadEvent(eventName);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            newToken Refresh the current token with a new one.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Create an action group with a callback.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * The callback will be called when all actions are complete within the group.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param actions
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *      {Array.<Action>} the array of actions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param scope
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param callback
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *      {function} The callback function
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        makeActionGroup : function(actions, scope, callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var group = undefined;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.assert($A.util.isArray(actions), "makeActionGroup expects a list of actions, but instead got: " + actions);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (callback !== undefined) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.assert($A.util.isFunction(callback),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        "makeActionGroup expects the callback to be a function, but instead got: " + callback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                group = new ActionCallbackGroup(actions, scope, callback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Run the actions.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This function effectively attempts to submit all pending actions immediately (if
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * there is room in the outgoing request queue). If there is no way to immediately queue
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * the actions, they are submitted via the normal mechanism. Note that this does not change
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * the 'transaction' associated with the current ruau stack, so abortable actions might go
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * out in two separate requests without cancelling each other.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Array.<Action>}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            actions an array of Action objects
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {function}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         *            callback The callback function to run
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        runActions : function(actions, scope, callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var i;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            clientService.makeActionGroup(actions, scope, callback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for (i = 0; i < actions.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.actionQueue.enqueue(actions[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Inject a component and set up its event handlers. For Integration
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * FIXME: this should be private.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} rawConfig the config for the component to be injected
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} locatorDomId the DOM id where we should place our element.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} localId the local id for the component to be created.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        injectComponent : function(rawConfig, locatorDomId, localId) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var config = $A.util.json.resolveRefs(rawConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // Save off any context global stuff like new labels
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var actionResult = config["actions"][0];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var action = $A.get("c.ruau://ComponentController.getComponent");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var self = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            action.setCallback(action, function(a) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var element = $A.util.getElement(locatorDomId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // Check for bogus locatorDomId
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var errors;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // We have no other place to display this
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // critical failure - fallback to the
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        "Invalid locatorDomId specified - no element found in the DOM with id=" + locatorDomId
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    errors = a.getState() === "SUCCESS" ? undefined : action.getError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var componentConfig;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    componentConfig = a.getReturnValue();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // Make sure we clear any configs associated with the action.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    $A.getContext().clearComponentConfigs(a.getId());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // Display the errors in a ui:message instead
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    componentConfig = self.createIntegrationErrorConfig(errors);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                componentConfig["localId"] = localId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var root = $A.getRoot();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var c = $A.componentService.newComponentDeprecated(componentConfig, root);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    // Wire up event handlers
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    self.addComponentHandlers(c, config["actionEventHandlers"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var body = root.get("v.body");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // Do not let Ruue consider this initial setting into the surrogate app as a candiadate for rerendering
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.afterRender(c);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            action.updateFromResponse(actionResult);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            action.finishAction($A.getContext());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Create error component config to display integration service errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {(String|String[])} errorText
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @returns {Object} error config for ui:message
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        createIntegrationErrorConfig: function(errorText) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            "descriptor" : "markup://ui:message"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        "attributes" : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                            "values" : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                "title" : "Ruue Integration Service Error",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                            "descriptor" : "markup://ui:outputText"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        "attributes" : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                            "values" : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                                        "value" : $A.util.json.encode(errorText)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Used within async callback for AIS.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Component} component - component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} locatorDomId - element id
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} [actionEventHandlers] - event handlers
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        renderInjection: function(component, locatorDomId, actionEventHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var error = null,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                hostEl = document.getElementById(locatorDomId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                error = "Invalid locatorDomId specified - no element found in the DOM with id=" + locatorDomId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (component.isInstanceOf("ruau:text")) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // check for component creation error
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                error = component.get("v.value");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                // create same messaging as injectComponent
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var errorConfig = this.createIntegrationErrorConfig(error);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                errorConfig["localId"] = component.getLocalId();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                component = $A.componentService.newComponentDeprecated(errorConfig, $A.getRoot());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            this.addComponentHandlers(component, actionEventHandlers);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.afterRender(component);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Use async created component for integration service
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} config - component def config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} locatorDomId - id of element to inject component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} [eventHandlers] - handlers of registered event
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        injectComponentAsync: function(config, locatorDomId, eventHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                $A.clientService.renderInjection(component, locatorDomId, eventHandlers);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            }, config, $A.getRoot(), false, false, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Add handlers of registered events for AIS
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Component} component - component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} [actionEventHandlers] - handlers of registered events
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        addComponentHandlers: function(component, actionEventHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (actionEventHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                var containerValueProvider = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    get : function(functionName) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        window[functionName](evt);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    runDeprecated : function(evt) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        window[functionName](evt);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            for (var evt in actionEventHandlers) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                component.addHandler(evt, containerValueProvider, actionEventHandlers[evt]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Return whether Ruue believes it is online.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Immediate and future communication with the server may fail.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @return {Boolean} Returns true if Ruue believes it is online; false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Inform Ruue that the environment is either online or offline.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Boolean} isConnected Set to true to run Ruue in online mode,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * or false to run Ruue in offline mode.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Queue an action for execution after the current event loop has ended.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This function must be called from within an event loop.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Action} action the action to enqueue
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Boolean} background Set to true to run the action in the background, otherwise the value of action.isBackground() is used.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @memberOf RuueClientService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        // TODO: remove boolean trap http://ariya.ofilabs.com/2011/08/hall-of-api-shame-boolean-trap.html
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        enqueueAction : function(action, background) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.assert(!$A.util.isUndefinedOrNull(action), "EnqueueAction() cannot be called on an undefined or null action.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            $A.assert(!$A.util.isUndefined(action.ruauType)&& action.ruauType==="Action", "Cannot call EnqueueAction() with a non Action parameter.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (background) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                action.setBackground();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            priv.actionQueue.enqueue(action);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Defer the action by returning a Promise object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Configure your action excluding the callback prior to deferring.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * The Promise is a thenable, meaning it exposes a 'then' function for consumers to chain updates.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Action} action - target action
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @return {Promise} a promise which is resolved or rejected depending on the state of the action
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        deferAction : function (action) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                action.wrapCallback(that, function (a) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    if (a.getState() === 'SUCCESS') {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        success(a.getReturnValue());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        // Reject the promise as it was not successful.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        // Give the user a somewhat useful object to use on reject.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        error({ state: a.getState(), action: a });
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                that.enqueueAction(action);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Gets whether or not the Ruue "actions" cache exists.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @returns {Boolean} true if the Ruue "actions" cache exists.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        hasActionStorage: function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            return !!Action.getStorage();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Checks to see if an action is currently being stored (by action descriptor and parameters).
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} descriptor - action descriptor.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} params - map of keys to parameter values.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Function} callback - called asynchronously after the action was looked up in the cache. Fired with a
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * single parameter, isInStorge {Boolean} - representing whether the action was found in the cache.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        isActionInStorage : function(descriptor, params, callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var storage = Action.getStorage();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            callback = callback || NOOP;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (!$A.util.isString(descriptor) || !$A.util.isObject(params) || !storage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                callback(false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            storage.get(Action.getStorageKey(descriptor, params))
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        callback(!!response && !!response.value && !response.isExpired);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Resets the cache cleanup timer for an action.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {String} descriptor - action descriptor.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Object} params - map of keys to parameter values.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param {Function} callback - called asynchronously after the action was revalidated. Called with a single
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * parameter, wasRevalidated {Boolean} - representing whether the action was found in the cache and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * successfully revalidated.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        revalidateAction : function(descriptor, params, callback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var storage = Action.getStorage();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            callback = callback || NOOP;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (!$A.util.isString(descriptor) || !$A.util.isObject(params) || !storage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                callback(false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var actionKey = Action.getStorageKey(descriptor, params);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            storage.get(actionKey).then(function(response) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (!!response && !!response.value) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    storage.put(actionKey, response.value)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                        .then(function() { callback(true); });
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    callback(false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * Clears an action out of the action cache.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param descriptor {String} action descriptor.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param params {Object} map of keys to parameter values.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param successCallback {Function} called after the action was invalidated. Called with true if the action was
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * successfully invalidated and false if the action was invalid or was not found in the cache.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @param errorCallback {Function} called if an error occured during execution
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:        invalidateAction : function(descriptor, params, successCallback, errorCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var storage = Action.getStorage();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            successCallback = successCallback || NOOP;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            errorCallback = errorCallback || NOOP;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (!$A.util.isString(descriptor) || !$A.util.isObject(params) || !storage) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                successCallback(false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            storage.remove(Action.getStorageKey(descriptor, params))
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                .then(function() { successCallback(true); }, errorCallback );
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * process the current set of actions, looping if needed.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * This runs the current action set.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:         * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var actions;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var processedActions = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            var action;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            actions = priv.actionQueue.getClientActions();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if(actions.length > 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                priv.runClientActions(actions);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // Only send forground actions if we have something that
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // needs to be sent (force boxcar will delay this)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            // FIXME: we need measures of how long this delays things.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (priv.actionQueue.needXHR() && priv.foreground.start()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                actions = priv.actionQueue.getServerActions();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (actions.length > 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    priv.request(actions, priv.foreground);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    priv.foreground.cancel();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:            if (priv.background.start()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                action = priv.actionQueue.getNextBackgroundAction();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                if (action !== null) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    priv.request([action], priv.background);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:                    priv.background.cancel();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService.js:    // #include ruau.RuueClientService_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @description The Ruue Component Service, accessible using $A.service.component.  Creates and Manages Components.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService = function(actions, finishedCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    this.actionDefRegistry = new ActionDefRegistry();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    this.libraryDefRegistry = new $A.ns.LibraryDefRegistry();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    this.indexes = { globalId : {} };
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    this.renderedBy = "ruauRenderedBy";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Gets an instance of a component.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {String} globalId The generated globally unique Id of the component that changes across pageloads.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.get =  function(globalId) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var ret = this.indexes.globalId[globalId];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} element The element that is used to find the rendering component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @memberOf RuueComponentService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getRenderingComponentForElement = function(element) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var ret;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if ($A.util.hasDataAttribute(element, this.renderedBy)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var id = $A.util.getDataAttribute(element, this.renderedBy);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        $A.assert(!$A.util.isUndefinedOrNull(ret), "No component found for element with id : " + id);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    } else if(element.parentNode){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        ret = this.getRenderingComponentForElement(element.parentNode);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Gets the attribute provider for the provided element.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} element The element whose attribute provider is to be returned
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @memberOf RuueComponentService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getAttributeProviderForElement = function(element) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.getRenderingComponentForElement(element).getAttributeValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Create a new component array.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.newComponentArray = function(config, attributeValueProvider, localCreation, doForce){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for(var i=0;i<config.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        ret.push(this.newComponentDeprecated(config[i], attributeValueProvider, localCreation, doForce));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @deprecated use newComponentAsync instead
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * newComponent() calls newComponentDeprecated().
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} config Use config to pass in your component definition and attributes. Supports lazy or exclusive loading by passing in "load": "LAZY" or "load": "EXCLUSIVE"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} attributeValueProvider The value provider for the attributes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.newComponent = function(config, attributeValueProvider, localCreation, doForce){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.newComponentDeprecated(config, attributeValueProvider, localCreation, doForce);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @deprecated use newComponentAsync instead
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Creates a new component on the client or server and initializes it. For example <code>$A.services.component.newComponentDeprecated("ui:inputText")</code>
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * creates a <code>ui:inputText</code> component.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} config Use config to pass in your component definition and attributes. Supports lazy or exclusive loading by passing in "load": "LAZY" or "load": "EXCLUSIVE"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} attributeValueProvider The value provider for the attributes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.newComponentDeprecated = function(config, attributeValueProvider, localCreation, doForce){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    $A.assert(config, "config is required in ComponentService.newComponentDeprecated(config)");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if ($A.util.isArray(config)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        return this.newComponentArray(config, attributeValueProvider, localCreation, doForce);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var configObj = this.getComponentConfigs(config, attributeValueProvider);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var def = configObj["definition"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        load;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    config = configObj["configuration"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if(doForce !== true && !config["creationPath"]){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if(def && !def.hasRemoteDependencies() ){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            localCreation = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            delete config["load"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        }else if(!config["load"]){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            load = "LAZY";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            load = config["load"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if(desc === "markup://ruau:placeholder"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        load = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if (load === "LAZY" || load === "EXCLUSIVE") {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        localCreation = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var oldConfig = config;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                "descriptor": "markup://ruau:placeholder"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            "localId": oldConfig["localId"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            "attributes": {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                "values": {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                    "attributes": oldConfig["attributes"] ? oldConfig["attributes"]["values"] : null,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                    "exclusive": (oldConfig["load"] === "EXCLUSIVE")
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                "valueProvider":oldConfig["valueProvider"]
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return new Component(config, localCreation);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Asynchronous version of newComponent(). Creates a new component and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * calls your provided callback with the completed component regardless of any server-side dependencies.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} callbackScope The "this" context for the callback (null for global)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Function} callback The callback to use once the component is successfully created
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} config The componentDef descriptor and attributes for the new component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} attributeValueProvider The value provider for the attributes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Boolean} [localCreation] Whether created client side (passed to Component)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Boolean} [doForce] Whether to force client side creation
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Boolean} [forceServer] Whether to force server side creation
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.newComponentAsync = function(callbackScope, callback, config, attributeValueProvider, localCreation, doForce, forceServer) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    $A.assert(config, "config is required in ComponentService.newComponentAsync(config)");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    $A.assert($A.util.isFunction(callback),"newComponentAsync requires a function as the callback parameter");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    //TODO - arrays are incorrectly created synchronously in all cases.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if ($A.util.isArray(config)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        return this.newComponentArray(config, attributeValueProvider, localCreation, doForce);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var configObj = this.getComponentConfigs(config, attributeValueProvider);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var def = configObj["definition"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var forceClient = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    config = configObj["configuration"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // been handed a partial config. This feels distinctly like a hack
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // and will hopefully disappear with ComponentCreationContexts.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if (config["creationPath"] && !forceServer) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if ( !forceClient && (!def || (def && def.hasRemoteDependencies()) || forceServer )) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        this.requestComponent(callbackScope, callback, config, attributeValueProvider);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var newComp = this.newComponentDeprecated(config, attributeValueProvider, localCreation, doForce);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        callback.call(callbackScope, newComp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param callback
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.requestComponent = function(callbackScope, callback, config, avp) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var action = $A.get("c.ruau://ComponentController.getComponent");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var attributes = config["attributes"] ?
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            (config["attributes"]["values"] ? config["attributes"]["values"] : config["attributes"])
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var atts = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // Note to self, these attributes are _not_ Ruue Values. They are instead either
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // a literal string or a (generic object) map.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for (var key in attributes) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var value = attributes[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if (value && value.hasOwnProperty("value")) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            value = value["value"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        // if we have an avp, use it here
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var ruauValue = valueFactory.create(value, null, avp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        atts[key] = this.computeValue(ruauValue, avp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    action.setCallback(this, function(a){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var newComp;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if(a.getState() === "SUCCESS"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var returnedConfig = a.getReturnValue();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            if (!returnedConfig["attributes"]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                returnedConfig["attributes"] = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var merging = returnedConfig["attributes"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            if (merging.hasOwnProperty("values")) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                merging = merging["values"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            for (var mkey in attributes) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                merging[mkey] = attributes[mkey];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            returnedConfig["localId"] = config["localId"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            newComp = $A.newCmpDeprecated(returnedConfig, avp, false);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var errors = a.getError();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            newComp = $A.newCmpDeprecated("markup://ruau:text");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                newComp.set("v.value", errors[0].message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                newComp.set("v.value", 'unknown error');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if ( $A.util.isFunction(callback) ) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            callback.call(callbackScope, newComp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    action.setParams({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        "name" : config["componentDef"]["descriptor"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        "attributes" : atts
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    $A.enqueueAction(action);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Evaluates value object into their literal values. Typically used to pass configs to server.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} valueObj Value Object
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} valueProvider value provider
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Boolean} raw
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.computeValue = function(valueObj, valueProvider) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if(ruau.util.isExpression(valueObj)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        return valueObj.evaluate(valueProvider);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return valueObj;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Provides processed component config, definition, and descriptor.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} attributeValueProvider
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @return {Object} {{configuration: {}, definition: ComponentDef, descriptor: String}}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getComponentConfigs = function(config, attributeValueProvider) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:	var configuration, configAttributes, def, desc, configKey, attributeKey; 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:	// Given a string input, expand the config to be an object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // When a valueProvider is specified, perform a shallow 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // clone of the config to preserve the original attributes. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:	if (attributeValueProvider) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		configuration = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:			if (config.hasOwnProperty(configKey)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:				configuration[configKey] = config[configKey];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		// Prepare new 'attributes' object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		configAttributes = config['attributes'];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		configuration['attributes'] = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		// Copy attributes to prevent 'valueProvider' from mutating the original config. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:			for (attributeKey in configAttributes) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:				if (configAttributes.hasOwnProperty(attributeKey)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:					configuration['attributes'][attributeKey] = configAttributes[attributeKey];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		// Safe to attach valueProvider reference onto new object.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		configuration['attributes']['valueProvider'] = attributeValueProvider;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:		configuration = config;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // Resolve the definition and descriptor.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:	def = this.getDef(configuration["componentDef"], true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        desc = configuration["componentDef"]["descriptor"] ? configuration["componentDef"]["descriptor"] : configuration["componentDef"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        "configuration"	: configuration,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Indexes the component using its global Id, which is uniquely generated across pageloads.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.index = function(component){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    this.indexes.globalId[component.getGlobalId()] = component;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Object} config The descriptor (<code>markup://ui:scroller</code>) or other component attributes that are provided during its initialization.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @param {Boolean} noInit
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @returns {ComponentDef} The metadata of the component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getDef = function(config, noInit){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getControllerDef = function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Gets the action definition from the registry.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getActionDef = function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.actionDefRegistry.getDef(config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getModelDef = function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Gets the provider definition from the registry. A provider enables an abstract component definition to be used directly in markup.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getProviderDef = function(providerDefDescriptor, config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getRendererDef = function(componentDefDescriptor, config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getHelperDef = function(componentDefDescriptor, config, componentDef, libraries){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.helperDefRegistry.getDef(componentDefDescriptor, config, componentDef, libraries);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getLibraryDef = function(descriptor, libraryDef){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.libraryDefRegistry.getDef(descriptor, libraryDef);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.destroy = function(components){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    if (!ruau.util.isArray(components)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for (var i = 0; i < components.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        var cmp = components[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.deIndex = function(globalId){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    delete this.indexes.globalId[globalId];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Returns the descriptors of all components known to the registry.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @memberOf RuueComponentService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getRegisteredComponentDescriptors = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var name;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var componentDefs = this.registry.componentDefs;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for (name in componentDefs) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        ret.push(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    // Union in any locally cached component defs
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var catalog = this.registry.getLocalCacheCatalog();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for (name in catalog) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if (!componentDefs[name]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            ret.push(name);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * Get the dynamic namespaces defined by 'layout://name'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getDynamicNamespaces = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    return this.registry.dynamicNamespaces;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @memberOf RuueComponentService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.getIndex = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var ret = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    var index = this.indexes.globalId;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    for (var globalId in index) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:        if(globalId.indexOf(":1") > -1){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var cmp = index[globalId];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var par = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            var vp = cmp.getComponentValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:                par = vp.getGlobalId() + " : " + vp.getDef().toString();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            ret = ret + globalId + " : ";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:            ret = ret + " [ " + par + " ] ";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @memberOf RuueComponentService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:$A.ns.RuueComponentService.prototype.isConfigDescriptor = function(config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * This check is to distinguish between a AttributeDefRef that came
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * from server which has a descriptor and value, and just a thing
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * that somebody on the client passed in. This totally breaks when
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * somebody pass a map that has a key in it called "descriptor",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * like DefModel.java in the IDE TODO: better way to distinguish
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:     * real AttDefRefs from random junk
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:exp($A.ns.RuueComponentService.prototype,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "get", $A.ns.RuueComponentService.prototype.get,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "getRenderingComponentForElement", $A.ns.RuueComponentService.prototype.getRenderingComponentForElement,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "getAttributeProviderForElement", $A.ns.RuueComponentService.prototype.getAttributeProviderForElement,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "newComponent", $A.ns.RuueComponentService.prototype.newComponent,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "newComponentDeprecated", $A.ns.RuueComponentService.prototype.newComponentDeprecated,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "newComponentAsync", $A.ns.RuueComponentService.prototype.newComponentAsync,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "getDef", $A.ns.RuueComponentService.prototype.getDef,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "getRegisteredComponentDescriptors", $A.ns.RuueComponentService.prototype.getRegisteredComponentDescriptors,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "getIndex", $A.ns.RuueComponentService.prototype.getIndex,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "renderedBy", $A.ns.RuueComponentService.prototype.renderedBy,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueComponentService.js:    "computeValue", $A.ns.RuueComponentService.prototype.computeValue
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:     * Allow testing for warnings
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:    function testingWarningLog(level, msg, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        $A.test.ruauWarning(msg);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        $A.test.ruauError(msg);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:    $A.logger.subscribe("WARNING", testingWarningLog);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:     * Prints log to both the console (if available), and to the ruau debug component unless in production
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:    function devDebugConsoleLog(level, message, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        var stringVersion = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        if (!$A.util.isUndefinedOrNull(message)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            stringVersion = level + ": " + message;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        if (!$A.util.isUndefinedOrNull(error) && !$A.util.isUndefinedOrNull(error.message)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            stringVersion += " : " + error.message;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        var trace;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            // remove some junk logger stack
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            trace = $A.logger.getStackTrace(error, 4);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        } else if (error && error.stack) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            trace = error.stack;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        var logMsg = level + ": " + (!$A.util.isUndefinedOrNull(message) ? message : "");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            var console = window["console"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                    console["debug"](message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                if (trace) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                    console["group"]("stack");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                    for ( var i = 0; i < trace.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                        console["debug"](trace[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                stringVersion = $A.logger.stringVersion(logMsg, error, trace);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        // sending logging info to debug tool if enabled
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                if ($A.util.isUndefinedOrNull(trace)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                    trace = $A.logger.getStackTrace(error);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:                stringVersion = $A.logger.stringVersion(logMsg, error, trace);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            var debugLogEvent = $A.util.getDebugToolsRuueInstance().get("e.ruau:debugLog");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            debugLogEvent.setParams({"type" : level, "message" : stringVersion});
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:     * Throws error and show error dialog for failed assertion unless in production
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:    function devAssertError(level, message, e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        $A.trace();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        var elt = $A.util.getElement("ruauErrorMessage");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            elt.innerHTML = message;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            $A.util.removeClass(document.body, "loading");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            $A.util.addClass(document.body, "ruauError");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:            alert(message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/Logging.js:        throw new Error(message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "loadApplication", clientService.loadApplication,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "loadComponent", clientService.loadComponent,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "hardRefresh", clientService.hardRefresh,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "setOutdated", clientService.setOutdated,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "isActionInStorage", clientService.isActionInStorage,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "revalidateAction", clientService.revalidateAction,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueClientService_export.js:    "invalidateAction", clientService.invalidateAction
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * @description Creates a ValueDef instance.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * @param config used to create the value definition.  Only config["name"] is used.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js:function ValueDef(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js:    this.name = config["name"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js:ValueDef.prototype.ruauType = "ValueDef";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js: * Returns the name of the ValueDef instance.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js:ValueDef.prototype.getName = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ValueDef.js:    return this.name;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * @description Creates a new ModelDef instance.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:    // TODO: members should be valuedefs with typedefs
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:    for (var i = 0; i < config["members"].length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:        var m = config["members"][i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:        this.members.push(new ValueDef(m));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:ModelDef.prototype.ruauType = "ModelDef";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Gets the descriptor. (e.g. markup://foo:bar)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Returns a new Model instance for this component.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * @param {Object} config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * @param {Component} component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js:ModelDef.prototype.newInstance = function(config, component){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js: * Gets member value defs containing ValueDef and TypeDef.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef.js://#include ruau.model.ModelDef_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js:ModelDefRegistry.prototype.ruauType = "ModelDefRegistry";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * Returns a ModelDef instance or config after adding to the registry.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * Throws an error if config is not provided.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * @param {Object} config Passes in a config, a ModelDef, or the name of a ModelDef.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js: * @returns {ModelDef} A ModelDef instance or config after adding to the registry
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js:    ruau.assert(config, "ModelDef Config required for registration");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js:    // We don't re-register (or modify in any way) once we've registered
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js:    var descriptor = config["descriptor"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDefRegistry.js:    var ret = this.modelDefs[descriptor];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * @description Creates a Model instance.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * @param {Object} def
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * @param {Object} data
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js: * @param {Component} component
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:function Model(def, data, component){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    if(!data){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        data={};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    this.data=data;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        var members=def.getMembers();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        for(var i=0;i<members.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:            var name=members[i].getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:            if(!data.hasOwnProperty(name)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:                data[name]=null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    var value = undefined;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        value = this.data[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        value = ruau.expressionService.resolve(key, this.data);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    if (ruau.util.isExpression(value)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        value = value.evaluate();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    return value;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:Model.prototype.set=function(key,value){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    var oldValue;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    var target=this.data;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    var step=key;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        var path = key.split('.');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        target = ruau.expressionService.resolve(path.slice(0, path.length - 1), target);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        $A.assert(target,"Model.set: unable to resolve '"+key+"'.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        step=path[path.length-1];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    oldValue = target[step];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    if (oldValue instanceof PropertyReferenceValue) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        oldValue.set(value);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:        target[step]=value;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:Model.prototype.destroy=function(async){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/Model.js:    this.data=this.def=this.component=null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js:var p = ModelDef.prototype;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/model/ModelDef_export.js:    "ruauType", p.ruauType
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js: * @description The Ruue Dev Tool Service, accessible using $A.devToolServices.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:var RuueDevToolService = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    var port = document.createElement("span");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    port.id = "RuueDevToolServicePort";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    port.style.display = "none";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    document.body.appendChild(port);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var root = $A.getRoot();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    var highlightedElements = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    var appliedHighlightStyle = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        if(!appliedHighlightStyle){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            ruau.util.style.apply(".ruauDevToolServiceHighlight:before{position:absolute;display:block;width:100%;height:100%;" +
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    "background-color:#006699;opacity:.3;content:' ';border : 2px dashed white;}");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            appliedHighlightStyle = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var el = highlightedElements.pop();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            $A.util.removeClass(el, "ruauDevToolServiceHighlight");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        if(event.data){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var cmp = $A.getCmp(event.data);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var elements = cmp.getElements();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var i=0;i<elements.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var element = elements[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    $A.util.addClass(element, "ruauDevToolServiceHighlight");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     * @param reg
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     * @returns {Array}
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    function flattenRegistry(reg){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        for(var k in reg){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    function Statement(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        this.criteria = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var priv = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        for(var k in config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        for(var j in privConfig){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    var s = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.indexes.globalId);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.registry.componentDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.controllerDefRegistry.controllerDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.modelDefRegistry.modelDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.providerDefRegistry.providerDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.rendererDefRegistry.rendererDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry($A.services.component.helperDefRegistry.helperDefs);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "actionReferenceValue" : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry(valueFactory.getIndex("ActionReferenceValue"));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "functionCallValue" : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry(valueFactory.getIndex("FunctionCallValue"));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "passthroughValue" : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry(valueFactory.getIndex("PassthroughValue"));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "PropertyReferenceValue" : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry(valueFactory.getIndex("PropertyReferenceValue"));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "value" : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var ret = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var index = valueFactory.getIndex();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i in index){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var subIndex = index[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var j in subIndex){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        var value = subIndex[j];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        ret[value.id] = value;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return flattenRegistry(ret);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return renderingService.statsIndex["rerenderDirty"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var aggregate = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var types = ["render", "afterRender", "rerender", "unrender"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i = 0; i < types.length; i++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var type = types[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var stat = renderingService.statsIndex[type];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var j = 0; j < stat.length; j++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        stat[j].type = type;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        aggregate.push(stat[j]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return aggregate;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return Event.prototype.statsIndex;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * Returns the number of filtered rows and groups.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * @param {Object} config
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var view;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var from = config["from"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                $A.assert(view, "Invalid view : "+from);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                view = this.defaultView;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var fields = config["fields"] || this.defaultFields;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var derivedFields = config["derivedFields"] || this.defaultDerivedFields;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var filter = config["where"] || this.defaultFilter;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var der in derivedFields){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var derField = derivedFields[der];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var groupBy = config["groupBy"] || this.defaultGroupBy;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var rawRows = view();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var rows = this.filterFields(fields, derivedFields, rawRows);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            rows = this.applyFilter(filter, rows, rawRows);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            ret = this.applyGroupBy(groupBy, rows.rows, rows.rawRows);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        applyGroupBy : function(groupBy, rows, rawRows){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return new ResultSet({"rows" : rows, "rowCount" : rows.length},{"rawRows" : rawRows});
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var ret = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var groupCount = 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var i=0;i<rows.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var row = rows[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var key = row[groupBy];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var group = ret[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            return new ResultSet({"rowCount" : rows.length, "groupCount" : groupCount, "groups" : ret},{"rawRows" : rawRows, "rows" : rows});
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(fields === this.defaultFields && derivedFields === this.defaultDerivedFields){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(fields === this.defaultFields){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(!$A.util.isArray(fields)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var fieldSplit = fields.split(",");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var k=0;k<fieldSplit.length;k++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var field = $A.util.trim(fieldSplit[k]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var fieldConfig = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var splitField = field.match(/^(\S+)(?: as (\w+))?$/i);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    fieldConfig.alias = splitField[2] || field;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    fieldConfig.name = splitField[1].split(".");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var j=0;j<rows.length;j++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var row = rows[j];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var newRow = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var i=0;i<fields.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        newRow[fields[i].alias] = this.processField(row, fields[i].name, 0);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var uberRow = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    $A.util.apply(uberRow, row, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    $A.util.apply(uberRow, newRow, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var key in derivedFields){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        var derivedField = derivedFields[key];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        var val = derivedField(uberRow);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        newRow[key] = val;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        processField : function(root, fields, place){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var field = fields[place];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var val;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            val = root[field];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(val === undefined){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var func = root["get"+this.initCap(field)];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    func = root["is"+this.initCap(field)];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    val = func.call(root);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if(root.getValue){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        var f = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        for(var i=place;i<fields.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if(i !== place){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        place = i;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        val = root.getValue(f);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            }else if($A.util.isFunction(val)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                val = val.call(root);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            place++;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(val !== undefined &&  fields.length > place){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                val = this.processField(val, fields, place);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            return val;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        initCap : function(str) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             return str.substring(0,1).toUpperCase() + str.substring(1,str.length);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        applyFilter : function(filter, rows, rawRows){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var rawRet = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var i=0;i<rows.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var row = rows[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var rawRow = rawRows[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                if(filter(row, rawRow)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    rawRet.push(rawRow);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            return {rows : ret, rawRows : rawRet};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        newStatement : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            return new Statement();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        accessbilityAide:{
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param nodelistArray - array of elements that are needed to be turned into an actual array
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @return the new array
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            nodeListToArray : function(nodeListArray){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var normalArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i = 0; i < nodeListArray.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var j = 0; j < nodeListArray[i].length; j++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        normalArray.push(nodeListArray[i][j]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return normalArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param panels - the panels that we are going to look at (panelSlide, forcePanel, etc. Items that can basically be set to active)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param topPanelsCount the panels that could take over the page
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @return all errors that are found
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            findTopLevelErrors : function(panels, topPanelsCount){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var panel = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var hiddenValue = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i = 0; i< panels.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    panel = panels[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    hiddenValue = $A.util.getElementAttributeValue(panel, "aria-hidden");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    //Panel is not the top element
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if($A.util.hasClass(panel, "panelSlide")){                       
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        //If there is a top element, make sure that it has its aria-hidden attribute set to true
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if(topPanelsCount > 0){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if($A.util.isEmpty(hiddenValue) || (hiddenValue.toLowerCase().indexOf("false") > -1)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                errorArray.push(panel);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            //Otherwise, the panel should have the correct 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if(!$A.util.isUndefinedOrNull(hiddenValue) && (hiddenValue.toLowerCase().indexOf("true") > -1)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                errorArray.push(panel);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    //Panel is the top element
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if($A.util.hasClass(panel, "active")){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if(!$A.util.isUndefinedOrNull(hiddenValue) && (hiddenValue.toLowerCase().indexOf("true") > -1)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                errorArray.push(panel);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if( $A.util.isEmpty(hiddenValue) || (hiddenValue.toLowerCase().indexOf("false") > -1)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                errorArray.push(panel);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Helper functions that returns an error array when ever an inputDefaultError that is not associated with an ID is used
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   uls          - all of the ULs on the page
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   inputTags    - all of the input tags that can be associated with the inputDefaultError
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   selectTags   - all of the select tags that can be associated with the inputDefaultError
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   textAreaTags - all of the textAreaTags tags that can be associated with the inputDefaultError
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns array        - error array, 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             inputDefaultErrorAide : function(uls, inputTags, selectTags, textAreaTags) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var ul  = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var elmntAtrib = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  for(var i = 0; i< uls.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                      elmntAtrib = $A.util.getElementAttributeValue(ul ,"class");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                      if(!$A.util.isUndefinedOrNull(elmntAtrib) && elmntAtrib.indexOf("uiInputDefaultError") > -1){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                          elmntAtrib = $A.util.getElementAttributeValue(ul ,"id");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                          //As long as a select, inputTag or textArea have the value we are looking for set we pass
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                          if(!(accessAideFuncs.findMatchingId(elmntAtrib, inputTags, "aria-describedby")    ||
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                  accessAideFuncs.findMatchingId(elmntAtrib, selectTags, "aria-describedby") ||
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                  accessAideFuncs.findMatchingId(elmntAtrib, textAreaTags, "aria-describedby"))){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                              errorArray.push(ul);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 * Helper function that will return true if the two values equal each other
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 * @param   id             - value that we are expecting
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 * @param   tags           - tags to iterate through
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 * @param   attribute2find - attribute that we want to extract from the ID
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 * @returns boolean    - true signifies that it was found
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             findMatchingId : function (id, tags, attribute2find){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var tagIds = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 for(var i = 0; i<tags.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     tagIds = $A.util.getElementAttributeValue(tags[i], attribute2find);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     if(!$A.util.isUndefinedOrNull(tagIds)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    	 tagIds = tagIds.trim().split(/\s+/);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    	 for(var j = 0; j < tagIds.length; j++){                   	
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:	                    	 if(tagIds[j].indexOf(id) == 0){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 return false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Helper function that will return true if the two values equal each other
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   attribute  - Contents of the attribute that we want to look at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   val        - What we want to compare the attribute to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns boolean    - Signifies whether or not they are equal
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            doesContain : function(attribute, val){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 return attribute === val;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Helper function that tells us whether something is in the dict or not
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   attribute  - Contents of the attribute that we want to look at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   dict       - list of items that attribute should be equal to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns boolean    - returns true if attribute value is not dict
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            doesNotContain : function(attribute, dict){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  return !(attribute in dict);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Goes up the tree (until it reaches the body tag) and finds whether the initial tag param is in another sent up tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   tag       - The starting tag that we are going to use to go up the tree
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   nameOfTag - Name of the tag that we should find should the the starting tags parent
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns boolean   - Signifies whether or not the tag we want was found or not (found: true, else: false)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkParentMatchesTag : function(tag, parentTag){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 while(tag.tagName !== null && tag.tagName !== "BODY"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                      if(tag.tagName.toUpperCase() === parentTag){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                      tag = tag.parentNode;  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  return false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Keeps track of total number of errors in seen
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Function that goes through all labels and turns the for attribute into a key
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   labels    - All the labels that we want to go through
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   attribute - The attribute that is being sought (for, id, title, etc)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns dictionary  - Mapping of for atrib value to booleans
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            getDictFromTags : function(labels, attribute){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var atrib = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var dict = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                if($A.util.isUndefinedOrNull(labels)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var j =0; j<labels.length; j++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    atrib = $A.util.getElementAttributeValue(labels[j], attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if(!$A.util.isEmpty(atrib)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                       dict[atrib] = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Function that goes through all Image tags, makes sure it is set, then checks the alt tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   imgErrorMsg                - Default error message telling user why they should set alt tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            findAllImgTags:function (allImgTags, imgErrorMsg){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 var data_ruau_rendered_by = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 var errorArray = [];	 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 var imgType = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 var alt = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 for(var index = 0; index < allImgTags.length; index++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	     data_ruau_rendered_by = $A.util.getElementAttributeValue(allImgTags[index], "data-ruau-rendered-by");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	     alt = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	    // Checking for the data_ruau_rendered_by attribute 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         	    if(!$A.util.isEmpty(data_ruau_rendered_by)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         		  imgType = $A.getCmp(data_ruau_rendered_by).getAttributeValueProvider().get('v.imageType');	
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         		  alt     = $A.getCmp(data_ruau_rendered_by).getAttributeValueProvider().get('v.alt');		 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         	    //Checking for injected image tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     		    	  //Need to use the dom version so that it will return null if element is not prese
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     		    	  var htmlAlt = allImgTags[index].getAttribute("alt");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     		        	  htmlAlt = htmlAlt.toLowerCase().replace(/[\s\t\r\n]/g,'');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     		          errorArray.push(allImgTags[index]);    		                   		    
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:     		    	 if($A.util.isUndefinedOrNull(alt)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		          alt="";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		      alt = alt.toLowerCase().replace(/[\s\t\r\n]/g,'');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		      if(alt==="undefined" || alt==="null" || alt ==="empty"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		    	  errorArray.push(allImgTags[index]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		      else if(imgType === "informational" &&  alt === ""){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		    	  errorArray.push(allImgTags[index]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		      else if(imgType === "decorative" && alt !== ""){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        		    	  errorArray.push(allImgTags[index]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	 return accessAideFuncs.formatOutput(imgErrorMsg, errorArray);       	
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Function that goes through all labels and check for either the for attribute and the label id, or if a parent tag is a label
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * This function skips over several input types: submit, reset, image, hidden, and button. All of these have labels associated
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * with them in different ways 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   lbls       - All of the labels to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   inputTags  - The attribute that is being sought (for, id, title, etc)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns array     - All erroneous tags
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            inputLabelAide : function(lbls, inputTags){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var lblIsPres  = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var inputTag   = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var type       = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var inputTypes = "hidden button submit reset";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var lblDict = accessAideFuncs.getDictFromTags(lbls, "for");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for (var index = 0; index < inputTags.length; index++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    inputTag = inputTags[index];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    type = $A.util.getElementAttributeValue(inputTag, "type");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    else if (type == "image"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        var alt = $A.util.getElementAttributeValue(inputTag, "alt");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if($A.util.isEmpty(alt) || alt.replace(/[\s\t\r\n]/g,'') === ""){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            errorArray.push(inputTag); 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        lblIsPres = ((inputTag.id in lblDict) || (accessAideFuncs.checkParentMatchesTag(inputTag, "LABEL")));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            errorArray.push(inputTag);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Function that goes finds all given tags and makes sure that they all have an attribute set
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   tags   - Name of the tag to find all instances of 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   attribute - The attribute that is being sought (for, id, title, etc)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   errorVal  - Value that this attribute should not be set to
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   evalFunc  - Function to evaluate whether or not attribute is valid
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns array    - All erroneous tags
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkForAttrib : function(tags, attribute, errorVal, evalFunc){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var atrib ="";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i=0; i<tags.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    atrib = $A.util.getElementAttributeValue(tags[i], attribute);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if($A.util.isEmpty(atrib) || evalFunc(atrib.toLowerCase(), errorVal)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        errorArray.push(tags[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * This method grabs all attributes of a tag and turns them into strings 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   attribs - All of the attributes in a tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns string - String value of all of the tag attributes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            attribStringVal : function(attribs){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                if($A.util.isUndefinedOrNull(attribs)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    return "No data found";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var strAttrib ="";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var attrib=null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i = 0; i<attribs.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    attrib = attribs.item(i);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    strAttrib = strAttrib + " " +attrib.nodeName+ "=\""+attrib.value+"\""; 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method that looks at the given tag and will look print out the next two parents components names
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   tag     - The initial tag to find the parents of
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String  - The string representation of the the cmp stack trace 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            getStackTrace : function(tag){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            	var cmp = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var cmpInfo = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var cmpNameList = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var cmpName = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                //Keep going up until we hit the either the BODY or HTML tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                while(!$A.util.isUndefinedOrNull(tag) && tag.tagName.toLowerCase() !== "body" && tag.tagName.toLowerCase() !== "html"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    data_ruau_rendered_by = $A.util.getElementAttributeValue(tag, "data-ruau-rendered-by");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    //Make sure it has a rendered by value
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if(!$A.util.isEmpty(data_ruau_rendered_by)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         cmp = $A.getCmp(data_ruau_rendered_by);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        	 cmp = cmp.getAttributeValueProvider();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 cmpName = cmp.getNamespace()+":"+cmp.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 //Making sure that we have unique components
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 if(!(cmpName in cmpInfo)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                     cmpInfo[cmpName] = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                     cmpNameList = cmpNameList +"    by "+ cmpName +"\n";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     tag = tag.parentNode;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 return cmpNameList;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method grabs everything from the given array and prints out the error and the tag(s) that are the issue
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   tagError - The error message for the given tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   errArray - The array of errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Either the empty string or a string representation of the error
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            formatOutput : function(tagError, errArray){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            	 if(errArray.length === 0){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var len = errArray.length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var nodeName = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var elm = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var errStr = tagError+"\n";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 accessAideFuncs.errorCount = len + accessAideFuncs.errorCount; 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 for(var i = 0; i<len; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 	elm = errArray[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     nodeName = elm.nodeName.toLowerCase();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errStr = errStr+"  Error Tag: <"+nodeName+""+accessAideFuncs.attribStringVal(elm.attributes)+">...</"+nodeName+">\n";             
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errStr = errStr+"  Stack Trace: error tag is rendered\n" + accessAideFuncs.getStackTrace(elm)+"\n";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method looks at the given tags title, and makes sure that it is not the empty string
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   hd - The head tag
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns Array - Returns an array of all erroneous values
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkHeadHasCorrectTitle : function(hdErrMsg, hd){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var title = hd.getElementsByTagName("title")[0];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var errArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                   errArray.push(hd);  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return errArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method looks at the given anchors img (if it exists) and checks to see if it has an img atrib
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   anchor  - The anchor in question
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns Boolean - Returns whether a valid img alt was found
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            anchrDoesNotHaveImgWithAlt : function(anchor){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var imgs = anchor.getElementsByTagName("img");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var alt = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i =0; i<imgs.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    alt = $A.util.getElementAttributeValue(imgs[i], "alt");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if(!$A.util.isEmpty(alt) && alt.replace(/[\s\t\r\n]/g,'') !== ""){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                       return false;    
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method looks at the given arrays for anchor statements that are the empty string
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   anchors - The anchor tags in the document
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns Array - Returns an array of all erroneous values
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             checkAnchorHasInnerText : function (anchors){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var errArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var anchor = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var text = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var anchorId = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var accessAideFuncs = $A.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var index = 0; index<anchors.length; index++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    anchor = anchors[index];       
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    anchorId = $A.util.getElementAttributeValue(anchor, "id");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    // Temporary fix for ckeditor. current issue is that ckeditor set "=" which causes innerText to not return the correct value
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    // Work-around will be temporary and should be removed when ckeditor is updated.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    // Bug to track removal: W-1979552
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if($A.util.isEmpty(anchorId) || anchorId.indexOf("cke_") !== 0 ){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         //Text should not be undefined or null at any point since $A.test.getText will always return something
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         text = $A.util.getText(anchor).replace(/[\s\t\r\n]/g,'');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         if(text === "" && accessAideFuncs.anchrDoesNotHaveImgWithAlt(anchor)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                              errArray.push(anchor);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return errArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Method grabs everything from the given array and finds all tags that are erroneous
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @param   inputTags - radio and checkbox inputs
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns array     - Array of all errors that have been found 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             radioButtonAide : function(inputTags){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var inputTag = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var inputType = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var rcName = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var dict = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var tmpArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 for(var i =0; i<inputTags.length; i++){ 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    inputTag = inputTags[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    inputType = $A.util.getElementAttributeValue(inputTag, 'type').toLowerCase();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    if(inputType === "radio" || inputType === "checkbox"){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        rcName = $A.util.getElementAttributeValue(inputTag, 'name');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if($A.util.isEmpty(rcName)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if(!(rcName in dict) ){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            dict[""+rcName] = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        dict[rcName].push(inputTag);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(rcName in dict){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    tmpArray = dict[rcName];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        if(tmpArray.length >= 2){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            for(var index = 0; index<tmpArray.length; index++){ 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                if(!accessAideFuncs.checkParentMatchesTag(tmpArray[index], "FIELDSET")){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                    errorArray.push(tmpArray[index]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:              * Method that takes in a list of buttons and makes sure that they all have some text associated with them in the labels
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:              * @param   buttons     - All buttons that are on the page
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:              * @returns Array    - Array of all the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:              buttonLabelAide : function(buttons){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var button = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var buttonImage = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  var testText = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  for(var i = 0; i<buttons.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                          buttonImage = button.getElementsByTagName("img");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                          if(buttonImage.length === 0){                         
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             testText = $A.util.getText(button).replace(/[\s\t\r\n]/g, '');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 errorArray.push(button);  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  return errorArray;               
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                * Method that goes through all tables present on the page and makes sure the tags underneath them have either an id or scope associated with them
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                * @param   tables        - The tags to find 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                * @param   tableErrorMsg - The error message to show when errors are found
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                * @returns Array         - The error array
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                checkTables : function(tables, tableErrorMsg){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var headerDict = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var ths = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var scopeVal = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var idVals = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var i = 0, j = 0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var skipTDCheck = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var validScopes = {'row': false, 'col': false, 'rowgroup': false, 'colgroup' : false};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    for(var index = 0; index<tables.length; index++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        ths = tables[index].getElementsByTagName("th");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        //Reset Variables
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        headerDict = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        allThsHaveScope = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        skipTDCheck = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         //If we have no headers, tds wont be a problem
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         //Phase 1:  If all <th> within a <table> contain scope attribute and scope attribute value is one of col, row, colgroup, rowgroup, then pass test. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             //Grab scope
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             scopeVal = $A.util.getElementAttributeValue(ths[i], "scope");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             idVals = $A.util.getElementAttributeValue(ths[i], "id");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             if(!$A.util.isEmpty(scopeVal)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 if(!(scopeVal in validScopes) || $A.util.trim(scopeVal) === ""){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                    errorArray.push(ths[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             else if(!$A.util.isEmpty(idVals)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 headerDict[idVals] = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                 errorArray.push(ths[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         //If we have already found an error with the THS (either they don't have an ID or they don't have a scope) skip the rest
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         if(!$A.util.isEmpty(errorArray) || skipTDCheck){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         //Phase 2: If all <th> within a <table> contain "id" and all <td> contain "headers" attribute, and each id listed in header attribute matches id attribute of a <th>, then pass test.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         tds = tables[index].getElementsByTagName("td");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             idVals = $A.util.getElementAttributeValue(tds[i], "headers");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             if($A.util.isEmpty(idVals)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                errorArray.push(tds[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             idVals = $A.util.trim(idVals).split(/\s+/);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             for(j = 0; j<idVals.length; j++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                if(!(idVals[j] in headerDict)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                   errorArray.push(tds[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                   break;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * Method that takes in a list of h#, the tag that show follow directly after, and all possible items that can be found.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * It will start start searching through siblings of h# to find invalid-nested tags and return an error array with them if found
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * @param   tags     - Array of all h# tags to look at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * @param   nextTag  - String representation of the very next tag that we should see. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  *             i.e. if tags contains all h1 tags, nextTag should be "h2"
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * @param   allHdrs  - Dictionary of all possible h# we can see.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  *                i.e. if tags is a list of all h1 tags in the document, then allHdrs will be a dictionary
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                  * @returns Array    - Array of all the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                 findNextHeader : function(tags, nextTag, allHdrs){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var children = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var child = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var currTag;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var startLooking = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     for(var index = 0; index< tags.length; index++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        children = tags[index].parentNode.children;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        currTag = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        startLooking = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                        for(var childIndex = 0; childIndex < children.length; childIndex++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if(tags[index] === child){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                               startLooking = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            if(startLooking){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                currTag = child.tagName.toLowerCase();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                if(currTag in allHdrs){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                    if(currTag !== nextTag){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                        errorArray.push(child);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                                    break;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return errorArray;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that all images have an alt attribute present
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkImagesHaveAlts : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         	    "tag"  : "A11Y_DOM_01", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            	    var imgError = "[A11Y_DOM_01] All image tags require the presence of the alt attribute.\n  More info http://sfdc.co/a11y_dom_01";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            	    var allImgTags = domElem.getElementsByTagName("img");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:           		    return ruau.devToolService.accessbilityAide.findAllImgTags(allImgTags, imgError);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure all inputs have an associated label
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkInputsHaveLabel : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_02", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var inputLabelMsg   = "[A11Y_DOM_02] Labels are required for all input controls.\n  More info http://sfdc.co/a11y_dom_02";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var inputTextTags   = domElem.getElementsByTagName('input');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var textAreaTags    = domElem.getElementsByTagName('textarea');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var selectTags      = domElem.getElementsByTagName('select');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var lbls = domElem.getElementsByTagName("LABEL");  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errorArray = errorArray.concat(accessAideFuncs.inputLabelAide(lbls, inputTextTags));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errorArray = errorArray.concat(accessAideFuncs.inputLabelAide(lbls, textAreaTags));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errorArray = errorArray.concat(accessAideFuncs.inputLabelAide(lbls, selectTags));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(inputLabelMsg, errorArray);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure all buttons have non empty label
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkButtonHaveLabel : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_03", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var buttonLabelErrorMsg = "[A11Y_DOM_03] Buttons must have non-empty text labels.\n  More info http://sfdc.co/a11y_dom_03";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var buttonTags = domElem.getElementsByTagName('button');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    return accessAideFuncs.formatOutput(buttonLabelErrorMsg, accessAideFuncs.buttonLabelAide(buttonTags));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that all anchors have text associated with them
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkAnchorHasText : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	    "tag"  : "A11Y_DOM_04", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var anchorErrMsg = "[A11Y_DOM_04] Links must have non-empty text content.\n  More info http://sfdc.co/a11y_dom_04";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var accessAideFuncs = $A.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    var anchors = domElem.getElementsByTagName("a");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    return accessAideFuncs.formatOutput(anchorErrMsg, accessAideFuncs.checkAnchorHasInnerText(anchors));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that all iframes have a non empty title associated with them
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkIframeHasTitle : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:          	    "tag" : "A11Y_DOM_06", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var iFrameTitleMsg = "[A11Y_DOM_06] Each frame and iframe element must have a non-empty title attribute.\n  More info http://sfdc.co/a11y_dom_06";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var iframes = domElem.getElementsByTagName("iframe");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var id = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var src = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var frame = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var iframeArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     for(var i = 0; i<iframes.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         frame = iframes[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         id  = $A.util.getElementAttributeValue(frame, "id");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         src = $A.util.getElementAttributeValue(frame, "src"); 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         if((!$A.util.isUndefinedOrNull(src) && src.indexOf("/apex/") !== -1) ||
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                            (!$A.util.isUndefinedOrNull(id) && id.toLowerCase().indexOf("vfframeid") !== -1)){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         iframeArray.push(frame);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    return accessAideFuncs.formatOutput(iFrameTitleMsg,accessAideFuncs.checkForAttrib(iframeArray, "title", "", accessAideFuncs.doesContain));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure the head element is set correctly
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkCorrectHeaderOrder : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        	    "tag"  : "A11Y_DOM_07", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdErrMsg = "[A11Y_DOM_07] The head section must have a non-empty title element.\n  More info http://sfdc.co/a11y_dom_07";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = $A.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hd = domElem.getElementsByTagName("head")[0];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(hdErrMsg, accessAideFuncs.checkHeadHasCorrectTitle(hdErrMsg, hd));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that table cells have scope in them, and that they are equal to row, col, rowgroup, colgroup
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkTableCellsHaveScope : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_08", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var tableErrorMsg = "[A11Y_DOM_08] Data table cells must be associated with data table headers.\n  More info http://sfdc.co/a11y_dom_08";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var tables = domElem.getElementsByTagName("table");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(tableErrorMsg, accessAideFuncs.checkTables(tables, tableErrorMsg));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that all fieldset tags do not have the display:none field set and makes sure that each one has a legend
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_09",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var fieldsetLegnedMsg = "[A11Y_DOM_09] Fieldset must have a legend element.\n  More info http://sfdc.co/a11y_dom_09";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var fieldSets = domElem.getElementsByTagName('fieldset');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var legends = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var fieldSetSytle  = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     for(var i=0; i<fieldSets.length; i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         legends = fieldSets[i].getElementsByTagName('legend');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                         fieldSetSytle = fieldSets[i].style.display;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                             errorArray.push(fieldSets[i]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(fieldsetLegnedMsg, errorArray);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that all radio and checkboxes are grouped within a fieldset
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkRadioGrouping : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_10",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var radioButtonFieldSetMsg = "[A11Y_DOM_10] Headings should be properly nested.\n  More info http://sfdc.co/a11y_dom_10";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var inputTags = domElem.getElementsByTagName('input');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(radioButtonFieldSetMsg, accessAideFuncs.radioButtonAide(inputTags));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Checking to make sure that all nested Headers have a single level of difference
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkNestedHeader : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_11",  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var headerErrMsg = "[A11Y_DOM_11] Headings should be properly nested.\n  More info http://sfdc.co/a11y_dom_11";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errArray = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = $A.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdrs1 = domElem.getElementsByTagName("h1");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdrs2 = domElem.getElementsByTagName("h2");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdrs3 = domElem.getElementsByTagName("h3");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdrs4 = domElem.getElementsByTagName("h4");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var hdrs5 = domElem.getElementsByTagName("h5");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errArray = errArray.concat(accessAideFuncs.findNextHeader(hdrs1, "h2", {"h2":"", "h3":"", "h4":"", "h5":"", "h6":""}));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errArray = errArray.concat(accessAideFuncs.findNextHeader(hdrs2, "h3", {"h3":"", "h4":"", "h5":"", "h6":""}));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errArray = errArray.concat(accessAideFuncs.findNextHeader(hdrs3, "h4", {"h4":"", "h5":"", "h6":""}));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errArray = errArray.concat(accessAideFuncs.findNextHeader(hdrs4, "h5", {"h5":"", "h6":""}));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     errArray = errArray.concat(accessAideFuncs.findNextHeader(hdrs5, "h6", {"h6":""}));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(headerErrMsg, errArray);              
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Test that will verify that all top level panels have the correct aria associated with them
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkTopLevelPanels : {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_12", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorMsg = "[A11Y_DOM_12] Base and top panels should have proper aria-hidden properties.\n  More info http://sfdc.co/a11y_dom_12";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var modalOverlay = "div.uiPanelDialog";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var panelOverlay = "div.forcePanelOverlay";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var panelSlide   = "section.stage.panelSlide";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     //Get all panels
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var panels = accessAideFuncs.nodeListToArray([domElem.querySelectorAll(modalOverlay), domElem.querySelectorAll(panelOverlay), domElem.querySelectorAll(panelSlide)]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var topPanelsCount = domElem.querySelectorAll(modalOverlay+".active").length + domElem.querySelectorAll(panelOverlay+".active").length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorArray = accessAideFuncs.findTopLevelErrors(panels, topPanelsCount);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(errorMsg, errorArray);                  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * Check making sure that if an inputDefaultError exists on the page, that there is a corresponding input associated with it
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:             * @returns String - Returns a string representation of the errors
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            checkInputdefaultErrorLinkage : { 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                "tag"  : "A11Y_DOM_13", 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var accessAideFuncs = ruau.devToolService.accessbilityAide;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var inputErrorMsg = "[A11Y_DOM_13] Aria-describedby must be used to associate error message with input control.\n  More info http://sfdc.co/a11y_dom_13";                    
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     var errorArray = accessAideFuncs.inputDefaultErrorAide(domElem.getElementsByTagName("ul"), domElem.getElementsByTagName("input"), domElem.getElementsByTagName("select"), domElem.getElementsByTagName("textarea"));                   
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                     return accessAideFuncs.formatOutput(inputErrorMsg, errorArray);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * Calls all functions in VerifyAccessibility and stores the result in a string
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * @param domElem     - element to start at. Can be null or a dom element
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * @param checksToSkip - Array of function names to run. Defaults to run all.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:         * @returns String    - Returns a a concatenated string representation of all errors or the empty string
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var functions = ruau.devToolService.verifyAccessibility;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var result = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var funcObject = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            //Checking if user of the tool wants to start at a specific element or not
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            //Checking if there are a set of tests that we want to be run or not
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            //Run all tests that are applicable
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var funcLabel in functions){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:               funcObject = functions[funcLabel];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:               if(checksToRun.indexOf(funcObject["tag"]) !== -1){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            ret.push("\n COQL Usage");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var txt = this.helpText;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var i=0;i<txt.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var item = txt[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            title : 'Query all components',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : '$A.getQueryStatement().query()',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : '"component" is the default view, and "*" is the default field'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            title : 'Choose a view to query',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : '$A.getQueryStatement().from("componentDef").query()',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : 'Available views are : '+function(views){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                var ret = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                for(var i in views){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : '$A.getQueryStatement().from("component").field("toString").field("globalId").fields("def, super").query()',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : 'Any property or method on the view, any expression that can be resolved against the view may be specified. "get" and "is" are also tried as prefixes for resolving function names.  Multiple fields can be comma separated or multiple calls to field() can be used.'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : '$A.getQueryStatement().from("value").field("toString").groupBy("toString").query()',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : 'The value of groupBy must be a selected field.  Note : The "value" view is only visible in stats mode.'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : '$A.getQueryStatement().from("component").field("descriptor", "getDef().getDescriptor().toString()").query()',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : 'You can create a derived field, such as getDef().getDescriptor().toString(), and refer to it as a real field called "descriptor" .'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            title : 'Diff the results of running a query twice',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            code : 'var before = $A.getQueryStatement().query(); var after = $A.getQueryStatement().query(); after.diff(before);',
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            description : 'This is useful if you want to do something between running the before and after query.  Any options for queries can be used (fields, groupBy, etc...)'
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.query = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var ret = s.select(this.criteria);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        ret._priv["statement"] = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var origFromRawRows = from._priv["rawRows"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var fromRawRows = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var k;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        for(k=0;k<origFromRawRows.length;k++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            fromRawRows[k] = origFromRawRows[k];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var origFromRows = from["rows"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var fromRows = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var toRawRows = this._priv["rawRows"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var toRows = this["rows"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var added = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var addedRaw = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var existing = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var existingRaw = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        for(var i=0;i<toRawRows.length;i++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var rawRow = toRawRows[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var row = toRows[i];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var fromRawRow = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            for(var j=0;fromRawRow === null && j<fromRows.length;j++){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                fromRawRow = fromRawRows[j];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                if(rawRow !== fromRawRow){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    fromRawRow = null;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                    fromRawRows.splice(j,1);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            if(fromRawRow !== null){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                existingRaw.push(rawRow);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                added.push(row);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                addedRaw.push(rawRow);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var groupBy = this._priv["statement"].criteria["groupBy"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        var ret = new ResultSet({
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "added" : s.applyGroupBy(groupBy, added, addedRaw),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "existing" : s.applyGroupBy(groupBy, existing, existingRaw),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "removed" : s.applyGroupBy(groupBy, fromRows, fromRawRows)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            "statement" : this._priv["statement"]
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.from = function(from){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        this.criteria["from"] = from;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.field = function(field, func){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var derivedFields = this.criteria["derivedFields"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:                this.criteria["derivedFields"] = derivedFields;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            var fields = this.criteria["fields"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:            this.criteria["fields"] = fields;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.fields = Statement.prototype.field;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.where = function(func){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        this.criteria["where"] = func;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    Statement.prototype.groupBy = function(col){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:        this.criteria["groupBy"] = col;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    s.defaultView = s["views"]["component"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    s.defaultFields = "*";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    s.defaultDerivedFields = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    s.defaultFilter = s["filters"]["noop"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    s.defaultGroupBy = undefined;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueDevToolService.js:    //#include ruau.RuueDevToolService_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js: * @description The Ruue Serialization Service.  Serializes and Deserializes Ruue Entities appropriately.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:var RuueSerializationService = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:    //#include ruau.RuueSerializationService_private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:        readComponent : function(config){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            $A.Perf.mark("resolvedRefs");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            $A.Perf.mark("constructedComponent");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            config = ruau.util.json.resolveRefs(config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            $A.Perf.endMark("resolvedRefs");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            var ret = $A.componentService.newComponentDeprecated(config, null, false, true);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueSerializationService.js:            $A.Perf.endMark("constructedComponent");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js:var priv = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js:    eventDispatcher : {},
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js:    qualifyEventName : function(event) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueEventService_private.js:            event = "markup://"+event;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:var priv = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:    push : function(layout, params, title){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            layout : layout,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            params : params,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:    peekLast : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:    clear : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var cur = this.pop();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            // it was overridden manually, use that
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            var title = valueFactory.create(historyItem.layout.getTitle(),null,this.cmp);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            if (ruau.util.isExpression(title)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:                title = title.evaluate();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:    fireLayoutChangeEvent : function(pre){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var curr = this.peek();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var prev = this.peekLast();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var title = this.getTitle(curr);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var params = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            "layoutName" : curr.layout.getName(),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            params["prevTitle"] = this.getTitle(prev);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            params["prevLayoutName"] = prev.layout.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var evt = pre?$A.get("e.ruau:beforeLayoutChange"):$A.get("e.ruau:layoutChange");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        evt.setParams(params);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        this.fireOnload();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:    fireOnload : function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        var frame = window.frameElement;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:        if (frame && document.createEvent) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            var loadEvent = document.createEvent('HTMLEvents');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            loadEvent.initEvent("load", true, true); // event type,bubbling,cancelable
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueLayoutService_private.js:            frame.dispatchEvent(loadEvent);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @description The Ruue History Service, accessible using $A.historyService. Manages Browser History.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Internet Explorer 7 and 8 are not supported for this service.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    this.history = [];       // tracks url hashes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    this.currentIndex = -1;  // pointer to current hash within history
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Sets the new location. For example, <code>$A.services.history.set("search")</code> sets the location to <code>#search</code>.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Otherwise, use <code>$A.services.layout.changeLocation()</code> to override existing URL parameters.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Native Android browser doesn't completely support pushState so we force hash method for it
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * IOS7 UIWebView also has weirdness when using appcache and history so force onhashchange as well
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @param {Object} token The provided token set to the current location hash
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @memberOf RuueHistoryService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.set = function(token) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // Check for HTML5 window.history.pushState support
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        if (this.usePushState()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // Need to pass in the token to the state as
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // windows phone doesn't persist the hash
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // after using the back button.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window.history.pushState({"hash":token}, null, '#' + token);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            this.changeHandler();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                var historyLength = this.history.length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                    // remove forward entries if we moved back and new location is set
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window.location.hash = "#" + token;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Parses the location. A token can be used here.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * <p>Example:</p> 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * <code>token == "newLayout";<br /> $A.historyService.get().token;</code>
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @memberOf RuueHistoryService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.get = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    // Windows phone doesn't save the hash after navigating backwards. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    // So get it from the history state. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    var token = location["hash"] || (window.history["state"] && window.history["state"]["hash"]) || "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    return this.parseLocation(token);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Loads the previous URL in the history list. Standard JavaScript <code>history.go()</code> method.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @memberOf RuueHistoryService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.back = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        //history -> Standard javascript object
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // IOS7 UIWebView has issues with appcache and history so
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // keep track of history ourselves and change hash instead
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // move pointer and get previous hash location
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            var hash = this.history[--this.currentIndex];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window.location.hash = "#" + hash;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // in case pointer has moved passed all history then reset to push new history
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window.location.hash = "";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @param {String} title The new title
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @memberOf RuueHistoryService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.setTitle = function(title) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Loads the next URL in the history list. Standard JavaScript <code>history.go()</code> method.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @memberOf RuueHistoryService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.forward = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        //history -> Standard javascript object
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // IOS7 UIWebView has issues with appcache and history so
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // keep track of history ourselves and change hash instead
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var historyLength = this.history.length;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // if there's forward history, go forward one
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window.location.hash = "#" + this.history[++this.currentIndex];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.reset = function () {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Whether to use pushState.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * Native Android browser has issues with pushState
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * IOS7 UIWebView has issues with pushState and history
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @returns {boolean} true if pushState should be used
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.usePushState = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    if (this._usePushState === undefined) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var ua = window.navigator.userAgent;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        this._usePushState =
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // browser has pushState
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            !!window.history.pushState &&
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // NOT native Android browser
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            !(ua.indexOf("Android ") > -1 && ua.indexOf("Mozilla/5.0") > -1 && ua.indexOf("AppleWebKit") > -1 && ua.indexOf("Chrome") == -1) &&
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            // NOT IOS7 UIWebView (native app webview)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    return this._usePushState;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.init = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    // Check for HTML5 window.history.pushState support
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    if (this.usePushState()) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        window.addEventListener("popstate", function(e) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            that.changeHandler();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var hash = location["hash"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        this.history.push(hash);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // Checks for existence of event, and also ie8 in ie7 mode (misreports existence)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var docMode = document["documentMode"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var hasOnHashChangeEvent = 'onhashchange' in window && (docMode === undefined || docMode > 7);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        if (hasOnHashChangeEvent) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            window["onhashchange"] = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                that.changeHandler();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            var watch = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                    var newHash = location["hash"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                    if (newHash !== hash) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                        hash = newHash;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                        that.changeHandler();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                    watch();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            watch();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    this.changeHandler();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.getEvent = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        this.evt = $A.getRoot().getDef().getLocationChangeEvent();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.changeHandler = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    var loc = location["hash"] || (history["state"] && history["state"]["hash"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    var event = eventService.newEvent(this.getEvent());
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        throw new Error("The event specified on the app for the locationChange (" + this.getEvent() + ") was not found.");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // Its possible that more querystring parameters where specified in the hash
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        // then are defined on the event. In this case do specify them as parameters
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var parsedHash = this.parseLocation(loc);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var parameters = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var attributes = event.getDef().getAttributeDefs();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        for(var attribute in attributes) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            if(attributes["hasOwnProperty"](attribute) && parsedHash["hasOwnProperty"](attribute)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:                parameters[attribute] = parsedHash[attribute];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        event.setParams(parameters);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:$A.ns.RuueHistoryService.prototype.parseLocation = function(location) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    if (location["indexOf"]("#") === 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        location = location["substring"](1);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:    if (location["indexOf"]('=') > -1) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        var split = location["split"]('?');
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:            var ret = $A.util.urlDecode(split[1]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        throw new Error("Invalid location");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js:        return {"token" : location, "querystring": "" };
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueHistoryService.js://#include ruau.RuueHistoryService_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js:    "afterRender", renderingService.afterRender,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js:    "renderFacet", renderingService.renderFacet,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js:    "rerenderFacet", renderingService.rerenderFacet,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js:    "unrenderFacet", renderingService.unrenderFacet,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/RuueRenderingService_export.js:    "getMarker", renderingService.getMarker
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:exp(storageService,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:    "getStorage", storageService.getStorage,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:    "initStorage", storageService.initStorage,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:    "registerAdapter", storageService.registerAdapter
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:        ,"createAdapter", storageService.createAdapter 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService_export.js:        , "selectAdapter", storageService.selectAdapter
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @description The storage service implementation
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {Object} config The configuration describing the characteristics of the storage to be created.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:var RuueStorage = function RuueStorage(config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter = config["adapter"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.maxSize = config["maxSize"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.defaultExpiration = config["defaultExpiration"] * 1000;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.defaultAutoRefreshInterval = config["defaultAutoRefreshInterval"] * 1000;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.debugLoggingEnabled = config["debugLoggingEnabled"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var clearStorageOnInit = config["clearStorageOnInit"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	this.log("RuueStorage:ctor() initializing storage adapter using { name: \"" + config["name"] + "\", implementation: \""
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:			+ this.adapter.getName() + "\", maxSize: " + this.maxSize + ", defaultExpiration: " + this.defaultExpiration
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:			+ ", defaultAutoRefreshInterval: " + this.defaultAutoRefreshInterval + ", clearStorageOnInit: " + clearStorageOnInit + ", debugLoggingEnabled: " + this.debugLoggingEnabled + " }");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    if (clearStorageOnInit === true) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    	this.log("RuueStorage.ctor(): clearing " + this.getName() + " storage on init");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    	this.adapter.clear();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    // work around the obfuscation logic to allow external Adapters to properly plug in
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.clear = this.adapter.clear || this.adapter["clear"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.getExpired = this.adapter.getExpired || this.adapter["getExpired"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.getItem = this.adapter.getItem || this.adapter["getItem"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.getName = this.adapter.getName || this.adapter["getName"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.getSize = this.adapter.getSize || this.adapter["getSize"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.removeItem = this.adapter.removeItem || this.adapter["removeItem"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    this.adapter.setItem = this.adapter.setItem || this.adapter["setItem"];  
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    	this.adapter["getItem"] = this.adapter.getItem;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    	this["adapter"] = this.adapter;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Returns the name of the storage type. For example, "smartStore", "websql", or "memory".
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @returns {String} The storage type.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.getName = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	return this.adapter.getName();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Asynchronously gets the current storage size in KB.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @returns {Promise} A Promise that will get the current storage size in KB.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.getSize = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	return this.adapter.getSize()
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Returns the maximum storage size in KB. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @returns {number} The maximum storage size in KB.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.getMaxSize = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	return this.maxSize / 1024.0;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Returns the default auto-refresh interval in seconds. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @returns {number} The default auto-refresh interval.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.getDefaultAutoRefreshInterval = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	return this.defaultAutoRefreshInterval;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Returns a promise that clears the storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @return {Promise} A Promise that will clear storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.clear = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	return this.adapter.clear();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Asynchronously gets an item from storage corresponding to the specified key.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {String} key The item key. This is the key used when the item was added to storage using put().
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @returns {Promise} A Promise that will fetch an item from storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.get = function(key) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    // This needs to also be asynchronous to map to IndexedDB, WebSQL, SmartStore that are all async worlds
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var promise = this.sweep().then(function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        return that.adapter.getItem(key).then(function(item) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            that.log("RuueStorage.get(): using action found in " + that.getName() + " storage", [key, item]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            return { value : item.value, isExpired : (new Date().getTime() > item.expires) };
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Asynchronously stores the value in storage using the specified key.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {String} key The key of the item to store. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {Object} value The value of the item to store.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @return {Promise} A Promise that will put the value in storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.put = function(key, value) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var now = new Date().getTime();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var item = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        "value": value,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        "created": now,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        "expires": now + this.defaultExpiration
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var promise = this.sweep().then(function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        return that.adapter.setItem(key, item)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                that.log("RuueStorage.put(): persisting action to " + that.getName() + " storage", [key, item]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                $A.storageService.fireModified();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @description Asynchronously removes the item indicated by key.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {String} key The key of the item to remove.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @param {Boolean} doNotFireModified A bool indicating whether or not to fire the modified event on item removal.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @return {Promise} A Promise that will remove the item from storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.remove = function(key, doNotFireModified) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var promise = this.adapter.removeItem(key)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                $A.storageService.fireModified();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @description Asynchronously removes all expired items.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @return{Promise} A Promise that will execute sweep.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.sweep = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:    var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        // Do not sweep if we have lost our connection - we'll
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        // ignore expiration until sweeping resumes
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        if (that._sweepingSuspended) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        // Check simple expirations
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        return that.adapter.getExpired().then(function (expired) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            var promiseSet = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            var key;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            for (var n = 0; n < expired.length; n++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                that.log("RuueStorage.sweep(): expiring action from " + that.getName() + " storage adapter", key);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                promiseSet.push(that.remove(key, true));
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            // When all of the remove promises have completed...
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:            Promise.all(promiseSet).then(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                    $A.storageService.fireModified();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:                    that.log("Error while RuueStorage.sweep was removing items: " + err);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Suspends sweeping. The storage adapter is removed if it is expired but sweeping can be suspended if the
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.suspendSweeping = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	this.log("RuueStorage.suspendSweeping()");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * Resumes sweeping to remove expired storage adapters.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @return{Promise} A Promise that will execute sweep.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.resumeSweeping = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	this.log("RuueStorage.resumeSweeping()");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	this._sweepingSuspended = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js: * @private
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:RuueStorage.prototype.log = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:	if (this.debugLoggingEnabled) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js:        var msg = Array.prototype.join.call(arguments, " ");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/Storage.js://#include ruau.storage.Storage_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js: * @description The Ruue Storage Service, accessible using $A.storageService. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:var RuueStorageService = function(){
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:	var storages = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:	var adapters = {};
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:    var storageService = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:    * Returns an existing storage using the specified name. For example, <code>$A.storageService.getStorage("MyStorage").getSize()</code> returns the cache size.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:    * <p>See Also: <a href="#reference?topic=api:RuueStorage">RuueStorage</a></p>
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:	* @param {String} name The name of the requested storage. 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:	* @memberOf RuueStorageService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:	* @returns {RuueStorage} Returns an RuueStorage object corresponding to an existing storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        getStorage : function(name) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	return storages[name];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * Initializes and returns new storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {String} name Required. The unique name of the storage to be initialized.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} persistent Set to true if the requested storage is persistent.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} secure Set to true if the requested storage is secure.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {number} maxSize Specifies the maximum storage size in bytes.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {number} defaultExpiration Specifies the default time in seconds after which the cache expires. When an item is requested that has gone past the default cache expiration time, it will not be used.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {number} defaultAutoRefreshInterval Specifies the default interval in seconds after which cached data is to be refreshed.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} debugLoggingEnabled Set to true to enable debug logging in the JavaScript console for the Ruue Storage Service.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} clearStorageOnInit Set to true to clear storage when storage is initialized.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @memberOf RuueStorageService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @returns {RuueStorage} Returns an RuueStorage object for the new storage.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        initStorage : function(name, persistent, secure, maxSize, defaultExpiration, defaultAutoRefreshInterval, debugLoggingEnabled, clearStorageOnInit) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	if (storages[name]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		$A.error("Storage named '" + name + "' already exists!");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var adapter = this.createAdapter(this.selectAdapter(persistent, secure), name, maxSize, debugLoggingEnabled);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var config = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"name": name,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"adapter": adapter,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"maxSize": maxSize, 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"defaultExpiration": defaultExpiration, 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"defaultAutoRefreshInterval": defaultAutoRefreshInterval, 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"debugLoggingEnabled": debugLoggingEnabled, 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"clearStorageOnInit": clearStorageOnInit
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var storage = new RuueStorage(config);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	storages[name] = storage;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	return storage;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        registerAdapter : function(config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var name = config["name"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	if (adapters[name]) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		$A.error("StorageService.registerAdapter() adapter '" + name + "' already registered!");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	adapters[name] = config;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        getAdapterConfig : function(adapter) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	return adapters[adapter];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * Creates a storage adapter. Used mostly in non-production modes.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * <p>Example:</p>
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * <code>$A.storageService.createAdapter("memory", "test", 4096, true);</code>
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {String} adapter The new adapter to create.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {String} name The name of the adapter.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Integer} maxSize The maximum size in bytes to allocate to the storage adapter.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} debugLoggingEnabled Set to true to enable logging, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @memberOf RuueStorageService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        createAdapter : function(adapter, name, maxSize, debugLoggingEnabled) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var config = adapters[adapter];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		$A.error("StorageService.createAdapter() unknown adapter '" + implementation + "'!");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var AdapterClass = config["adapterClass"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var adapterConfig = {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"name": name,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"maxSize": maxSize,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		"debugLoggingEnabled": debugLoggingEnabled
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	return new AdapterClass(adapterConfig);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var e = $A.get("e.ruauStorage:modified");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * Selects an adapter based on the given configuration. Used mostly in non-production modes.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} persistent Set to true if the adapter should be persistent, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @param {Boolean} secure Set to true if the adapter should be secure, or false otherwise.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:         * @memberOf RuueStorageService
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        selectAdapter : function(persistent, secure) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	// Find the best match for the specific implementation based on the requested configuration 
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var candidates = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	for (var name in adapters) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		var adapter = adapters[name];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:            	// If secure is required then find all secure adapters otherwise use any adapter
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		if (!secure || adapter["secure"] === true) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        			candidates.push(adapter);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	if (candidates.length === 0) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		$A.error("StorageService.selectAdapter() unable to find a secure adapter implementation!");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	// Now take the set of candidates and weed out any non-persistent if persistence is requested (not required)
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	var match;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	for (var n = 0; !match && n < candidates.length; n++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		var candidate = candidates[n];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		var candidateIsPersistent = candidate["persistent"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		if ((persistent && candidateIsPersistent === true) || (!persistent && !candidateIsPersistent)) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        			match = candidate;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	if (!match) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        		match = candidates[0];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        	return match["name"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        ,"storages" : storages
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:        ,"adapters" : adapters
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:    //#include ruau.storage.RuueStorageService_export
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/RuueStorageService.js:    return storageService;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * you may not use this file except in compliance with the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * You may obtain a copy of the License at
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * See the License for the specific language governing permissions and
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * limitations under the License.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js: * @description The WebSQL adapter for storage service implementation
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:var WebSQLStorageAdapter = function WebSQLStorageAdapter(config) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    this.createSchemaInProgress = false;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    this.createSchemaSuccessCallbacks = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    this.createSchemaErrorCallbacks = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var instanceName = "AIS:" + config["name"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	this.db = openDatabase(instanceName, "1.0", instanceName + " database", 50 * 1024 * 1024);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	this.createSchema();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.NAME = "websql";
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.getName = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	return WebSQLStorageAdapter.NAME;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.getSize = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        success(that.size);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.getItem = function(key) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.db.readTransaction(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    "SELECT value, created, expires FROM cache WHERE key = ?;",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        var rows = results.rows;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        var item;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            var row = rows.item(0);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                                "value": $A.util["json"].decode(row["value"]),
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                                "created": row["created"],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    function(transaction, errorMsg) { error(errorMsg); });
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.setItem = function(key, item) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.db.transaction(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    "DELETE FROM cache WHERE key = ?;",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        var value = $A.util["json"].encode(item["value"]);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            "INSERT INTO cache (key, value, created, expires, size) VALUES (?, ?, ?, ?, ?);",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            [key, value, item["created"], item["expires"], value.length],
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            function() { that.updateSize(success); },
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            function(transaction, errorMsg) { error(errorMsg); });
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.removeItem = function(key) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.db.transaction(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    "DELETE FROM cache WHERE key = ?;",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    function() { that.updateSize(success); },
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    function(transaction, errorMsg) { error(errorMsg); });
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.clear = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.createSchema(success, error);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.getExpired = function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var promise = new Promise(function(success, error) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.db.readTransaction(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                var now = new Date().getTime();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    "SELECT key FROM cache WHERE expires < ?;",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        var rows = results.rows;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        var expired = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        for (var n = 0; n < rows.length; n++) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                            var row = rows.item(n);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    function(transaction, errorMsg) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        if (errorMsg.message.indexOf("no such table: cache") > -1) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:// Internals
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.updateSize = function(sizeUpdatedCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	// Prime the this.size pump with a SELECT SUM() query
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:	this.db.transaction(
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                "SELECT SUM(size) AS totalSize FROM cache;",
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    var rows = results.rows;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    that.size = rows.item(0)["totalSize"];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    if (sizeUpdatedCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                        sizeUpdatedCallback();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    $A.storageService.fireModified();
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:                    throw new Error("WebSQLStorageAdapter.updateSize() failed: " + error.message);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:WebSQLStorageAdapter.prototype.createSchema = function(successCallback, errorCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    var that = this;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    // Schema creation is asynchronous and multiple calls to it can occur before the first call completes.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    // Use the success/failure of any active call to satisfy any other calls.
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    if (successCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.createSchemaSuccessCallbacks.push(successCallback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    if (errorCallback) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.createSchemaErrorCallbacks.push(errorCallback);
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:    if (that.createSchemaInProgress) {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.createSchemaInProgress = true;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:        that.updateSize(function() {
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:            var successCallbacks = that.createSchemaSuccessCallbacks;
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:            that.createSchemaSuccessCallbacks = [];
ruau/ruau-impl/SouRCeS/nAmE/resources/ruau/storage/adapters/WebSQLAdapter.js:            that.createSchemaErrorCallbacks = [];
