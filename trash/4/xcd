ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputPackageName=org.ruauframework.Ruue
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputClassName=RuueId
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputFile=/home/eric.anderson/genfile.java
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: * example command-line execution for test bundles:
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: * mvn org.ruauframework:ruau-util:enum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *   DbaseScanDirectory=/home/eric.anderson/ruau/ruau
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DscanDirectoryList=ruau/src/test
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputPackageName=org.ruauframework.Ruue
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputClassName=RuueTestId
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: *    -DoutputFile=/home/eric.anderson/genfile.java
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: * Goal which touches creates enum reference classes for all identified ruau bundles
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: * @goal enum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java: * @phase generate-sources
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:public class EnumMojo
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    extends AbstractMojo
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * baseScanDirectory:
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * The base directory for scanned files.  all root dirs must be relative to this.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * If this dir is relative, it will start at the pom files's location
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * @parameter property="baseScanDirectory"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    private File baseScanDirectory;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * scanDirectoryList:
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * String list of target root directories, relative to baseScanDirectory.  
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * If the path starts with a directory separator, we will assume it is absolute.  
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * Else it will be relative to baseScanDirectory 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * <scanDirectoryList>
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     *   <param>reldir/fred</param>
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     *   <param>/absdir/bob</param>
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * </scanDirectoryList>
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * @parameter property="scanDirectoryList"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    private String[] scanDirectoryList;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * outputPackageName:
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * The generated java file's package
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * @parameter property="outputPackageName"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    private String outputPackageName;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * outputClassName:
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * The generated java file's class
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * @parameter property="outputClassName"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    private String outputClassName;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * The generated enum file is output to this file.  If the file name is relative, 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * it will be relative to the pom file location
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:     * @parameter property="outputFile"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:    private File outputFile;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        Path baseScanDirPath = Paths.get(baseScanDirectory.getAbsolutePath());
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        getLog().info( "Enum generator baseScanDirectory is:" + baseScanDirPath.toString() );
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        for (int i = 0; i<scanDirectoryList.length; i++) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:            // append baseDir if not absolute
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:            if (!scanDirectoryList[i].startsWith(File.separator)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:                scanDirectoryList[i]=baseScanDirPath.toString() + File.separator + scanDirectoryList[i];
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:            getLog().info( "  dir:" + scanDirectoryList[i] );
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        getLog().info( "Generating the file:" + outputFile.toString() );
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:            FileWalk.MakeEnums(outputFile.getAbsolutePath().toString(), 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:                    outputPackageName, 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:                    outputClassName,  
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:                    scanDirectoryList);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        } catch(Exception ex) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:            throw new MojoExecutionException( "Error creating file " + outputFile.toString(), ex );
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/EnumMojo.java:        getLog().info( "Successfully created:" + outputFile.toString() );
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * You may obtain a copy of the License at
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * See the License for the specific language governing permissions and
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * limitations under the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:package org.ruauframework.util.maven;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.io.BufferedWriter;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.io.File;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.io.FileReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.io.FileWriter;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.io.IOException;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.FileVisitResult;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.FileVisitor;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.Files;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.Path;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.Paths;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.nio.file.attribute.BasicFileAttributes;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.util.ArrayList;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.util.Arrays;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.util.TreeMap;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import java.util.TreeSet;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import javax.xml.stream.XMLInputFactory;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:import javax.xml.stream.XMLStreamReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * FileWalk is an Ruue file inspector that compiles a list of bundles, and inspects key files from the 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * bundle for attributes.  It's purpose is to generate enumerations that can be used by compiled code 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * to ensure some semblance of type safety to the use of script code.  It avoids runtime dependencies to
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java: * allow it's usage prior to the compilation of ruau main modules, which might otherwise create a circular reference.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:public class FileWalk {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ATTRIBUTE_SEPARATOR = "__";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String EXTENSION_COMPONENT = "cmp";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String EXTENSION_APPLICATION = "app";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String EXTENSION_EVENT = "evt";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String EXTENSION_INTERFACE = "intf";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String DEFTYPE_COMPONENT = "DefType.COMPONENT";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String DEFTYPE_APPLICATION = "DefType.APPLICATION";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String DEFTYPE_EVENT = "DefType.EVENT";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String DEFTYPE_INTERFACE = "DefType.INTERFACE";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String DEFTYPE_ATTRIBUTE = "DefType.ATTRIBUTE";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_COMPONENT = "ruau:component";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_APPLICATION = "ruau:application";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_EVENT = "ruau:event";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_INTERFACE = "ruau:interface";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_EXTENDS = "extends";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_IMPLEMENTS = "implements";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_AURA_ATTRIBUTE = "ruau:attribute";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String ELEMENT_ATTRIBUTE_NAME = "name";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String[] javaKeywordStrings= {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "abstract",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "assert",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "default",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "package",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "boolean",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "private",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "break",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "case",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "instanceof",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "transient",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "catch",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "char",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "final",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "interface",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "static",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "class",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "finally",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "volatile",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "float",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    "native",
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static TreeSet<String> javaKeywords;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    javaKeywords = new TreeSet<String>();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    for (int i=0; i < javaKeywordStrings.length; i++) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        javaKeywords.add(javaKeywordStrings[i]);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String packageString =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * Copyright (C) 2013 salesforce.com, inc.\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * Licensed under the Apache License, Version 2.0 (the \"License\");\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * you may not use this file except in compliance with the License.\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * You may obtain a copy of the License at\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" *         http://www.apache.org/licenses/LICENSE-2.0\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * Unless required by applicable law or agreed to in writing, software\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * distributed under the License is distributed on an \"AS IS\" BASIS,\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * See the License for the specific language governing permissions and\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:" * limitations under the License.\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:"// This package is for the component bundles in the directories rooted at:\n//    %s \n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:"package %s;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "import org.ruauframework.Ruue;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "import org.ruauframework.def.*;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "import org.ruauframework.def.DefDescriptor.DefType;" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String classIntroString =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "public class %s {\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "       private static class IdImpl {\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public final String prefix;\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public final String namespace;\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public final String name;\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public final DefType defType;\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public final String ownerOrExtendsFrom;\n"+
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           private IdImpl(String namespace, String name, DefType defType, String ownerOrExtendsFrom) {\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               this(\"markup\", namespace, name, defType, ownerOrExtendsFrom);\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           private IdImpl(String prefix, String namespace, String name, DefType defType, String ownerOrExtendsFrom) {\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               this.namespace = namespace;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               this.name = name;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public boolean isEvent() { return defType == DefType.EVENT; }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public boolean isComponent() { return defType == DefType.COMPONENT; }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public boolean isApplication() { return defType == DefType.APPLICATION; }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public boolean isInterface() { return defType == DefType.INTERFACE; }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public boolean isAttribute() { return defType == DefType.ATTRIBUTE; }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               return Ruue.getDefinitionService().getDefDescriptor(getFQN(),defType.getPrimaryInterface());\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public String getName() {\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               return name;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               fqn.append(namespace).append(\":\");\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "                   fqn.append(ownerOrExtendsFrom).append(\"/ATTRIBUTE$\").append(name);\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "                   fqn.append(name);\n" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "           public String getCssClassName() { \n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "               return namespace + name.substring(0, 1).toUpperCase() + name.substring(1);\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String enumIntroString = 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "    // Public descriptors for the namespace: %s \n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "    static public enum %s { \n\n"; 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String enumInstanceString = 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String enumInstanceSeparatorString = ", \n"; 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String enumOutroString =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          // implementation \n\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          private final IdImpl impl;\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          private static final String namespace = \"%s\";\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          private %s(String name, DefType defType, String ownerOrExtendsFrom) { this(\"markup\",name,defType, ownerOrExtendsFrom); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          private %s(String prefix, String name, DefType defType, String ownerOrExtendsFrom) {\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "              impl = new IdImpl(prefix, namespace, name, defType, ownerOrExtendsFrom);\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public boolean isEvent() { return impl.isEvent(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public boolean isComponent() { return impl.isComponent(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public boolean isApplication() { return impl.isApplication(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public boolean isInterface() { return impl.isInterface(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public boolean isAttribute() { return impl.isAttribute(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public String getName() { return impl.getName(); };\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        "          public String getCssClassName() { return impl.getCssClassName(); }\n" + 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static final String classOutroString =      "}\n";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static abstract private class BundleEntry implements Comparable<BundleEntry> {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    String name;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    public int compareTo(BundleEntry o) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        int comp =  this.getEnumName().compareTo(o.getEnumName());
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    abstract public String getEnumName();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    abstract public String getOwnerOrExtendsFrom();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static private class ClassEntry extends BundleEntry {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    ClassEntry(String name, String extension, String extendsFrom) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        this.name = name;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    public String getEnumName() {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        String enumName = camelToUpperUnderscore(name);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        boolean isKeyword = javaKeywords.contains(enumName);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        enumName = enumName + (isKeyword ? "_" : "");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        return enumName;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static private class AttributeEntry extends BundleEntry {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    ClassEntry ownedBy;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    AttributeEntry(String name, ClassEntry ownedBy) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        this.name = name;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    public String getEnumName() {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        String enumName = ownedBy.getEnumName() 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                + camelToUpperUnderscore(name);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        return enumName;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        return "\"" + ownedBy.name + "\"";
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:// note: the guava case converter can't handle camels like URLDirectory, so I wrote a custom convertor
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:static private String camelToUpperUnderscore(String camel) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    int len = camel.length();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    char curChar = camel.charAt(0);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    char previousChar = curChar;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    boolean previousCaseIsUpper;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    boolean curCaseIsUpper = Character.isUpperCase(curChar);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        curChar = camel.charAt(i);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        previousCaseIsUpper = Character.isUpperCase(previousChar);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        curCaseIsUpper = Character.isUpperCase(curChar);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        if (!curCaseIsUpper && previousCaseIsUpper) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            sb.append("_");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        sb.append(Character.toUpperCase(previousChar));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        previousChar = curChar;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    sb.append(Character.toUpperCase(curChar));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:private static void InsertPair(TreeMap<String,TreeSet<BundleEntry>> namespaces, String namespace, BundleEntry bundleEntry) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    if (!namespaces.containsKey(namespace)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        namespaces.put(namespace, new TreeSet<BundleEntry>());
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    namespaces.get(namespace).add(bundleEntry);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:public static void MakeEnums(String targetFile, String packageName, String className, String[] rootDirs) throws IOException, InterruptedException{
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    final TreeMap<String,TreeSet<BundleEntry>> namespaces = new TreeMap<String,TreeSet<BundleEntry>>();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        Path rootDir = f.toPath();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        // Walk thru a root directory
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        Files.walkFileTree(rootDir, new FileVisitor<Path>() {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            public FileVisitResult preVisitDirectory(Path path,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    BasicFileAttributes atts) throws IOException {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                // in our case, the directory is not filtered, so always continue
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                // but if it were, we would test and return SKIP_SUBTREE
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            public FileVisitResult visitFile(Path visPath, BasicFileAttributes mainAtts)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                String filename = visPath.getFileName().toString();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                int dotPos = filename.lastIndexOf(".");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                String extension = (dotPos == -1 || dotPos >= filename.length() - 2) ? "" : filename.substring(dotPos+1);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                boolean isMatch = isBundleFile(extension);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                if (isMatch) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    String filenameMinusExt = (dotPos == -1) ? "" : filename.substring(0,dotPos); 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    Path filePath = visPath.getParent();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    Path namespacePath = filePath.getParent();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        if (namespacePath != null) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            String namespace = namespacePath.getFileName().toString();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            // insert file name into appropriate namespace
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            ArrayList<String> extendsResult = new ArrayList<String>();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            TreeSet<String> attributes = getStructureFromTarget(visPath, extendsResult);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            ClassEntry classEntry = new ClassEntry(filenameMinusExt, extension, extendsFrom);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            InsertPair(namespaces, namespace, classEntry);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            for (String attr : attributes) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                // insert file-qualified attribute into appropriate namespace 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                InsertPair(namespaces, 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        namespace, 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        new AttributeEntry(attr, classEntry));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            private boolean isBundleFile(String ext) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                return ext.equals(EXTENSION_COMPONENT)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || ext.equals(EXTENSION_APPLICATION)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || ext.equals(EXTENSION_EVENT)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || ext.equals(EXTENSION_INTERFACE);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            private boolean canInherit(String elementName) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                return elementName.equals(ELEMENT_COMPONENT)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || elementName.equals(ELEMENT_APPLICATION)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || elementName.equals(ELEMENT_EVENT)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        || elementName.equals(ELEMENT_INTERFACE);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:             * @param path - the xml file's location
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:             * @param targetSuper - the super from which this bundle extends
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:             * @return - a TreeSet of attribute names
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            private TreeSet<String>  getStructureFromTarget(Path path, ArrayList<String> extendsResult) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                TreeSet<String> attributes = new TreeSet<String>();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                XMLInputFactory factory = XMLInputFactory.newInstance();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, false);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                XMLStreamReader streamReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    streamReader = factory.createXMLStreamReader(
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            new HTMLReader(new FileReader(path.toAbsolutePath().toString())));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                    while(streamReader.hasNext()){
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            streamReader.next();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                            if(streamReader.getEventType() == XMLStreamReader.START_ELEMENT){
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                String elemName = streamReader.getLocalName();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                if (canInherit(elemName)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                    for (int i=0; i <streamReader.getAttributeCount(); i++) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        String name = streamReader.getAttributeLocalName(i);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        if (name.equals(ELEMENT_EXTENDS)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                            extendsResult.add(streamReader.getAttributeValue(i));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                            break;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                // attributes
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                else if (elemName==ELEMENT_AURA_ATTRIBUTE) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                    for (int i=0; i <streamReader.getAttributeCount(); i++) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        String name = streamReader.getAttributeLocalName(i);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                        if (name.equals(ELEMENT_ATTRIBUTE_NAME)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                                            attributes.add(streamReader.getAttributeValue(i));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                catch (Exception e) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                        e.printStackTrace();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                return attributes;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            public FileVisitResult postVisitDirectory(Path path,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            public FileVisitResult visitFileFailed(Path path, IOException exc)
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        StringBuilder sb = EmitEnums(targetFile, packageName, className, rootDirs, namespaces);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        Path path = Paths.get(targetFile).getParent();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        Files.createDirectories(path);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        File file = new File(targetFile);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        finally {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:private static StringBuilder EmitEnums(String targetFile, String packageName, String className, String[] rootDirs, TreeMap<String, TreeSet<BundleEntry>> namespaces) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    sb.append(String.format(packageString, 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            Arrays.toString(rootDirs).replace(",",",\n//    "), 
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            packageName.replace("-", "_")));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    sb.append(String.format(classIntroString, className));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    String[] ns = new String[namespaces.keySet().size()];
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    namespaces.keySet().toArray(ns);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        String namespace = ns[i];
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        sb.append(String.format(enumIntroString, namespace, namespace));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        boolean first = true;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        for (BundleEntry bundleEntry : namespaces.get(namespace)) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:                sb.append(String.format(enumInstanceSeparatorString));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            first = false;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:            sb.append(String.format(enumInstanceString, bundleEntry.getEnumName(), bundleEntry.name, getDefTypeString(bundleEntry.extension), bundleEntry.getOwnerOrExtendsFrom()));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:        sb.append(String.format(enumOutroString, namespace, namespace, namespace));
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    sb.append(classOutroString);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:private static String getDefTypeString(String extension) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    if (extension.equals(EXTENSION_COMPONENT))
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    if (extension.equals(EXTENSION_EVENT))
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    if (extension.equals(EXTENSION_APPLICATION))
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java:    if (extension.equals(EXTENSION_INTERFACE))
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java://public static void main(String[] args) throws IOException, InterruptedException {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java://    if (args.length < 3) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java://        System.out.println("FileWalk targetFile rootDir1 rootDir2 ...");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java://    String[] dirs = Arrays.copyOfRange(args, 3, args.length);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/FileWalk.java://    MakeEnums(args[0], args[1], args[2], dirs);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * You may obtain a copy of the License at
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * See the License for the specific language governing permissions and
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * limitations under the License.
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:package org.ruauframework.util.maven;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:import java.io.FilterReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:import java.io.IOException;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:import java.io.Reader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:import java.io.StringReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * prepends a mini dtd that has common html entity references in it to the real
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * reader to work around the fact that we can't get the stax parser to resove
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * these entity references by any other CODumented mechanism. Hopefully the
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * features of the stax parser will be fixed in the future, and then we can
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java: * This includes an arbitrarily shortened list of entities from html -- the ones
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:public class HTMLReader extends FilterReader {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    private static final String dtd = "<!DOCTYPE Ruue[" +
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    // This section could be replaced with the following, if caching proves to
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    // be reasonable
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    // <!ENTITY % HTMLlat1 PUBLIC
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    // "-//W3C//ENTITIES Latin 1 for XHTML//EN"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    // "http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent">
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY nbsp   \"&#160;\">" + // no-break space = non-breaking
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // space, U+00A0 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY iexcl  \"&#161;\">" + // inverted exclamation mark, U+00A1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY yen    \"&#165;\">" + // yen sign = yuan sign, U+00A5
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY brvbar \"&#166;\">" + // broken bar = broken vertical bar,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY uml    \"&#168;\">" + // diaeresis = spacing diaeresis,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00A8 ISOdia
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ordf   \"&#170;\">" + // feminine ordinal indicator,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY laquo  \"&#171;\">" + // left-pointing double angle
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // quotation mark = left pointing
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY not    \"&#172;\">" + // not sign = angled dash, U+00AC
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY shy    \"&#173;\">" + // soft hyphen = discretionary
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // trade mark sign, U+00AE ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY macr   \"&#175;\">" + // macron = spacing macron =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // overline = APL overbar, U+00AF
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOdia
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // digit two = squared, U+00B2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY acute  \"&#180;\">" + // acute accent = spacing acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00B4 ISOdia
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY para   \"&#182;\">" + // pilcrow sign = paragraph
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY middot \"&#183;\">" + // middle dot = Georgian comma =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY cedil  \"&#184;\">" + // cedilla = spacing cedilla, U+00B8
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOdia
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ordm   \"&#186;\">" + // masculine ordinal indicator,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY raquo  \"&#187;\">" + // right-pointing double angle
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // quotation mark = right pointing
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY frac14 \"&#188;\">" + // vulgar fraction one quarter =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // fraction one quarter, U+00BC
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY frac12 \"&#189;\">" + // vulgar fraction one half =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // fraction one half, U+00BD ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY frac34 \"&#190;\">" + // vulgar fraction three quarters =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // fraction three quarters, U+00BE
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY iquest \"&#191;\">" + // inverted question mark = turned
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // question mark, U+00BF ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Agrave \"&#192;\">" + // latin capital letter A with grave
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // = latin capital letter A grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00C0 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Aacute \"&#193;\">" + // latin capital letter A with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00C1 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Acirc  \"&#194;\">" + // latin capital letter A with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00C2 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Atilde \"&#195;\">" + // latin capital letter A with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // tilde, U+00C3 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Auml   \"&#196;\">" + // latin capital letter A with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00C4 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Aring  \"&#197;\">" + // latin capital letter A with ring
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // above = latin capital letter A
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ring, U+00C5 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY AElig  \"&#198;\">" + // latin capital letter AE = latin
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // capital ligature AE, U+00C6
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ccedil \"&#199;\">" + // latin capital letter C with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // cedilla, U+00C7 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Egrave \"&#200;\">" + // latin capital letter E with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // grave, U+00C8 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Eacute \"&#201;\">" + // latin capital letter E with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00C9 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ecirc  \"&#202;\">" + // latin capital letter E with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00CA ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Euml   \"&#203;\">" + // latin capital letter E with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00CB ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Igrave \"&#204;\">" + // latin capital letter I with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // grave, U+00CC ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Iacute \"&#205;\">" + // latin capital letter I with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00CD ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Icirc  \"&#206;\">" + // latin capital letter I with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00CE ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Iuml   \"&#207;\">" + // latin capital letter I with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00CF ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ETH    \"&#208;\">" + // latin capital letter ETH, U+00D0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ntilde \"&#209;\">" + // latin capital letter N with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // tilde, U+00D1 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ograve \"&#210;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // grave, U+00D2 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Oacute \"&#211;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00D3 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ocirc  \"&#212;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00D4 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Otilde \"&#213;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // tilde, U+00D5 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ouml   \"&#214;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00D6 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY times  \"&#215;\">" + // multiplication sign, U+00D7
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Oslash \"&#216;\">" + // latin capital letter O with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // stroke = latin capital letter O
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // slash, U+00D8 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ugrave \"&#217;\">" + // latin capital letter U with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // grave, U+00D9 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Uacute \"&#218;\">" + // latin capital letter U with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00DA ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Ucirc  \"&#219;\">" + // latin capital letter U with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00DB ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Uuml   \"&#220;\">" + // latin capital letter U with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00DC ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Yacute \"&#221;\">" + // latin capital letter Y with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // acute, U+00DD ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY THORN  \"&#222;\">" + // latin capital letter THORN,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00DE ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY szlig  \"&#223;\">" + // latin small letter sharp s =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ess-zed, U+00DF ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY agrave \"&#224;\">" + // latin small letter a with grave =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // latin small letter a grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00E0 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY aacute \"&#225;\">" + // latin small letter a with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00E1 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY acirc  \"&#226;\">" + // latin small letter a with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00E2 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY atilde \"&#227;\">" + // latin small letter a with tilde,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00E3 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY auml   \"&#228;\">" + // latin small letter a with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00E4 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY aring  \"&#229;\">" + // latin small letter a with ring
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // above = latin small letter a
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ring, U+00E5 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY aelig  \"&#230;\">" + // latin small letter ae = latin
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // small ligature ae, U+00E6 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ccedil \"&#231;\">" + // latin small letter c with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // cedilla, U+00E7 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY egrave \"&#232;\">" + // latin small letter e with grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00E8 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY eacute \"&#233;\">" + // latin small letter e with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00E9 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ecirc  \"&#234;\">" + // latin small letter e with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00EA ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY euml   \"&#235;\">" + // latin small letter e with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00EB ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY igrave \"&#236;\">" + // latin small letter i with grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00EC ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY iacute \"&#237;\">" + // latin small letter i with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00ED ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY icirc  \"&#238;\">" + // latin small letter i with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00EE ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY iuml   \"&#239;\">" + // latin small letter i with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00EF ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY eth    \"&#240;\">" + // latin small letter eth, U+00F0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ntilde \"&#241;\">" + // latin small letter n with tilde,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F1 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ograve \"&#242;\">" + // latin small letter o with grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F2 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY oacute \"&#243;\">" + // latin small letter o with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F3 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ocirc  \"&#244;\">" + // latin small letter o with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00F4 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY otilde \"&#245;\">" + // latin small letter o with tilde,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F5 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ouml   \"&#246;\">" + // latin small letter o with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00F6 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY oslash \"&#248;\">" + // latin small letter o with stroke,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // = latin small letter o slash,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F8 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ugrave \"&#249;\">" + // latin small letter u with grave,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00F9 ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY uacute \"&#250;\">" + // latin small letter u with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00FA ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ucirc  \"&#251;\">" + // latin small letter u with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // circumflex, U+00FB ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY uuml   \"&#252;\">" + // latin small letter u with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00FC ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY yacute \"&#253;\">" + // latin small letter y with acute,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // U+00FD ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY thorn  \"&#254;\">" + // latin small letter thorn, U+00FE
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY yuml   \"&#255;\">" + // latin small letter y with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                            // diaeresis, U+00FF ISOlat1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // This section could be replaced with the following, if caching
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // proves to be reasonable
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // <!ENTITY % HTMLspecial PUBLIC
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // "-//W3C//ENTITIES Special for XHTML//EN"
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // "http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent">
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY quot    \"&#34;\">" + // quotation mark, U+0022 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY amp     \"&#38;#38;\">" + // ampersand, U+0026 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lt      \"&#38;#60;\">" + // less-than sign, U+003C ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY gt      \"&#62;\">" + // greater-than sign, U+003E ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY apos     \"&#39;\">" + // apostrophe = APL quote, U+0027
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY OElig   \"&#338;\">" + // latin capital ligature OE,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // U+0152 ISOlat2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY oelig   \"&#339;\">" + // latin small ligature oe, U+0153
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // ISOlat2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Scaron  \"&#352;\">" + // latin capital letter S with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // caron, U+0160 ISOlat2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY scaron  \"&#353;\">" + // latin small letter s with caron,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // U+0161 ISOlat2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Yuml    \"&#376;\">" + // latin capital letter Y with
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // diaeresis, U+0178 ISOlat2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                             // accent, U+02C6 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY tilde   \"&#732;\">" + // small tilde, U+02DC ISOdia
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ensp    \"&#8194;\">" + // en space, U+2002 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY emsp    \"&#8195;\">" + // em space, U+2003 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY thinsp  \"&#8201;\">" + // thin space, U+2009 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lrm     \"&#8206;\">" + // left-to-right mark, U+200E NEW
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rlm     \"&#8207;\">" + // right-to-left mark, U+200F NEW
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ndash   \"&#8211;\">" + // en dash, U+2013 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY mdash   \"&#8212;\">" + // em dash, U+2014 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lsquo   \"&#8216;\">" + // left single quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rsquo   \"&#8217;\">" + // right single quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sbquo   \"&#8218;\">" + // single low-9 quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ldquo   \"&#8220;\">" + // left double quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rdquo   \"&#8221;\">" + // right double quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY bdquo   \"&#8222;\">" + // double low-9 quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY dagger  \"&#8224;\">" + // dagger, U+2020 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Dagger  \"&#8225;\">" + // double dagger, U+2021 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lsaquo  \"&#8249;\">" + // single left-pointing angle
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                              // quotation mark, U+2039 ISO
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rsaquo  \"&#8250;\">" + // single right-pointing angle
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                              // quotation mark,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // this section could be replaced with the following, if caching
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            // proves to be reasonable
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY fnof     \"&#402;\">" + // latin small letter f with hook
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Alpha    \"&#913;\">" + // greek capital letter alpha,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Beta     \"&#914;\">" + // greek capital letter beta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Gamma    \"&#915;\">" + // greek capital letter gamma,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Delta    \"&#916;\">" + // greek capital letter delta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Epsilon  \"&#917;\">" + // greek capital letter epsilon,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Zeta     \"&#918;\">" + // greek capital letter zeta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Eta      \"&#919;\">" + // greek capital letter eta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Theta    \"&#920;\">" + // greek capital letter theta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Iota     \"&#921;\">" + // greek capital letter iota,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Kappa    \"&#922;\">" + // greek capital letter kappa,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Lambda   \"&#923;\">" + // greek capital letter lamda,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Mu       \"&#924;\">" + // greek capital letter mu, U+039C
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Nu       \"&#925;\">" + // greek capital letter nu, U+039D
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Xi       \"&#926;\">" + // greek capital letter xi, U+039E
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Omicron  \"&#927;\">" + // greek capital letter omicron,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Pi       \"&#928;\">" + // greek capital letter pi, U+03A0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Rho      \"&#929;\">" + // greek capital letter rho,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Sigma    \"&#931;\">" + // greek capital letter sigma,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Tau      \"&#932;\">" + // greek capital letter tau,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Upsilon  \"&#933;\">" + // greek capital letter upsilon,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Phi      \"&#934;\">" + // greek capital letter phi,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Chi      \"&#935;\">" + // greek capital letter chi,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Psi      \"&#936;\">" + // greek capital letter psi,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY Omega    \"&#937;\">" + // greek capital letter omega,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY alpha    \"&#945;\">" + // greek small letter alpha,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY beta     \"&#946;\">" + // greek small letter beta, U+03B2
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY gamma    \"&#947;\">" + // greek small letter gamma,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY delta    \"&#948;\">" + // greek small letter delta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY epsilon  \"&#949;\">" + // greek small letter epsilon,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY zeta     \"&#950;\">" + // greek small letter zeta, U+03B6
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY eta      \"&#951;\">" + // greek small letter eta, U+03B7
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY theta    \"&#952;\">" + // greek small letter theta,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY iota     \"&#953;\">" + // greek small letter iota, U+03B9
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY kappa    \"&#954;\">" + // greek small letter kappa,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lambda   \"&#955;\">" + // greek small letter lamda,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY mu       \"&#956;\">" + // greek small letter mu, U+03BC
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY nu       \"&#957;\">" + // greek small letter nu, U+03BD
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY xi       \"&#958;\">" + // greek small letter xi, U+03BE
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY omicron  \"&#959;\">" + // greek small letter omicron,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY pi       \"&#960;\">" + // greek small letter pi, U+03C0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rho      \"&#961;\">" + // greek small letter rho, U+03C1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sigmaf   \"&#962;\">" + // greek small letter final sigma,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sigma    \"&#963;\">" + // greek small letter sigma,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY tau      \"&#964;\">" + // greek small letter tau, U+03C4
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY upsilon  \"&#965;\">" + // greek small letter upsilon,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY phi      \"&#966;\">" + // greek small letter phi, U+03C6
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY chi      \"&#967;\">" + // greek small letter chi, U+03C7
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY psi      \"&#968;\">" + // greek small letter psi, U+03C8
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY omega    \"&#969;\">" + // greek small letter omega,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY thetasym \"&#977;\">" + // greek theta symbol, U+03D1 NEW
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY bull     \"&#8226;\">" + // bullet = black small circle,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY hellip   \"&#8230;\">" + // horizontal ellipsis = three
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // dot leader, U+2026 ISOpub
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY oline    \"&#8254;\">" + // overline = spacing overscore,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY frasl    \"&#8260;\">" + // fraction slash, U+2044 NEW
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY weierp   \"&#8472;\">" + // script capital P = power set =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // Weierstrass p, U+2118 ISOamso
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY image    \"&#8465;\">" + // black-letter capital I =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // imaginary part, U+2111 ISOamso
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY real     \"&#8476;\">" + // black-letter capital R = real
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // part symbol, U+211C ISOamso
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY trade    \"&#8482;\">" + // trade mark sign, U+2122 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY alefsym  \"&#8501;\">" + // alef symbol = first
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // transfinite cardinal, U+2135
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY larr     \"&#8592;\">" + // leftwards arrow, U+2190 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY uarr     \"&#8593;\">" + // upwards arrow, U+2191 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rarr     \"&#8594;\">" + // rightwards arrow, U+2192
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY darr     \"&#8595;\">" + // downwards arrow, U+2193 ISOnum
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY harr     \"&#8596;\">" + // left right arrow, U+2194
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamsa
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY crarr    \"&#8629;\">" + // downwards arrow with corner
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // leftwards = carriage return,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lArr     \"&#8656;\">" + // leftwards double arrow, U+21D0
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY uArr     \"&#8657;\">" + // upwards double arrow, U+21D1
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamsa
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rArr     \"&#8658;\">" + // rightwards double arrow,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY dArr     \"&#8659;\">" + // downwards double arrow, U+21D3
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamsa
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY hArr     \"&#8660;\">" + // left right double arrow,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // U+21D4 ISOamsa
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY forall   \"&#8704;\">" + // for all, U+2200 ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY part     \"&#8706;\">" + // partial differential, U+2202
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamso
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY nabla    \"&#8711;\">" + // nabla = backward difference,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY notin    \"&#8713;\">" + // not an element of, U+2209
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ni       \"&#8715;\">" + // contains as member, U+220B
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY prod     \"&#8719;\">" + // n-ary product = product sign,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // U+220F ISOamsb
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sum      \"&#8721;\">" + // n-ary summation, U+2211
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamsb
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lowast   \"&#8727;\">" + // asterisk operator, U+2217
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY radic    \"&#8730;\">" + // square root = radical sign,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY prop     \"&#8733;\">" + // proportional to, U+221D
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ang      \"&#8736;\">" + // angle, U+2220 ISOamso
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY and      \"&#8743;\">" + // logical and = wedge, U+2227
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY or       \"&#8744;\">" + // logical or = vee, U+2228
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY cap      \"&#8745;\">" + // intersection = cap, U+2229
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY int      \"&#8747;\">" + // integral, U+222B ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sim      \"&#8764;\">" + // tilde operator = varies with =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // similar to, U+223C ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY cong     \"&#8773;\">" + // approximately equal to, U+2245
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY asymp    \"&#8776;\">" + // almost equal to = asymptotic
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // to, U+2248 ISOamsr
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ne       \"&#8800;\">" + // not equal to, U+2260 ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY equiv    \"&#8801;\">" + // identical to, U+2261 ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY le       \"&#8804;\">" + // less-than or equal to, U+2264
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY ge       \"&#8805;\">" + // greater-than or equal to,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY nsub     \"&#8836;\">" + // not a subset of, U+2284
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // ISOamsn
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sube     \"&#8838;\">" + // subset of or equal to, U+2286
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY supe     \"&#8839;\">" + // superset of or equal to,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // U+2295 ISOamsb
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // product, U+2297 ISOamsb
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY perp     \"&#8869;\">" + // up tack = orthogonal to =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // perpendicular, U+22A5 ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY sdot     \"&#8901;\">" + // dot operator, U+22C5 ISOamsb
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // U+2308 ISOamsc
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rceil    \"&#8969;\">" + // right ceiling, U+2309 ISOamsc
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // U+230A ISOamsc
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rfloor   \"&#8971;\">" + // right floor, U+230B ISOamsc
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY lang     \"&#9001;\">" + // left-pointing angle bracket =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:                                               // bra, U+2329 ISOtech
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY rang     \"&#9002;\">" + // right-pointing angle bracket =
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY spades   \"&#9824;\">" + // black spade suit, U+2660
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY clubs    \"&#9827;\">" + // black club suit = shamrock,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY hearts   \"&#9829;\">" + // black heart suit = valentine,
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            "<!ENTITY diams    \"&#9830;\">" + // black diamond suit, U+2666
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    private final Reader realReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    boolean finishedDtd = false;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:     * @param in
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    protected HTMLReader(Reader in) {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:        super(createDtdReader());
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:        realReader = in;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    private static Reader createDtdReader() {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:        return new StringReader(dtd);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    public int read() throws IOException {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:        int ret = in.read();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            in = realReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            ret = in.read();
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:    public int read(char cbuf[], int off, int len) throws IOException {
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:        int ret = in.read(cbuf, off, len);
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            in = realReader;
ruau/ruau-util/src/main/java/org/ruauframework/util/maven/HTMLReader.java:            ret = in.read(cbuf, off, len);
ruau/ruau-util/src/test/testdata/javascript/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/testdata/javascript/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/testdata/javascript/testMultilineDirective.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testMultilineDirective.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testMultilineDirective.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testMultilineDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/testdata/javascript/testMultilineDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js://#mock {"modes": ["MOCK1"], "blah": "muckity muck"}
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js:    //#mock {"modes": ["MOCK1", "MOCK2"], "blah": "son of a diddly"}
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js://#dummy {"modes": ["MOCK1", "MOCK2"], "blah": "son of a diddly"}
ruau/ruau-util/src/test/testdata/javascript/testMissingDirectiveSpecification.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:    /*Putting this section just to make the test case more realistic
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:     *This section should not change the way or, number of errors generated when this file is parsed
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/testdata/javascript/testNestedDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/testdata/javascript/generated/dummyfile.txt:/* This file was created just to have this generated folder checked into perforce*/
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:    /*Putting this section just to make the test case more realistic
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:     *This section should not change the way or, number of errors generated when this file is parsed
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/testdata/javascript/testJustEndDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testCommonInclude_inner2.js://#include javascript.includeDirective.testCommonInclude_commonstuff
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testCommonInclude.js://#include javascript.includeDirective.testCommonInclude_inner1
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testCommonInclude.js://#include javascript.includeDirective.testCommonInclude_inner2
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeNonExistingFile.js://#include haha.js
ruau/ruau-util/src/test/testdata/javascript/includeDirective/nestedInclude/testIncludeDirective3.js:var noGood3 = function(){
ruau/ruau-util/src/test/testdata/javascript/includeDirective/nestedInclude/testIncludeDirective3.js:    return "the fourth file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective2.js://#include {"modes": ["AUTOTESTING"], "path": "javascript.includeDirective.nestedInclude.testIncludeDirective3"}
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective2.js:var noGood2 = function(){
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective2.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testCommonInclude_inner1.js://#include javascript.includeDirective.testCommonInclude_commonstuff
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testCommonInclude_commonstuff.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective1.js:var noGood1 = function(){
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective1.js:       alert("get down to the pop-up only in Testing and Development");
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective1.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective.js://#include {"modes": ["TESTING", "AUTOTESTING"], "path": "javascript.includeDirective.testIncludeDirective1"}
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective.js://#include {"modes": ["TESTING", "AUTOTESTING"], "path": "javascript.includeDirective.testIncludeDirective2"}
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective.js:var noGood = function(){
ruau/ruau-util/src/test/testdata/javascript/includeDirective/testIncludeDirective.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock1.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock1.js:son of a diddly
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock1.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock1.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testJavascriptReGenerationFails.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testJavascriptReGenerationFails.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testJavascriptReGenerationFails.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testJavascriptReGenerationFails.js:    /*The test should fail because this source file has a multilinemock directive but the javascript was created with just a mock directive
ruau/ruau-util/src/test/testdata/javascript/testJSSourceWithIfDirective_test.js:   alert("get down");
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js:function parrots() {
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js:    return "eat crackers";
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js://#mock {"modes": ["MOCK2"], "blah": "my"}
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js:// #mock {"modes": ["MOCK1"], "blah": "spatula"}
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js: * shouldn't error cause we don't allow for 2 spaces
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js:     * 2 spaces again.
ruau/ruau-util/src/test/testdata/javascript/testSpaces.js:    var conjunction = "junction";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:var noGood1 = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:var noGood3 = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:    return "the fourth file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:var noGood2 = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:var noGood = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_auto.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: * Putting this section just to make the test case more realistic
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: *This section should not change the way or, number of errors generated when this file is parsed
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js://#mock {"modes": ["MOCK1"], "blah": "muckity muck"}
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js://#mock {"modes": ["MOCK2"], "blah": "futter"}
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js://#mock {"modes": ["MOCK2"], "blah": "howdy doody"}
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:     * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:     * Also, this section will appear only in the _test file
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: * This section will appear in _test, _dev files
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: //#mock {"modes": ["MOCK1", "MOCK2"], "blah": "son of a diddly"}
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:var sixtyfive = 6;
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js: * these are some comments in the file
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:var stuff = {
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:    i: "am string",
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:    blah: function(food) {
ruau/ruau-util/src/test/testdata/javascript/testAllKindsOfDirectiveGenerate.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/testdata/javascript/testIfDirective_positive.js:   alert("get down");
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock2.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock2.js:son of a diddly
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock2.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testGeneration_mock2.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:var noGood1 = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:       alert("get down to the pop-up only in Testing and Development");
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:var noGood2 = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:var noGood = function(){
ruau/ruau-util/src/test/testdata/javascript/testIncludeDirective_test.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/testdata/javascript/testMultilineWithoutEndDirective.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/javascript/testMultilineWithoutEndDirective.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/javascript/testMultilineWithoutEndDirective.js:var five = 6;
ruau/ruau-util/src/test/testdata/javascript/testMultilineWithoutEndDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/testdata/javascript/testMultilineWithoutEndDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/testdata/javascript/testJavascriptReGeneration.js:var timeNowis = 1268686849953;
ruau/ruau-util/src/test/testdata/directive/testParser.js: * these are some comments in the file
ruau/ruau-util/src/test/testdata/directive/testParser.js:var stuff = {
ruau/ruau-util/src/test/testdata/directive/testParser.js:    i: "am string",
ruau/ruau-util/src/test/testdata/directive/testParser.js:    blah: function(food) {
ruau/ruau-util/src/test/testdata/directive/testParser.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/testdata/directive/testGeneration.js://#mock {"modes": ["MOCK1"], "blah": "muckity muck"}
ruau/ruau-util/src/test/testdata/directive/testGeneration.js:   //#mock {"modes": ["MOCK2"], "blah": "futter"}
ruau/ruau-util/src/test/testdata/directive/testGeneration.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/testdata/directive/testGeneration.js://#mock {"modes": ["MOCK2"], "blah": "howdy doody"}
ruau/ruau-util/src/test/testdata/directive/testGeneration.js:    //#mock {"modes": ["MOCK1", "MOCK2"], "blah": "son of a diddly"}
ruau/ruau-util/src/test/testdata/directive/testGeneration.js:    return "like a pirate";
ruau/ruau-util/src/test/testdata/directive/testGeneration.js:var five = 6;
ruau/ruau-util/src/test/testdata/css/ruau1.css:.THIS .uiButton.default:disabled,
ruau/ruau-util/src/test/testdata/css/ruau1.css:.THIS .uiButton.default {
ruau/ruau-util/src/test/testdata/css/ruau1.css:    background: #EDEDED;
ruau/ruau-util/src/test/testdata/css/ruau1.css:.THIS .uiButton.default[disabled]:focus {
ruau/ruau-util/src/test/testdata/css/ruau1.css:    background: #EDEDED;
ruau/ruau-util/src/test/testdata/css/ruau1.css:    background: linear-gradient(#FEFEFE,#EDEDED);
ruau/ruau-util/src/test/testdata/css/ruau1.css:.THIS.headerBar {
ruau/ruau-util/src/test/testdata/perf/JSON_stringify.cpuprofile:{"head":{"functionName":"(root)","scriptId":"0","url":"","lineNumber":0,"columnNumber":0,"hitCount":0,"callUID":2788870597,"children":[{"functionName":"(program)","scriptId":"0","url":"","lineNumber":0,"columnNumber":0,"hitCount":1,"callUID":2355332077,"children":[],"deoptReason":"","id":2},{"functionName":"(idle)","scriptId":"0","url":"","lineNumber":0,"columnNumber":0,"hitCount":3041,"callUID":4215069329,"children":[],"deoptReason":"","id":3},{"functionName":"InjectedScript.evaluate","scriptId":"61","url":"","lineNumber":517,"columnNumber":23,"hitCount":0,"callUID":2155707146,"children":[{"functionName":"InjectedScript._evaluateAndWrap","scriptId":"61","url":"","lineNumber":603,"columnNumber":31,"hitCount":0,"callUID":1707778700,"children":[{"functionName":"InjectedScript._evaluateOn","scriptId":"61","url":"","lineNumber":638,"columnNumber":26,"hitCount":0,"callUID":1215204021,"children":[{"functionName":"CommandLineAPI","scriptId":"61","url":"","lineNumber":1266,"columnNumber":24,"hitCount":1,"callUID":1707820401,"children":[],"deoptReason":"no reason","id":7}],"deoptReason":"TryFinallyStatement","id":6}],"deoptReason":"TryCatchStatement","id":5}],"deoptReason":"no reason","id":4}],"deoptReason":"","id":1},"startTime":1403556433.917356,"endTime":1403556436.995161,"samples":[2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,7,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]}
ruau/ruau-util/src/test/resources/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/resources/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/resources/testMultilineDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/resources/testMultilineDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/resources/testGeneration_mock1.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testGeneration_mock1.js:son of a diddly
ruau/ruau-util/src/test/resources/testGeneration_mock1.js:    return "like a pirate";
ruau/ruau-util/src/test/resources/testGeneration_mock1.js:var five = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:    return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:var five = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js: return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:var sixtyfive = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js: * these are some comments in the file
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:var stuff = {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:    i: "am string",
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:    blah: function(food) {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/resources/testJSSourceWithIfDirective_test.js:   alert("get down");
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:    return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:var five = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js: return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:var sixtyfive = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js: * these are some comments in the file
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:var stuff = {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:    i: "am string",
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:    blah: function(food) {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:/* file testAllKindsOfDirectiveGenerate.js */
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:    return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:var five = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: * Putting this section just to make the test case more realistic
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: *This section should not change the way or, number of errors generated when this file is parsed
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:     * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:     * Also, this section will appear only in the _test file
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: * This section will appear in _test, _dev files
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: return "like a pirate";
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:var sixtyfive = 6;
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js: * these are some comments in the file
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:var stuff = {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:    i: "am string",
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:    blah: function(food) {
ruau/ruau-util/src/test/resources/testAllKindsOfDirectiveGenerate_test.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:var noGood1 = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:var noGood3 = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:    return "the fourth file the parser goes through";
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:var noGood2 = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:var noGood = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_auto.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/resources/testGeneration_mock2.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/resources/testGeneration_mock2.js:son of a diddly
ruau/ruau-util/src/test/resources/testGeneration_mock2.js:    return "like a pirate";
ruau/ruau-util/src/test/resources/testGeneration_mock2.js:var five = 6;
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:var noGood1 = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:       alert("get down to the pop-up only in Testing and Development");
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:var noGood2 = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:var noGood = function(){
ruau/ruau-util/src/test/resources/testIncludeDirective_test.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_prod.js:(function(){var a="like a pirate";window.dress=function(){return a};})();
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:/* generating in: MOCK2*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:/* generating in: MOCK2*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:son of a diddly
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock2.js:/* generating in: MOCK2*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_auto.js:(function(){var a="like a pirate";window.dress=function(){return a};})();
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:/* file testAllKindsOfDirectiveGenerate.js */
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:/* generating in: DEBUG*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:/* generating in: DEBUG*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_debug.js:/* generating in: DEBUG*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:/* generating in: MOCK1*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:/* generating in: MOCK1*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:son of a diddly
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_mock1.js:/* generating in: MOCK1*/
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:(function(){var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:  return"like a pirate"
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:  return"like a pirate"
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:var stuff = {$i$:"am string", $numeros$:23525, $blah$:function(food) {
ruau/ruau-util/src/test/results/DirectiveBasedJavascriptGroupTest/testJavascriptGeneration/testDummy_dev.js:  return"i like to eat " + food
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testCommonInclude.js:    alert("If this stuff was written into a file twice, it would be catastrophic");
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:var noGood1 = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:var noGood3 = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:    return "the fourth file the parser goes through";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:var noGood2 = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:var noGood = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_auto.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:var noGood1 = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:       alert("get down to the pop-up only in Testing and Development");
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:    return "the second file the parser goes through";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:var noGood2 = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:    return "the third file the parser goes through";
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:var noGood = function(){
ruau/ruau-util/src/test/results/IncludeDirectiveTest/testIncludeDirective_test.js:    return "the first file the parser starts parsing";
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock1.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock1.js:son of a diddly
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock1.js:    return "like a pirate";
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock1.js:var five = 6;
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock2.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock2.js:son of a diddly
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock2.js:    return "like a pirate";
ruau/ruau-util/src/test/results/JavascriptGeneratorTest/testGeneration_mock2.js:var five = 6;
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Test:testGetDateISO8601Converter
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01		Parsed date:-28800000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01		Parsed date:-28800000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-02		Parsed date:1333296000000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01		Parsed date:-28800000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1)		Formatted date:1969-12-31		Parsed date:-68400000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1000)		Formatted date:1969-12-31		Parsed date:-68400000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01		Parsed date:1333252800000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(0)		Formatted date:1969-12-31		Parsed date:-68400000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01		Parsed date:0		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01		Parsed date:0		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01		Parsed date:1333238400000		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01		Parsed date:0		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Test:testGetPatternConverter_locale_pattern
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 西元 at 08:00:00 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:星期四, 一月 1, '70		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:8:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "08 o'clock 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "8:00 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:01970.一月.01 西元 08:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:星期四, 1 一月 1970 08:00:00 +0800		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:700101080000+0800		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:1970-01-01T08:00:00.001+0800		Parsed date:1		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 西元 at 08:00:01 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:星期四, 一月 1, '70		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:8:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "08 o'clock 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "8:00 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:01970.一月.01 西元 08:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:星期四, 1 一月 1970 08:00:01 +0800		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:700101080001+0800		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:1970-01-01T08:00:01.000+0800		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "2012.04.02 西元 at 07:27:52 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:星期一, 四月 2, '12		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:7:27 上午		Parsed date:-1980000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "07 o'clock 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "7:27 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:02012.四月.02 西元 07:27 上午		Parsed date:1333322820000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:星期一, 2 四月 2012 07:27:52 +0800		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:120402072752+0800		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:2012-04-02T07:27:52.649+0800		Parsed date:1333322872649		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 西元 at 08:00:00 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:星期四, 一月 1, '70		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:8:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "08 o'clock 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "8:00 上午, +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:01970.一月.01 西元 08:00 上午		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:星期四, 1 一月 1970 08:00:00 +0800		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:700101080000+0800		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:1970-01-01T08:00:00.000+0800		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone:GMT+08:00		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1969.12.31 AD at 19:00:00 EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:Wed, Dec 31, '69		Parsed date:-68400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "07 o'clock PM, Eastern Standard Time" is malformed at "Eastern Standard Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "7:00 PM, EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:01969.December.31 AD 07:00 PM		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:Wed, 31 Dec 1969 19:00:00 -0500		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:691231190000-0500		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:1969-12-31T19:00:00.001-0500		Parsed date:1		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1969.12.31 AD at 19:00:01 EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:Wed, Dec 31, '69		Parsed date:-68400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "07 o'clock PM, Eastern Standard Time" is malformed at "Eastern Standard Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "7:00 PM, EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:01969.December.31 AD 07:00 PM		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:Wed, 31 Dec 1969 19:00:01 -0500		Parsed date:1000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:691231190001-0500		Parsed date:1000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:1969-12-31T19:00:01.000-0500		Parsed date:1000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "2012.04.01 AD at 19:27:52 EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:Sun, Apr 1, '12		Parsed date:1333252800000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:7:27 PM		Parsed date:88020000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "07 o'clock PM, Eastern Daylight Time" is malformed at "Eastern Daylight Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "7:27 PM, EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:02012.April.01 AD 07:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:Sun, 1 Apr 2012 19:27:52 -0400		Parsed date:1333322872000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:120401192752-0400		Parsed date:1333322872000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T19:27:52.649-0400		Parsed date:1333322872649		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1969.12.31 AD at 19:00:00 EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:Wed, Dec 31, '69		Parsed date:-68400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "07 o'clock PM, Eastern Standard Time" is malformed at "Eastern Standard Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "7:00 PM, EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:01969.December.31 AD 07:00 PM		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:Wed, 31 Dec 1969 19:00:00 -0500		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:691231190000-0500		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:1969-12-31T19:00:00.000-0500		Parsed date:0		Locale:English (United States)		TimeZone:EST		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 AD at 00:00:00 UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:Thu, Jan 1, '70		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "12 o'clock AM, Coordinated Universal Time" is malformed at "Coordinated Universal Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "0:00 AM, UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:01970.January.01 AD 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:Thu, 1 Jan 1970 00:00:00 +0000		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:700101000000+0000		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1)		Formatted date:1970-01-01T00:00:00.001+0000		Parsed date:1		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 AD at 00:00:01 UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:Thu, Jan 1, '70		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "12 o'clock AM, Coordinated Universal Time" is malformed at "Coordinated Universal Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "0:00 AM, UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:01970.January.01 AD 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:Thu, 1 Jan 1970 00:00:01 +0000		Parsed date:1000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:700101000001+0000		Parsed date:1000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1000)		Formatted date:1970-01-01T00:00:01.000+0000		Parsed date:1000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "2012.04.01 AD at 23:27:52 UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:Sun, Apr 1, '12		Parsed date:1333238400000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:11:27 PM		Parsed date:84420000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "11 o'clock PM, Coordinated Universal Time" is malformed at "Coordinated Universal Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "11:27 PM, UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:02012.April.01 AD 11:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:Sun, 1 Apr 2012 23:27:52 +0000		Parsed date:1333322872000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:120401232752+0000		Parsed date:1333322872000		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T23:27:52.649+0000		Parsed date:1333322872649		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "1970.01.01 AD at 00:00:00 UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:Thu, Jan 1, '70		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, MMM d, ''yy
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:h:mm a
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "12 o'clock AM, Coordinated Universal Time" is malformed at "Coordinated Universal Time"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Invalid format: "0:00 AM, UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:01970.January.01 AD 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyyy.MMMMM.dd GGG hh:mm aaa
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:Thu, 1 Jan 1970 00:00:00 +0000		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:EEE, d MMM yyyy HH:mm:ss Z
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:700101000000+0000		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyMMddHHmmssZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetPatternConverter_locale_pattern.txt:Input date:Date(0)		Formatted date:1970-01-01T00:00:00.000+0000		Parsed date:0		Locale:English (United States)		TimeZone:GMT		SimpleDateFormat pattern:yyyy-MM-dd'T'HH:mm:ss.SSSZ
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Test:testGetDateTimeStyleConverter_locale_dateStyle_timeStyle
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970年1月1日 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 星期四 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 星期四 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 星期四 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午08時00分01秒		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分01秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1 上午08時00分01秒		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分01秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 上午08時00分01秒		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970年1月1日 上午08時00分01秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 星期四 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 星期四 上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 星期四 上午08時00分01秒		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午 7:27		Parsed date:1333322820000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午 07:27:52		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午07時27分52秒		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "2012/4/2 上午07時27分52秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午 7:27		Parsed date:1333322820000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午 07:27:52		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2 上午07時27分52秒		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "2012/4/2 上午07時27分52秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 上午 7:27		Parsed date:1333322820000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 上午 07:27:52		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 上午07時27分52秒		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "2012年4月2日 上午07時27分52秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 星期一 上午 7:27		Parsed date:1333322820000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 星期一 上午 07:27:52		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 星期一 上午07時27分52秒		Parsed date:1333322872000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:上午 7:27		Parsed date:-1980000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:上午 07:27:52		Parsed date:-1928000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970/1/1 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1970年1月1日 上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 星期四 上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 星期四 上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 星期四 上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:12/31/69 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:12/31/69 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Dec 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Dec 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:December 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Wednesday, December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Wednesday, December 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Wednesday, December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:7:00:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:12/31/69 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:12/31/69 7:00:01 PM		Parsed date:1000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Dec 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Dec 31, 1969 7:00:01 PM		Parsed date:1000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:December 31, 1969 7:00:01 PM		Parsed date:1000		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Wednesday, December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Wednesday, December 31, 1969 7:00:01 PM		Parsed date:1000		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Wednesday, December 31, 1969 7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:7:00:01 PM		Parsed date:86401000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12 7:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12 7:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "4/1/12 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "4/1/12 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012 7:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012 7:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Apr 1, 2012 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Apr 1, 2012 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012 7:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012 7:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "April 1, 2012 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "April 1, 2012 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012 7:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012 7:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Sunday, April 1, 2012 7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:7:27 PM		Parsed date:88020000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:7:27:52 PM		Parsed date:88072000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:12/31/69 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:12/31/69 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "12/31/69 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Dec 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Dec 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Dec 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:December 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Wednesday, December 31, 1969 7:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Wednesday, December 31, 1969 7:00:00 PM		Parsed date:0		Locale:English (United States)		TimeZone: EST		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Wednesday, December 31, 1969 7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:7:00:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1/1/70 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1/1/70 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Jan 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Jan 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:January 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Thursday, January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:Thursday, January 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Thursday, January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1)		Formatted date:12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1/1/70 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1/1/70 12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Jan 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Jan 1, 1970 12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:January 1, 1970 12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Thursday, January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:Thursday, January 1, 1970 12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Thursday, January 1, 1970 12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1000)		Formatted date:12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12 11:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12 11:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "4/1/12 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "4/1/12 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012 11:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012 11:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Apr 1, 2012 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Apr 1, 2012 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012 11:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012 11:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "April 1, 2012 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "April 1, 2012 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012 11:27 PM		Parsed date:1333322820000		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012 11:27:52 PM		Parsed date:1333322872000		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Sunday, April 1, 2012 11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:11:27 PM		Parsed date:84420000		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:11:27:52 PM		Parsed date:84472000		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1/1/70 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1/1/70 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "1/1/70 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Jan 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Jan 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Jan 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2		Time style: -1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:January 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Thursday, January 1, 1970 12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:Thursday, January 1, 1970 12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Invalid format: "Thursday, January 1, 1970 12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeStyleConverter_locale_dateStyle_timeStyle.txt:Input date:Date(0)		Formatted date:12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: -1		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01T08:00:00.001+08:00		Parsed date:1		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01T08:00:01.000+08:00		Parsed date:1000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-02T07:27:52.649+08:00		Parsed date:1333322872649		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01T08:00:00.000+08:00		Parsed date:0		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1)		Formatted date:1969-12-31T19:00:00.001-05:00		Parsed date:1		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1000)		Formatted date:1969-12-31T19:00:01.000-05:00		Parsed date:1000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T19:27:52.649-04:00		Parsed date:1333322872649		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(0)		Formatted date:1969-12-31T19:00:00.000-05:00		Parsed date:0		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01T00:00:00.001Z		Parsed date:1		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01T00:00:01.000Z		Parsed date:1000		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T23:27:52.649Z		Parsed date:1333322872649		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01T00:00:00.000Z		Parsed date:0		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:2012-06-05T13:12Z		Formatted date:2012-06-05T13:12:00.000+08:00		Parsed date:1338873120000
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:2012-06-05T13:12Z		Formatted date:2012-06-05T13:12:00.000-04:00		Parsed date:1338916320000
ruau/ruau-util/src/test/results/DateServiceTest/testGetGenericISO8601Converter.txt:Input date:2012-06-05T13:12Z		Formatted date:2012-06-05T13:12:00.000Z		Parsed date:1338901920000
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Test:testGetDateTimeISO8601Converter
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01T08:00:00.001+08:00		Parsed date:1		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01T08:00:01.000+08:00		Parsed date:1000		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-02T07:27:52.649+08:00		Parsed date:1333322872649		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01T08:00:00.000+08:00		Parsed date:0		Timezone:GMT+08:00
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1)		Formatted date:1969-12-31T19:00:00.001-05:00		Parsed date:1		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1000)		Formatted date:1969-12-31T19:00:01.000-05:00		Parsed date:1000		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T19:27:52.649-04:00		Parsed date:1333322872649		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(0)		Formatted date:1969-12-31T19:00:00.000-05:00		Parsed date:0		Timezone:EST
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1)		Formatted date:1970-01-01T00:00:00.001Z		Parsed date:1		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1000)		Formatted date:1970-01-01T00:00:01.000Z		Parsed date:1000		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(1333322872649)		Formatted date:2012-04-01T23:27:52.649Z		Parsed date:1333322872649		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateTimeISO8601Converter.txt:Input date:Date(0)		Formatted date:1970-01-01T00:00:00.000Z		Parsed date:0		Timezone:GMT
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Test:testGetDateStyleConverter_locale_dateStyle
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:1970年1月1日 星期四		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:1970年1月1日 星期四		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:2012/4/2		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:2012年4月2日 星期一		Parsed date:1333296000000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:1970/1/1		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:1970年1月1日 星期四		Parsed date:-28800000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:Wednesday, December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:Wednesday, December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012		Parsed date:1333252800000		Locale:English (United States)		TimeZone: EST		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:12/31/69		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:Dec 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:Wednesday, December 31, 1969		Parsed date:-68400000		Locale:English (United States)		TimeZone: EST		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1)		Formatted date:Thursday, January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1000)		Formatted date:Thursday, January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:4/1/12		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:Apr 1, 2012		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:April 1, 2012		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(1333322872649)		Formatted date:Sunday, April 1, 2012		Parsed date:1333238400000		Locale:English (United States)		TimeZone: GMT		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:1/1/70		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:Jan 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetDateStyleConverter_locale_dateStyle.txt:Input date:Date(0)		Formatted date:Thursday, January 1, 1970		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Date style: 0
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Test:testGetTimeStyleConverter_locale_timeStyle
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:上午 08:00:01		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:上午08時00分01秒		Parsed date:1000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "上午08時00分01秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:上午 7:27		Parsed date:-1980000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:上午 07:27:52		Parsed date:-1928000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:上午07時27分52秒		Parsed date:-1928000		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "上午07時27分52秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:上午 8:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:上午 08:00:00		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:上午08時00分00秒		Parsed date:0		Locale:Chinese (Taiwan)		TimeZone: GMT+08:00		Time style: 1
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "上午08時00分00秒 +08:00" is malformed at "+08:00"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:7:00:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:7:00:01 PM		Parsed date:86401000		Locale:English (United States)		TimeZone: EST		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:01 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:7:27 PM		Parsed date:88020000		Locale:English (United States)		TimeZone: EST		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:7:27:52 PM		Parsed date:88072000		Locale:English (United States)		TimeZone: EST		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:27:52 PM EDT" is malformed at "EDT"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:7:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:7:00:00 PM		Parsed date:86400000		Locale:English (United States)		TimeZone: EST		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "7:00:00 PM EST" is malformed at "EST"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1)		Formatted date:12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1000)		Formatted date:12:00:01 AM		Parsed date:1000		Locale:English (United States)		TimeZone: GMT		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:01 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:11:27 PM		Parsed date:84420000		Locale:English (United States)		TimeZone: GMT		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(1333322872649)		Formatted date:11:27:52 PM		Parsed date:84472000		Locale:English (United States)		TimeZone: GMT		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "11:27:52 PM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:12:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Time style: 3
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Input date:Date(0)		Formatted date:12:00:00 AM		Parsed date:0		Locale:English (United States)		TimeZone: GMT		Time style: 2
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DateServiceTest/testGetTimeStyleConverter_locale_timeStyle.txt:Invalid format: "12:00:00 AM UTC" is malformed at "UTC"
ruau/ruau-util/src/test/results/DirectiveParserTest/testMultilineDirective.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/results/DirectiveParserTest/testMultilineDirective.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_prod.js:/* generating in: PRODUCTION*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:/* file testAllKindsOfDirectiveGenerate.js */
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:/* generating in: DEVELOPMENT*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:/* generating in: DEVELOPMENT*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:/* generating in: DEVELOPMENT*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_dev.js:/* generating in: DEVELOPMENT*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_auto.js:/* generating in: AUTOTESTING*/
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:/* file testAllKindsOfDirectiveGenerate.js */
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:var rrrrr = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:    return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:var five = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:     * The contents here should just appear in used by setContent() on the directive
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:     * So if we were to call getContent() on the directive, we should get this stuff back.
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: * Putting this section just to make the test case more realistic
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: *This section should not change the way or, number of errors generated when this file is parsed
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:var rrrrr2 = "ARRRRRRRR";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:     * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:     * Also, this section will appear only in the _test file
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: * This section will just be spit out as is in Testing mode.
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: * This section will appear in _test, _dev files
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:function dressPiratesOfTheCarribean() {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: return "like a pirate";
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:var sixtyfive = 6;
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js: * these are some comments in the file
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:var stuff = {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:    i: "am string",
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:    blah: function(food) {
ruau/ruau-util/src/test/results/DirectiveParserTest/testAllKindsOfDirectiveGenerate_test.js:        return "i like to eat " + food;
ruau/ruau-util/src/test/results/IfDirectiveTest/testJSSourceWithIfDirective_test.js:   alert("get down");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * You may obtain a copy of the License at
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * See the License for the specific language governing permissions and
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js: * limitations under the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:Function.RegisterNamespace("Test.Tools.Ruue.Attributes");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:Test.Tools.Ruue.Attributes.ImportAttribute=function(groupName, callback){
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    var root=System.IO.Path.GetRoot();
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    System.IO.Path.SetRoot(Test.Tools.Ruue.Attributes.ImportAttribute.BuildDirectory);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    groupName = groupName.replace(/\./g,'/');
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    var args=[String.Format("target/xunitjs/{0}.js",groupName)];
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    if(Object.IsType(Function,callback))args.push(callback);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    System.Script.ScriptLoader.Attributes.ImportAttribute.apply(this,args);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:    System.IO.Path.SetRoot(root);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:Test.Tools.Ruue.Attributes.ImportAttribute.BuildDirectory=(System.Environment&&System.Environment.GetWorkingDirectory() || "");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js://Global Convenience Mappings
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportAttribute.js:Import = Test.Tools.Ruue.Attributes.ImportAttribute;
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * You may obtain a copy of the License at
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * See the License for the specific language governing permissions and
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js: * limitations under the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:Function.RegisterNamespace("Test.Mocks");
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:		return Mocks.GetMock(Object.Global(),"window",
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					return element.CSSStyleDeclaration;
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				setTimeout:function(fn,delay){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					return Date.now();
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				clearTimeout:function(id){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				addEventListener:function(type,fn,capture){},
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				removeEventListener:function(type,fn,capture){},
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				requestAnimationFrame:function(callback){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					callback();
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					return Date.now();
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				cancelAnimationFrame:function(id){},
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				appendChild:function(c){}
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					location:{hash:''},
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					createElement:function(tagName){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:						return Test.Stubs.Ruue.Dom.GetNode({
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:							classList:{add:function(className){}},
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:							tagName:tagName,
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:							getElementsByClassName:function(_class){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					createDocumentFragment:function(){
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:						return Test.Stubs.Ruue.Dom.GetNode({style:{height:'',width:''}});
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:				navigator:{
ruau/ruau-util/src/test/tools/xUnit/dependencies/NeededMocks.js:					msPointerEnabled:{}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * You may obtain a copy of the License at
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * See the License for the specific language governing permissions and
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * limitations under the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:Function.RegisterNamespace("Test.Stubs.Ruue");
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js: * Ruue Stub
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:Test.Stubs.Ruue=new function(){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetAction=function(params,state,callback,returnValue){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getDef:{returnValue:{}},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getParam:function(name){return this.params&&this.params[name];},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getParams:function(){return this.params;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getReturnValue:function(){return this.returnValue;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getState:function(){return this.state;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getStorage:{returnValue:{}},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            run:{parameters:["evt"]},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            runAfter:{parameters:["action"]},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:			setAbortable: {},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:			setStorable: {},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setCallback:function(scope,callback,name){this.callback=callback;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setParams:function(params){this.params=params;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            toJSON:function(){return {id:this.id,descriptor:{},params:this.params}}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        },{ruauType:"Action",callback:callback||null,params:params||{},returnValue:returnValue||{},state:state||{}});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetController=function(target){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        if(target){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            target.runAfter=Stubs.GetMethod("action",undefined);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        return target;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetEvent=function(params){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getParam:function(name){return this.params&&this.params[name];},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getParams:function(){return this.params;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setParams:function(params){this.params=params;return this;}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        },{params:params||{}});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetValue=function(value){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getValue:function(){return value;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setValue:function(newValue){value=newValue;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            unwrap:function(){return value;}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetComponent = function (attributes, children, propertyBag, descriptor) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stubbedAttributes={};
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        Object.ForEach(attributes||{},function(value,context){stubbedAttributes[context.Name]=Stubs.Ruue.GetValue(value);});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stubbedChildren={};
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        Object.ForEach(children||{},function(value,context){stubbedChildren[context.Name]=value&&(Object.IsType(Stubs.Ruue.GetComponent,value)||Object.IsType(Array,value))&&value||Stubs.Ruue.GetComponent(value);});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stubbedAttributeDefs=Stubs.GetList(attributes&&Object.keys(attributes)||[], {each:function(value){return this.Source_Value;}});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stubbedDescriptor=Stubs.GetObject({getQualifiedName:function(){return descriptor;}});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stubbedDef=Stubs.GetObject({getAttributeDefs:{returnValue:stubbedAttributeDefs}, getDescriptor:stubbedDescriptor});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:		var getValue = function(expression){return stubbedAttributes[expression]||Stubs.Ruue.GetValue()};
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:		var setValue = function(expression,value){if(stubbedAttributes[expression])stubbedAttributes[expression].setValue(value);else stubbedAttributes[expression]=Stubs.Ruue.GetValue(value)};
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var stub=Stubs.GetObject({
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            get:function(expression){return stubbedAttributes[expression]&&stubbedAttributes[expression].getValue();},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:					getValue:function(expression){return getValue(String.Format("v.{0}",expression))},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:					setValue:function(expression,value){setValue(String.Format("v.{0}", expression),value)}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getDef:{returnValue:stubbedDef},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getElement:{returnValue:Stubs.Dom.GetNode()},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getEventDispatcher:{},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getValue:getValue,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setValue:setValue,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            set:setValue
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        },propertyBag||{});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        stub.constructor=Stubs.Ruue.GetComponent;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:Test.Stubs.Ruue.Dom=new function(){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    var stubDom = this;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetNode=function(properties,attributes,childNodes,nodeName,nodeType){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        attributes=Object.Copy({},attributes||{});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        childNodes=Array.Copy(childNodes||[]);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        var node=Stubs.GetObject({
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            appendChild:function(child){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                assignReferences(this.childNodes[this.childNodes.length - 1], undefined, child);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                assignReferences(child, this.childNodes[this.childNodes.length - 1], null, this);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                return stubDom.GetNode(Object.Copy({}, this, { baseURI: 1, nodeValue: null,ownerDocument: null,textContent: ''}),attributes,deep?this.childNodes:null,this.nodeName,this.nodeType);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getAttribute:function(name){return attributes[name]||null;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            hasChildNodes:function(){return this.childNodes.length>0;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                if(!referenceElement)return this.appendChild(newElement);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                for(var i=0;i<this.childNodes.length;i++){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(newElement,referenceElement.previousSibling, referenceElement, this);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(referenceElement,newElement);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                throw new Error("Stubs.Dom.GetNode.insertBefore: 'referenceElement' was not found in the childNodes collection.");
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                for (var i = 0; i < this.childNodes.length; i++) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(this.childNodes[i-1],undefined,this.childNodes[i+1]||null);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(this.childNodes[i+1],this.childNodes[i-1]||null);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(child,null,null,null);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                throw new Error("Stubs.Dom.GetNode.removeChild: 'child' was not found in the childNodes collection.");
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            replaceChild: function (newChild,oldChild) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                for (var i = 0; i < this.childNodes.length; i++) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(this.childNodes[i - 1], undefined, newChild);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(this.childNodes[i + 1], newChild);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(newChild, this.childNodes[i - 1]||null, this.childNodes[i + 1]||null, this);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        assignReferences(oldChild, null, null, null);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                throw new Error("Stubs.Dom.GetNode.replaceChild: 'oldChild' was not found in the childNodes collection.");
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setAttribute:function(name,value){attributes[name]=value;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            addEventListener:function(type,fn,capture){},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            removeEventListener:function(type,fn,capture){}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            baseURI:'',
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            lastChild:null,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            nodeName:nodeName||'DIV',
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            nodeValue:null,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            parentElement: null,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            parentNode:null,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        for(var i=0;i<childNodes.length;i++){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            assignReferences(childNodes[i],childNodes[i-1]||null,childNodes[i+1]||null,node);
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    this.GetXhr=function(response,headers,status,statusText){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        headers=Object.Copy({},headers||{});
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            abort:{},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getAllResponseHeaders:function(){return headers;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            getResponseHeader:function(header){return headers[header]||null;},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            open: function(method, url, async, user, password){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                this.readyState=1;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                if (Object.IsType(Function, this.onreadystatechange)) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                    this.onreadystatechange();
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            overrideMimeType:{parameters:["mimeType"]},
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            send: function (data) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                for(var i=2;i<=4;i++){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                    this.readyState = i;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                    if (Object.IsType(Function, this.onreadystatechange)) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:                        this.onreadystatechange();
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            setRequestHeader:function(header,value){headers[header]=value;}
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            readyState: 0,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            status: status||200,
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            statusText: statusText||"200 OK"
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    // Private Methods
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    function assignReferences(target, previous, next, parent) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        if (target) {
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            if(previous!==undefined)target.previousSibling = previous || null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            if(next!==undefined)target.nextSibling = next || null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            if(parent!==undefined)target.parentNode = target.parentElement = parent || null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            target.ownerDocument=target.parentNode && target.parentNode.ownerDocument || null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:    function resetChildPointers(target){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:        if(target){
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            target.firstChild=target.childNodes[0]||null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/Stubs.js:            target.lastChild=target.childNodes[target.childNodes.length-1]||null;
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * you may not use this file except in compliance with the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * You may obtain a copy of the License at
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * See the License for the specific language governing permissions and
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js: * limitations under the License.
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:Function.RegisterNamespace("Test.Tools.Ruue.Attributes");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:Test.Tools.Ruue.Attributes.ImportJsonAttribute=function(path, callback){
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    var root=System.IO.Path.GetRoot();
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    System.IO.Path.SetRoot(Test.Tools.Ruue.Attributes.ImportJsonAttribute.BuildDirectory);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    path=path.replace(/\./g,'/');
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    var args=[String.Format("ruau-components/src/main/components/{0}.js",path)];
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    if(Object.IsType(Function,callback))args.push(callback);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    System.Script.ScriptLoader.Attributes.ImportJsonAttribute.apply(this,args);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:    System.IO.Path.SetRoot(root);
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:Test.Tools.Ruue.Attributes.ImportJsonAttribute.BuildDirectory=(System.Environment&&System.Environment.GetWorkingDirectory() + "/../" || "");
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js://Global Convenience Mappings
ruau/ruau-util/src/test/tools/xUnit/dependencies/ImportJsonAttribute.js:ImportJson = Test.Tools.Ruue.Attributes.ImportJsonAttribute;
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:	<xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'" />
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'" />
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:	<xsl:template match="/xunit/run">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:		<testsuite tests="{@count}" failures="{@failures}" errors="{@errors}"
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:			skipped="{@skipped}" time="{@duration}" name="xUnit.js" timestamp="{@timestamp}">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:				<xsl:for-each select="/xunit/files/file">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:					<property name="file" value="{@path}" />
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:				</xsl:for-each>
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:			<xsl:for-each select="/xunit/facts/fact">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:				<testcase time="{@duration}" classname="xunit" name="{@path}">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:						<xsl:element name="{translate(@result,$uppercase,$lowercase)}">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:							<xsl:attribute name="message">
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:							     <xsl:value-of select="@message" />
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:							</xsl:attribute>
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:							<xsl:value-of select="@message" />
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:				</testcase>
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:			</xsl:for-each>
ruau/ruau-util/src/test/tools/xUnit/junit.xsl:	</xsl:template>
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// Copyright (c) 2006-2013 John Buchanan 
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// Permission is hereby granted, free of charge, to any person obtaining  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// a copy of this software and associated CODumentation files (the "Software"),  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// to deal in the Software without restriction, including without limitation the  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// sell copies of the Software, and to permit persons to whom the Software is  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// The above copyright notice and this permission notice shall be included in  
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:// all copies or substantial portions of the Software. 
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Clear=function(array){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.Clear: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var i=0;i<array.length;i++)array[i]=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    array.length=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Contains=function(array,expected,predicate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.Contains: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return Array.IndexOf(array,expected,0,predicate)>-1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Copy=function(sourceArray,sourceIndex,destinationArray,destinationIndex,length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,sourceArray)&&!sourceArray.hasOwnProperty("length"))throw new Error("Array.Copy: 'sourceArray' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Number,sourceIndex))throw new Error("Array.Copy: 'sourceIndex' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(sourceIndex<0)throw new Error("Array.Copy: 'sourceIndex' may not be negative.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(destinationArray==undefined)destinationArray=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,destinationArray))throw new Error("Array.Copy: 'destinationArray' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(destinationIndex==undefined)destinationIndex=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Number,destinationIndex))throw new Error("Array.Copy: 'destinationIndex' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(destinationIndex<0)throw new Error("Array.Copy: 'destinationIndex' may not be negative.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length<5){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        length=sourceArray.length-sourceIndex;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Number,length))throw new Error("Array.Copy: 'length' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(length<0)length=sourceArray.length-sourceIndex;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Array.prototype.splice.apply(destinationArray,[destinationIndex,0].concat(Array.prototype.slice.apply(sourceArray,[sourceIndex,length])));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return destinationArray;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,expected))throw new Error("Array.Equals: 'expected' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value="Array.Equals: 'actual' was not a valid Array.";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected.length!=actual.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Array.Equals: Expected array of length '{0}', found array of length '{1}'.",expected.length,actual.length);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var i=0;i<expected.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.Equals(expected[i],actual[i])){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value=String.Format("Array.Equals: Unexpected value found at position [{0}]. Expected '{1}', found '{2}'.",i,expected[i],actual[i]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Find=function(array,expected,predicate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.Contains: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var index=Array.IndexOf(array,expected,0,predicate);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(index>-1)return array[index];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.ForEach=function(array,handler,predicate,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.ForEach: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,handler))throw new Error("Array.ForEach: argument 'handler' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(predicate!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,predicate))throw new Error("Array.ForEach: 'predicate' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Cancel:false,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Instance:array
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(context.Index=0;context.Index<array.length;context.Index++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Current=array[context.Index];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!predicate||predicate(context.Current,context)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            handler(context.Current,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(context.Cancel)break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.IndexOf=function(array,expected,startingIndex,predicate,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.IndexOf: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(startingIndex!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Number,startingIndex))throw new Error("Array.IndexOf: 'startingIndex' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(predicate!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,predicate))throw new Error("Array.IndexOf: 'predicate' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Cancel:false,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Instance:array
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(context.Index=startingIndex||0;context.Index<array.length;context.Index++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Current=array[context.Index];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(predicate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(predicate(context.Current,context))return context.Index;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(Object.Equals(expected,context.Current))return context.Index;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(context.Cancel)break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.IsEmpty=function(array){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.IsEmpty: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return array.length==0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Remove=function(array,expected,predicate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.Remove: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var index=Array.IndexOf(array,expected,0,predicate);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(index>-1)return array.splice(index,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Array.Shuffle=function(array){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Array,array))throw new Error("Array.Shuffle: 'array' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var result=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var target=array.slice(0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    while(target.length)result.push(target.splice(Math.floor(Math.random()*target.length),1)[0]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Boolean.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Boolean,expected))throw new Error("Boolean.Equals: 'expected' must be a valid Boolean.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Boolean,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        actual=!!actual;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected!=actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Boolean.Equals: Booleans did not match. Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Date.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Date,expected))throw new Error("Date.Equals: 'expected' must be a valid Date.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Date,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value="Date.Equals: 'actual' was not a valid Date.";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected.getTime()!=actual.getTime()){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Date.Equals: Dates did not match. Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Date.Format=function(date,formatString){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Date,date))throw new Error("Date.Format: 'date' must be a valid Date.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,formatString&&formatString.toString))throw new Error("Date.Format: 'formatString' must implement toString().");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    switch(formatString){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case 'd':
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return String.Format("{0}/{1}/{2}",date.getMonth()+1,date.getDate(),date.getFullYear());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        default:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            // Freeform format
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var format=formatString
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/yyyy/gm,'{0}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/yy/gm,'{1}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/MM/gm,'{2}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/M/gm,'{3}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/dd/gm,'{4}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/d/gm,'{5}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/hh/gm,'{6}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/h/gm,'{7}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/HH/gm,'{8}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/H/gm,'{9}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/mm/gm,'{10}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/m/gm,'{11}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/ss/gm,'{12}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/s/gm,'{13}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/tt/gm,'{14}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/ii/gm,'{15}')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                .replace(/i/gm,'{16}');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var hours=date.getHours();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var meridianHours=hours>0?hours>12?hours-12:hours:12;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return String.Format(
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                format,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getFullYear(),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getYear(),0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getMonth()+1,0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getMonth()+1,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getDate(),0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getDate(),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(hours,0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(meridianHours,0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                meridianHours,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getMinutes(),0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getMinutes(),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getSeconds(),0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getSeconds(),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                String.Pad(date.getMilliseconds(),0,2),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                date.getMilliseconds()
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Error.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Error,expected))throw new Error("Error.Equals: 'expected' must be a valid Error.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Error,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value="Error.Equals: 'actual' was not a valid Error.";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var fields=["name","message","description","number","fileName"];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var i=0;i<fields.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var field=fields[i];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(expected.hasOwnProperty(field)&&!Object.Equals(expected[field],actual[field])){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value=String.Format("Error.Equals: '{0}' did not match. Expected value '{1}', found '{2}'.",field,expected[field],actual[field]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Error,error))throw new Error("Error.IsEmpty: 'error' must be a valid Error.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var message=(this.hasOwnProperty("message")&&!String.IsEmpty(this.message)?this.message:this.description);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(message==undefined)message='';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(String,message))message=this+'';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return message;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,expected))throw new Error("Function.Equals: 'expected' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value="Function.Equals: 'actual' must be a valid Function pointer.";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected!=actual&&expected.toString()!=actual.toString()){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Function.Equals: function bodies do not match. Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,method))throw new Error("Function.GetBody: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var body=method.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return body.slice(body.indexOf('{')+1,body.lastIndexOf('}'));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.GetDelegate=function(method,instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,method))throw new Error("Function.GetDelegate: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!instance)throw new Error("Function.GetDelegate: 'instance' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var preArgs=Array.prototype.slice.call(arguments,2);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return function delegate(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var args=preArgs.slice(0).concat(Array.prototype.slice.call(arguments,0));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(this.constructor===arguments.callee||this.constructor===delegate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var argumentList=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var i=0;i<args.length;i++)argumentList.push(String.Format("args[{0}]",i));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return Function("constructor","args",String.Format("Object.Copy(constructor.prototype,this.constructor.prototype);return new constructor({0});",argumentList.join(','))).apply(this,[method,args]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return method.apply(instance,args);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.GetName=function(method){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,method))throw new Error("Function.GetName: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var funcStr=String.Trim(method.toString());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var name=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(funcStr.match(/\bfunction\s?([^(]*)\(/)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        name=String.Trim(RegExp.$1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return name||"[anonymous]";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.GetParameters=function(method){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,method))throw new Error("Function.GetParameters: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var funcStr=method.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var parenIndex=funcStr.indexOf('(')+1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var paramList=funcStr.substring(parenIndex,funcStr.indexOf(')',parenIndex)).replace(/\s/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    paramList=String.TrimEnd(paramList,"/**/");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(paramList)return paramList.split(',');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.GetTestable=function(method){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var testables=[
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        "if(!this._GetMember)this._GetMember=function(name){return eval(name);};",
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        "if(!this._SetMember)this._SetMember=function(name,value){eval(\"if(typeof(\"+name+\")!=\\\"undefined\\\")\"+name+\"=value;\");};"
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var testableFunc=(typeof(method)=="object"?method.constructor:method).toString().replace(/(function[^{]*\{)(\s*)/g,"$1$2"+testables.join("$2")+"$2");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return Function(String.Format("return false||({0})",testableFunc))();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,method))throw new Error("Function.IsEmpty: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var body=method.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    body=body.replace(/^[^{]*{|}\s*$/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    body=body.replace(/\/\/[^\n]*/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var startIndex=body.indexOf("/*");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        body=[body.substring(0,startIndex),body.substring(body.indexOf('*/',startIndex)+2)].join('');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.IsNamespace=function(target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return target&&target.constructor&&target.constructor.IsNamespace===true||false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace=function(path,rootContainer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,path&&path.toString))throw new Error("Function.RegisterNamespace: 'path' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var nameSpaces=path.toString().split('.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var container=rootContainer||Object.Global();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var i=0;i<nameSpaces.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!container[nameSpaces[i]]){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            (container[nameSpaces[i]]={}).constructor={IsNamespace:true};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        container=container[nameSpaces[i]];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.prototype.Inherit=function(type,name){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,type&&type.apply))throw new Error(String.Format("{0}.Inherit: 'type' must be a valid Function pointer.",name||Function.GetName(this)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(this.base&&this.prototype&&this.prototype.base)throw new Error(String.Format("{0}.Inherit: unable to inherit {1}. {0} already inherits {2}.",name||Function.GetName(this),Function.GetName(type),Function.GetName(this.base)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.base=type;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name=name||'(anonymous)';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.base=getBaseDelegate(constructor,type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.valueOf=function(){return constructor;};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getBaseDelegate(constructor,baseType){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var ancestorBase=baseType&&baseType.base&&baseType.prototype.base||null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var delegate=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var classMembers=getMemberMap(this);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var result=scopeDelegate.apply(this,[baseType,ancestorBase].concat(Array.prototype.slice.call(arguments,0)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var baseMembers=getMemberMap(this,classMembers);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Object.ForEach(baseMembers,addBaseMember,null,{Members:classMembers,Target:this,Base:ancestorBase});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        delegate.base=ancestorBase;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        delegate.constructor=baseType;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        delegate.valueOf=function(){return baseType;}
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return delegate;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addBaseMember(member,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Function,member))member=Function.GetDelegate(scopeDelegate,context.Target,member,context.Base);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(context.Members.hasOwnProperty(context.Name))context.Target[context.Name]=context.Members[context.Name];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Target.base[context.Name]=member;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function scopeDelegate(method,scope){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var base=this.base;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.base=scope||null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var result=method.apply(this,Array.prototype.slice.call(arguments,2));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.base=base;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getMemberMap(target,exclusions){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var map={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var x in target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!exclusions||exclusions[x]!==target[x])map[x]=target[x];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return map;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.prototype.Implement=function(type,name){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var instance=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in type){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,this.prototype[x])&&!Object.IsType(Function,getInstance(this)[x]))throw new Error(String.Format("{0}.Implement: does not implement interface member '{1}'",name||Function.GetName(this),x));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var expectedParams=Function.GetParameters(type[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var actualParams=Function.GetParameters(this.prototype[x]||getInstance(this)[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Array.Equals(expectedParams,actualParams))throw new Error(String.Format("{0}.Implement: The signature '{0}.{2}({1})' does not match interface member '{4}.{2}({3})'",name||Function.GetName(this),actualParams,x,expectedParams,Function.GetName(Object.IsType(Function,type)?type:type.constructor)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getInstance(target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(instance)return instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            instance={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            target.apply(instance,[]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            instance=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            throw new Error(String.Format("{0}.Implement: unable to instantiate constructor. {1}",name||Function.GetName(target),e));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Number.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        expected=parseFloat(expected);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(isNaN(expected))throw new Error("Number.Equals: 'expected' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Number,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        actual=parseFloat(actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(isNaN(actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value="Number.Equals: 'actual' was not convertible to Number.";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected!=actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Number.Equals: Numbers do not match. Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Number.Trim=function(number,decimalPlaces){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!decimalPlaces)decimalPlaces=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var factor=Math.pow(10,decimalPlaces);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return Math.round(number*factor)/factor;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Clone=function(instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!arguments.length)throw new Error("Object.Clone: no argument passed for 'instance'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var clone=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(instance!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        switch(Object.GetType(instance)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Boolean:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Function:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Number:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case String:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                clone=instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Array:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                clone=new Array();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Date:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                clone=new Date(instance.getTime());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Error:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                clone=new Error(instance.toString());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            case Object:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            default:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var x in instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(clone[x]!=instance[x])clone[x]=Object.Clone(instance[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var glitchedProperties=["constructor","toString","valueOf","toLocaleString","prototype","isPrototypeOf","propertyIsEnumerable","hasOwnProperty","length","unique"];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var g=0;g<glitchedProperties.length;g++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var prop=glitchedProperties[g];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(typeof(clone[prop])!="undefined"&&clone[prop]!=instance[prop])clone[prop]=instance[prop];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        clone=instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Contains=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected==undefined)throw new Error("Object.Contains: 'expected' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(actual==undefined)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Array,actual))return Array.Contains(actual,expected);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(String,actual))return String.Contains(actual,expected);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in expected){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var context={Cancel:false,Current:x,Instance:actual,Matches:expected};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!expected[x](actual[x],context))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(context.Cancel)break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.Equals(expected[x],actual[x]))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Copy=function(target,source,subset){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in subset||source){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.prototype.hasOwnProperty.call(source,x))target[x]=source[x];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==0)throw new Error("Object.Equals: 'expected' must be a valid reference.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==1)throw new Error("Object.Equals: 'actual' must be a valid reference.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.Same(expected,actual))return true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.Same(expected,actual)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value=String.Format("Object.Equals: Expected '{0}', found '{1}'.",String(expected),actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Array,expected))return Array.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Boolean,expected))return Boolean.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Error,expected))return Error.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Function,expected))return Function.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Number,expected))return Number.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(String,expected))return String.Equals(expected,actual,reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(typeof(expected)!="object"||actual==undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("Object.Equals: Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var x=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var list={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.Equals(expected[x],actual[x],reason)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value=String.Format("Object.Equals: property '{0}' does not match. Expected value '{1}', found '{2}'.",x,expected[x],actual[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(x in actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(reason)reason.Value=String.Format("Object.Equals: found unexpected property '{0}' on actual, with value '{1}'",x,actual[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.ForEach=function(object,handler,predicate,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(object==undefined)throw new Error("Object.ForEach: 'object' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,handler))throw new Error("Object.ForEach: argument 'handler' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(predicate!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,predicate))throw new Error("Object.ForEach: 'predicate' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Cancel:false,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Instance:object,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Name:''
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var blankObject={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var prop in blankObject)if(!blankObject[prop])blankObject[prop]=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in object){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(blankObject[x])continue;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Name=x;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!predicate||predicate(context.Current,context)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            handler(context.Current,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(context.Cancel)break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.GetKeys=function(target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Object,target))throw new Error("Object.GetKeys: 'target' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Function,Object.keys))return Object.keys(target);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var keys=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var key in target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.prototype.hasOwnProperty.call(target,key))keys.push(key);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.GetPredicate=function(expected){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected==undefined)throw new Error("Object.GetPredicate: 'expected' was undefined.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return Object.IsType(expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.GetType=function(instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(instance==undefined)return instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var type=typeof(instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case "boolean":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            type=Boolean;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case "number":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case "function":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            switch(Function.GetName(instance.constructor)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                case "RegExp":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                case "Function":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case "object":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            type=instance.constructor;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case "string":
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Global=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Inherits=function(type,instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,type))throw new Error("Object.Inherits: 'type' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(instance==undefined)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var constructor=(Object.IsType(Function,instance)&&instance.base)||instance.base||instance.constructor;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!constructor||constructor==constructor.constructor)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Implements=function(type,target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,type&&type.constructor))throw new Error("Object.Implements: 'type' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(target==undefined)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var instance=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Function,target)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            instance=new target();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            // Not a function? Might be a 2. 0_o
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            instance=target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    }else instance=target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in type){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.IsType(Function,instance[x]))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var expectedParams=Function.GetParameters(type[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var actualParams=Function.GetParameters(instance[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Array.Equals(expectedParams,actualParams))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(typeof(instance[x])=='undefined')return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.IsEmpty=function(instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(instance==undefined)throw new Error("Object.IsEmpty: 'instance' was undefined.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Array,instance))return Array.IsEmpty(instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Boolean,instance))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Date,instance))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Error,instance))return Error.IsEmpty(instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Function,instance))return Function.IsEmpty(instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Number,instance))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(String,instance))return String.IsEmpty(instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in instance)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.IsType=function(type,instance){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(type==undefined||typeof(type)!="function")throw new Error("Object.IsType: 'type' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(instance==undefined)return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case Function:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return typeof(instance)=="function";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case RegExp:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return instance && instance.constructor && instance.constructor==RegExp;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case Object:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return instance&&typeof(instance)=="object"&&!Array.Contains([Array,Boolean,Date,Error,Function],instance.constructor);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        case Error:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(instance.constructor&&instance.constructor.toString().toLowerCase()=="[object error]")return true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            //fallthrough, test constructor
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        default:
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(instance instanceof type)return true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(instance.constructor==type||instance.constructor+''==type+'')return true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return Object.Inherits(type,instance);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Resolve=function(path,rootContainer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(path==undefined)return null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var object=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(Object.IsType(Function,path&&path.toString)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        path=path.toString().split('.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var container=rootContainer||Object.Global();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<path.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!(container=container[path[i]]))break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        object=container;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Object.Same=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return expected===actual;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var x in properties){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var value=properties[x];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(value&&typeof(value)=="object"){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(object[x]==undefined)object[x]=value;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Object.Set(object[x],value);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }else object[x]=value;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Concat=function(input1,input2,inputN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var output=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    for(var i=0;i<arguments.length;i++)output.push(arguments[i]||'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Contains=function(input,pattern,ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==0)throw new Error("String.Contains: no argument was passed for 'input'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==1)throw new Error("String.Contains: no argument was passed for 'pattern'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(input==undefined||!Object.IsType(Function,input.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(pattern==undefined||!Object.IsType(Function,pattern.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    pattern=pattern.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=input.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        pattern=pattern.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return input.indexOf(pattern)>-1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Format=function(formatString){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,formatString.toString))throw new Error("String.Format: 'formatString' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var formatArguments=Array.prototype.slice.call(arguments,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return formatString.replace(/\{(\d*)\}/gm,getFormatArgument);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getFormatArgument(match,index,position){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        index=parseInt(index);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(index>=formatArguments.length)throw new Error(["String.Format: format match index was out of bounds at position [",index,"]."].join(''));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Function,formatArguments[index]&&formatArguments[index].toString))return formatArguments[index].toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return formatArguments[index]+'';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.EndsWith=function(input,pattern,ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==0)throw new Error("String.EndsWith: no argument was provided for 'input'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==1)throw new Error("String.EndsWith: no argument was provided for 'pattern'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(input==undefined||!Object.IsType(Function,input.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(pattern==undefined||!Object.IsType(Function,pattern.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    pattern=pattern.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=input.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        pattern=pattern.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var index=input.lastIndexOf(pattern);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return index>=0&&index==input.length-pattern.length;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Equals=function(expected,actual,reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(String,expected))throw new Error("String.Equals: 'expected' must contain a valid String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(actual==undefined)actual=String(actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,expected.toString))throw new Error("String.Equals: 'expected' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,actual.toString))throw new Error("String.Equals: 'actual' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(expected.toString()!=actual.toString()){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(reason)reason.Value=String.Format("String.Equals: Strings did not match. Expected '{0}', found '{1}'.",expected,actual);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(String,input))throw new Error("String.IsEmpty: 'input' must contain a valid String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Pad=function(input,pattern,minimumLength){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,input!=undefined&&input.toString))throw new Error("String.Pad: 'input' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,pattern!=undefined&&pattern.toString))throw new Error("String.Pad: 'pattern' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Number,minimumLength))throw new Error("String.Pad: 'minimumLength' must be a valid Number.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    pattern=pattern.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var difference=minimumLength-input.length;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(difference>0&&pattern.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var repeater=(new Array(1+Math.ceil(difference/pattern.length)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=String.Format("{0}{1}",repeater.join(pattern),input);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.StartsWith=function(input,pattern,ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==0)throw new Error("String.StartsWith: no argument was provided for 'input'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(arguments.length==1)throw new Error("String.StartsWith: no argument was provided for 'pattern'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(input==undefined||!Object.IsType(Function,input.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(pattern==undefined||!Object.IsType(Function,pattern.toString))return false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    pattern=pattern.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(ignoreCase){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=input.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        pattern=pattern.toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return input.indexOf(pattern)==0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.Trim=function(input,char1,char2,charN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var chars=Array.prototype.slice.call(arguments,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(chars.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<chars.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(chars[i]==undefined||!Object.IsType(Function,chars[i].toString))throw new Error(String.Format("String.Trim: char at position [{0}] was not convertible to String.",i));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=String.TrimEnd.apply(input,[input].concat(chars));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        input=String.TrimStart.apply(input,[input].concat(chars));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return input.replace(/^\s*|\s*$/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.TrimEnd=function(input,char1,char2,charN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var chars=Array.prototype.slice.call(arguments,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(chars.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var found;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            found=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var i=0;i<chars.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(chars[i]==undefined||!Object.IsType(Function,chars[i].toString))throw new Error(String.Format("String.TrimEnd: char at position [{0}] was not convertible to String.",i));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                chars[i]=chars[i].toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(String.EndsWith(input,chars[i])){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    input=input.substring(0,input.length-chars[i].length);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return input.replace(/\s*$/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:String.TrimStart=function(input,char1,char2,charN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(input==undefined||!Object.IsType(Function,input.toString))throw new Error("String.TrimStart: 'input' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var chars=Array.prototype.slice.call(arguments,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(chars.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var found;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            found=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var i=0;i<chars.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(chars[i]==undefined||!Object.IsType(Function,chars[i].toString))throw new Error(String.Format("String.TrimStart: char at position [{0}] was not convertible to String.",i));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                chars[i]=chars[i].toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(String.StartsWith(input,chars[i])){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    input=input.substring(chars[i].length,input.length);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return input.replace(/^\s*/g,'');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Event");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Event.EventManager=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _events={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function EventManager(type1,type2,typeN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(arguments.length==0)throw new Error("System.EventManager.ctor: at least one type must be registered.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var types=Array.prototype.slice.call(arguments,0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(types,addType);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    EventManager.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Add=function(type,handler){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        type=normalizeType(type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!_events[type])throw new Error(String.Format("System.EventManager.Add: the event type '{0}' is not registered.",type));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,handler))throw new Error("System.EventManager.Add: 'handler' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _events[type].push(handler);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var x in _events){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        type=normalizeType(type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!_events[type])throw new Error(String.Format("System.EventManager.Fire: the event type '{0}' is not registered.",type));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Cancel=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(_events[type],firePredicate(context));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        type=normalizeType(type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!_events[type])throw new Error(String.Format("System.EventManager.Get: the event type '{0}' is not registered.",type));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Remove=function(type,handler){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        type=normalizeType(type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!_events[type])throw new Error(String.Format("System.EventManager.Remove: the event type '{0}' is not registered.",type));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(_events[type],removeType,handlerPredicate(handler));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addType(type,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        type=normalizeType(type);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function normalizeType(type){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(type==undefined||!Object.IsType(Function,type.toString))throw new Error("System.EventManager.normalizeType: 'type' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return type.toString().toLowerCase();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Instance.splice(context.Index,1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Predicates
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function firePredicate(eventContext){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(eventContext.Cancel)context.Cancel=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function handlerPredicate(handler){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return !handler||handler==method;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Calls=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.AssignableFrom=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,expected))throw new xUnit.js.Model.AssertError("Assert.AssignableFrom: 'expected' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.Inherits(expected,actual))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.Implements(expected,actual))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(expected,actual))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new xUnit.js.Model.AssertError("Assert.AssignableFrom: 'actual' is not assignable from 'expected'");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Contains=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.Contains(expected,actual))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new xUnit.js.Model.AssertError("Assert.Contains: 'actual' did not contain the 'expected' value.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.DoesNotContain=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.Contains(expected,actual))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new xUnit.js.Model.AssertError("Assert.DoesNotContain: 'actual' contained the 'expected' value.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.DoesNotThrow=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            actual();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            throw new xUnit.js.Model.AssertError(String.Format("Assert.DoesNotThrow: 'actual' threw an Error. Error: {0}",e));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Empty=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.IsEmpty(actual))throw new xUnit.js.Model.AssertError(String.Format("Found value: {0}",!Object.IsType(Function,actual)?new System.Script.ObjectSerializer().Serialize(actual):actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            throw new xUnit.js.Model.AssertError(String.Format("Assert.Empty: 'actual' was not empty. {0}",e));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Equal=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var reason={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.Equals(expected,actual,reason))throw new xUnit.js.Model.AssertError(String.Format("Assert.Equal: 'actual' was not equal to 'expected'. Reason: {0}",reason.Value));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Fail=function(reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new xUnit.js.Model.AssertError(String.Format("Assert.Fail: {0}",reason||"[No reason given]"));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.False=function(actual,message){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(actual!==false)throw new xUnit.js.Model.AssertError(String.Format("Assert.False: {0}",message||"'actual' was not false."));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.InRange=function(actual,low,high,comparer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(comparer!=undefined&&!Object.IsType(Function,comparer))throw new xUnit.js.Model.AssertError("Assert.InRange: 'comparer' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(comparer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(comparer(low,actual)>0||comparer(actual,high)>0)throw new xUnit.js.Model.AssertError(String.Format("Assert.InRange: 'actual' was not in the range as specified by 'comparer'. Expected low '{0}', high '{1}', found '{2}'.",low,high,actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(low>actual||actual>high)throw new xUnit.js.Model.AssertError(String.Format("Assert.InRange: 'actual' was not in the range specified. Expected low '{0}', high '{1}', found '{2}'.",low,high,actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotEmpty=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsEmpty(actual))throw new xUnit.js.Model.AssertError("Assert.NotEmpty: 'actual' was empty.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotEqual=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var reason={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.Equals(expected,actual,reason))throw new xUnit.js.Model.AssertError("Assert.NotEqual: 'actual' was equal to 'expected'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotInRange=function(actual,low,high,comparer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(comparer!=undefined&&!Object.IsType(Function,comparer))throw new xUnit.js.Model.AssertError("Assert.NotInRange: 'comparer' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(comparer){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(comparer(low,actual)<=0&&comparer(actual,high)<=0)throw new xUnit.js.Model.AssertError(String.Format("Assert.NotInRange: 'actual' was in the range as specified by 'comparer'. Expected low '{0}', high '{1}', found '{2}'.",low,high,actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(low<=actual&&actual<=high)throw new xUnit.js.Model.AssertError(String.Format("Assert.NotInRange: 'actual' was in the range specified. Expected low '{0}', high '{1}', found '{2}'.",low,high,actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotNull=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(actual===null)throw new xUnit.js.Model.AssertError("Assert.NotNull: 'actual' was null.");    
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotSame=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(expected===actual)throw new xUnit.js.Model.AssertError("Assert.NotSame: 'actual' was the same object as 'expected'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotType=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(expected,actual))throw new xUnit.js.Model.AssertError("Assert.NotType: 'actual' was of the 'expected' type.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.NotUndefined=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(typeof(actual)=="undefined")throw new xUnit.js.Model.AssertError("Assert.NotUndefined: 'actual' was undefined.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Null=function(actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(actual!==null)throw new xUnit.js.Model.AssertError(String.Format("Assert.Null: 'actual' was not null. Found '{0}'.",actual));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Same=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(expected!==actual)throw new xUnit.js.Model.AssertError("Assert.Same: 'actual' was not the same object as 'expected'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Throws=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            actual();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var reason={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(!Object.IsType(expected,e))throw new xUnit.js.Model.AssertError(String.Format("Assert.Throws: 'actual' threw an exception, but it was of the wrong type. Expected: '{0}', found: '{1}'.",Function.GetName(expected),Function.GetName(e.constructor)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(!Object.IsType(expected.constructor,e))throw new xUnit.js.Model.AssertError(String.Format("Assert.Throws: 'actual' threw an exception, but it was of the wrong type. Expected: '{0}', found: '{1}'.",Function.GetName(expected.constructor),Function.GetName(e.constructor)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(!Object.Equals(expected,e,reason))throw new xUnit.js.Model.AssertError(String.Format("Assert.Throws: 'actual' did not throw the 'expected' exception. Reason: '{0}'.",reason.Value));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new xUnit.js.Model.AssertError("Assert.Throws: 'actual' did not throw an Error.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.True=function(actual,message){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(actual!==true)throw new xUnit.js.Model.AssertError(String.Format("Assert.True: {0}",message||"'actual' was not true."));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Type=function(expected,actual){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(expected,actual))throw new xUnit.js.Model.AssertError("Assert.Type: 'actual' was not of the 'expected' type.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Calls++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(typeof(expected)!="undefined")throw new xUnit.js.Model.AssertError("Assert.Undefined: 'actual' was not undefined.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _events;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _pathMap;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _rootFixture;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _pathMap={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Events=_events=new System.Event.EventManager("BeforeRun","AfterRun");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Engine.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Enumerate=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var list=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        enumerateFixture(_rootFixture,list);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Get=function(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(path!=undefined&&!Object.IsType(Function,path.toString))throw new Error("xUnit.js.Engine.Get: 'path' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return resolveTargets(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.RegisterFixture=function(fixture,path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fixture,fixture))throw new Error("xUnit.js.Engine.RegisterFixture: 'fixture' must be an instance of 'xUnit.js.Model.Fixture'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var parentFixture=resolveFixture(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        parentFixture.RegisterFixture(fixture);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        updateFixtureMap(path,fixture);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.RegisterFact=function(fact,path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fact,fact))throw new Error("xUnit.js.Engine.RegisterFact: 'fact' must be an instance of 'xUnit.js.Model.Fact'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.Events.Add("AfterRun",Fact_AfterRun);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.Events.Add("BeforeRun",Fact_BeforeRun);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.SingleAssert=this.SingleAssert;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var parentFixture=resolveFixture(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        parentFixture.RegisterFact(fact);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // IRunnable members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Run=function(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(path!=undefined&&!Object.IsType(Function,path.toString))throw new Error("xUnit.js.Engine.Run: 'path' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var targets=resolveTargets(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Array,targets))targets=[targets];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(targets,runDelegate);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function enumerateFixture(fixture,list){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fixture,fixture))throw new Error("xUnit.js.Engine.enumerateFixture: 'fixture' must be an instance of 'xUnit.js.Model.Fixture'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var fixtures=fixture.GetFixtures();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<fixtures.length;i++)enumerateFixture(fixtures[i],list);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var facts=fixture.GetFacts();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<facts.length;i++)list.push(facts[i]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function findMatches(targetPath,component){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var targets=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var fixtures=component.GetFixtures();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<fixtures.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(fixtures[i].GetPath()==targetPath||String.StartsWith(fixtures[i].GetPath(),targetPath+'.')){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                targets.push(fixtures[i]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            targets=targets.concat(findMatches(targetPath,fixtures[i]));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var facts=component.GetFacts();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<facts.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(facts[i].GetPath()==targetPath||String.StartsWith(facts[i].GetPath(),targetPath+'.')){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                targets.push(facts[i]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return targets;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function normalizePath(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var fullPath=[_rootFixture.Name];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            path=path.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(path.length>0)fullPath.push(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return fullPath.join('.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function resolveFixture(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(path!=undefined){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.IsType(Function,path.toString))throw new Error("xUnit.js.Engine.resolveFixture: 'path' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            path=path.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(_pathMap.hasOwnProperty(path)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                return _pathMap[path];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function resolveTargets(path){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var fixture=resolveFixture(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var fullPath=normalizePath(path);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(String.Equals(fullPath,fixture.Name))return _rootFixture;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var matches=findMatches(fullPath,_rootFixture);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(matches.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(matches.length==1&&String.Equals(matches[0].GetPath(),fullPath))return matches[0];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return matches;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        throw new Error(String.Format("xUnit.js.Engine.resolveTargets: 'path' '{0}' does not resolve to any registered targets.",path));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function updateFixtureMap(path,fixture){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var targetPath=String.TrimStart([path,fixture.Name].join('.'),'.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(_pathMap.hasOwnProperty(targetPath)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(_pathMap[targetPath]!=fixture){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(typeof(console)!="undefined")console.log(String.Format("xUnit.js.Engine.updateFixtureMap: reloading Fixture '{0}'.",targetPath));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _pathMap[targetPath]=fixture;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Predicates
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function nameComparer(fixture,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return Object.Equals(context.Expected,fixture.Name);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function lengthComparer(a,b){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return b.Name.length-a.Name.length;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function runDelegate(runnable,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        runnable.Run();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function Fact_AfterRun(context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function Fact_BeforeRun(context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Engine.Implement(xUnit.js.IRunnable); 
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetMock=function(target,member,mockery){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(target==undefined||!{"function":1,"object":1}[typeof(target)])throw new Error("xUnit.js.Mocks.GetMock: 'target' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(String,member)||member.length==0)throw new Error("xUnit.js.Mocks.GetMock: 'member' must be a valid String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var mockeries={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return this.GetMocks(target,mockeries);        
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetMocks=function(target,mockeries){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(target==undefined||!{"function":1,"object":1}[typeof(target)])throw new Error("xUnit.js.Mocks.GetMocks: 'target' must be a valid Object.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Object,mockeries))throw new Error("xUnit.js.Mocks.GetMock: 'mockeries' must be a valid Object containing member to mock mappings.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return function Mockery(during,argument1,argument2,argumentN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.IsType(Function,during))throw new Error("xUnit.js.Mocks.Mockery: 'during' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var mockTargets=Object.Copy({},target,mockeries);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                for(var member in mockeries){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    var mockery=mockeries[member];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    var mocked=mockTargets[member];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    if(mockery)mockery.Mocked=Object.IsType(Function,mocked)?Function.GetDelegate(mocked,target):mocked;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    target[member]=mockery;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                return during.apply(target,Array.prototype.slice.call(arguments,1));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            }finally{
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                for(var member in mockeries){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    var mockery=mockeries[member];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    if(mockTargets.hasOwnProperty(member))target[member]=mockTargets[member];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    else delete target[member];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Exception=function(delegate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,delegate))throw new Error("Record.Exception: 'delegate' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            delegate();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Array,sourceList))throw new Error("xUnit.js.Stubs.GetList: 'sourceList' must be a valid Array.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var list=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<sourceList.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            properties.Source_Value=sourceList[i];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        delete properties.Source_Value;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetMethod=function(param1,param2,paramN,returnValue){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var methodParameters=Array.prototype.slice.call(arguments,0,arguments.length-1);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var methodReturnValue=arguments.length?arguments[arguments.length-1]:undefined;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var method=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            // Collect Calling Arguments
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var callingArguments={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var i=0;i<arguments.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                callingArguments[method.Parameters[i]||String.Format("Argument_{0}",i)]=arguments[i];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            // Collect Expectation
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var expectedResult=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(Object.IsType(Function,method.ReturnValue)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                expectedResult=method.ReturnValue.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                expectedResult=method.ReturnValue;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            // Store Invocation
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            method.Calls.push({
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                Arguments:callingArguments,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                ReturnValue:expectedResult
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        method.Calls=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        method.Parameters=methodParameters;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        method.ReturnValue=methodReturnValue;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var object={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var x in methods){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                var parameters=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                var returnValue=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    parameters=Function.GetParameters(methods[x]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    returnValue=methods[x];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    parameters=methods[x].parameters||[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    returnValue=methods[x].returnValue;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                object[x]=this.GetMethod.apply(this,parameters.concat(returnValue));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Clear=function(){};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetFacts=function(){};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.RegisterFact=function(fact){};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.IRunnable=new function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.ISkippable=new function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Skip=function(reason){};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Failure:0,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Waiting:4
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.name="AssertError";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.message="";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.stackTrace="";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function AssertError(message){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(message==null)message='';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Function,message.toString))message=message.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var error=new Error(message);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        error.name=this.name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.message=message;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.stackTrace=error.stack||error.getStack&&error.getStack()||getStack(this);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    AssertError.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private Methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getStack(error){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var map={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var stack=[String.Format("{0}: {1}",error.name,error.message)];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var caller=getStack.caller&&getStack.caller.caller;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        while(caller){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(map[caller]){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                stack.push(String.Format("{0} (Recursion Entry Point)",Function.GetName(caller)));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                break;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(caller.caller==System.Script.Attributes.DecoratedFunction){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                stack.push(Function.GetName(caller.arguments[0]));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            }else stack.push(Function.GetName(caller));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            map[caller]=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            caller=caller.caller;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return stack.join('\n\tat ');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Cancel=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.Fact=function(method,name){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _events;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _skip;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _reason;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Asynchronous=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Data=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.DataIndex=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Parent;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.State;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.States;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function Fact(method,name,parent){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,method))throw new Error("xUnit.js.Model.Fact.ctor: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Events=_events=new System.Event.EventManager("BeforeRun","AfterRun");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Name=name||method&&Function.GetName(method)||"[Anonymous]";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Parent=parent||null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.State={
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Message:'',
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.States=[this.State];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(this.constructor==xUnit.js.Model.Fact)Fact.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetPath=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var path=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var step=this;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            path.unshift(step.Name);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            step=step.Parent;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return path.join('.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // IRunnable members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var dataIndex=this.DataIndex||0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.State.Result=xUnit.js.Model.Result.Unknown;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var context=new xUnit.js.Model.EventContext(this,this.State.Result);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var rawMethod=this.Method.GetDecoration&&this.Method.GetDecoration().GetMethod()||this.Method;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(_skip||context.Cancel){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                this.State.Message=_reason||"[No reason given]";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                this.State.Result=context.Result=xUnit.js.Model.Result.Skipped;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(Function.IsEmpty(rawMethod)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    throw new xUnit.js.Model.AssertError("No method body found. Assuming intentional failure (TDD).");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                var asserts=Assert.Calls;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                var parameters=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    var callbackParam=Function.GetParameters(rawMethod)[0];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    if(!callbackParam||!String.Contains(Function.GetBody(rawMethod),callbackParam))throw new xUnit.js.Model.AssertError("Asynchronous callback appears to be missing. Facts marked asynchronous must complete the test by invoking the callback method supplied.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    parameters.push(Function.GetDelegate(processRun,this,this,context,null,true,dataIndex));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(Object.IsType(Array,this.Data)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    if(this.DataIndex==undefined||isNaN(this.DataIndex))this.DataIndex=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    parameters.push(this.Data[this.DataIndex]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                processRun(this,context,parameters,false,dataIndex,this.Method);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    if(this.SingleAssert&&(Assert.Calls!=asserts)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                        throw new xUnit.js.Model.AssertError(String.Format("Single-Assert violation. Found {0} Asserts in main thread. Asserts in asynchronous Facts must be made in the delegate passed to the callback method provided to ensure synchronization, e.g.:\n  function {1}(callback){\n    callback(function(){\n      Assert.True(true);\n    });\n  }",Assert.Calls-asserts,this.Name));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                    this.States[dataIndex].Result=xUnit.js.Model.Result.Waiting;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(this.State.Result==xUnit.js.Model.Result.Unknown){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                registerError(this,dataIndex,e);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return this.State;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // ISkippable Members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Skip=function(reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _reason=reason;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private Methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function processRun(fact,context,parameters,inCallback,dataIndex,delegate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(inCallback){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(fact.States[dataIndex].Result!=xUnit.js.Model.Result.Waiting)throw new xUnit.js.Model.AssertError("Fact is marked asynchronous, but callback was invoked synchronously.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(!Object.IsType(Function,delegate))throw new xUnit.js.Model.AssertError("callback(delegate): 'delegate' was not a valid Function.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var asserts=Assert.Calls;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            delegate.apply(Object.Global(),parameters||[]);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(fact.Asynchronous&&!inCallback){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                return runNext(fact);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(fact.SingleAssert&&(Assert.Calls-asserts)!=1){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                throw new xUnit.js.Model.AssertError(String.Format("Single-Assert violation. Found {0} Asserts.",Assert.Calls-asserts));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.States[dataIndex].Result=xUnit.js.Model.Result.Success;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            registerError(fact,dataIndex,e);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Result=fact.States[dataIndex].Result;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        runNext(fact);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function registerError(fact,dataIndex,error){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.States[dataIndex].Message=error;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(error instanceof xUnit.js.Model.AssertError){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.States[dataIndex].Result=xUnit.js.Model.Result.Failure;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.States[dataIndex].Result=xUnit.js.Model.Result.Error;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function runNext(fact){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Array,fact.Data)&&fact.DataIndex<fact.Data.length-1){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.DataIndex++;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.State={Index:fact.DataIndex,Message:'',Result:xUnit.js.Model.Result.Unknown};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.States.push(fact.State);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            fact.Run();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.Fact.Implement(xUnit.js.Model.IRunnable,"xUnit.js.Model.Fact");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.Fact.Implement(xUnit.js.Model.ISkippable,"xUnit.js.Model.Fact"); 
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("xUnit.js.Model");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _events;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _facts;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _fixtures;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Asynchronous=false;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Parent;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function Fixture(name,parent){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _facts=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Events=_events=new System.Event.EventManager("BeforeRun","AfterRun");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Name=name||"[Anonymous]";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Parent=parent||null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Fixture.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetPath=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var path=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var step=this;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            path.unshift(step.Name);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            step=step.Parent;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return path.join('.');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Clear=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _facts.length=0;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetFacts=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return _facts.slice(0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fixture,fixture))throw new Error("xUnit.js.Model.Fixture.RegisterFixture: 'fixture' must be an instance of 'xUnit.js.Model.Fixture'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fixture.Parent=this;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.RegisterFact=function(fact){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fact,fact))throw new Error("xUnit.js.Model.Fixture.RegisterFact: 'fact' must be an instance of 'xUnit.js.Model.Fact'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.Parent=this;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(this.Asynchronous)fact.Asynchronous=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _facts.push(fact);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fixture,fixture))throw new Error("xUnit.js.Model.Fixture.RemoveFixture: 'fixture' must be an instance of 'xUnit.js.Model.Fixture'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(fixture.Parent!=this)throw new Error("xUnit.js.Model.Fixture.RemoveFixture: 'fixture' is not registered to this fixture.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fixture.Parent=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.Remove(_fixtures,fixture);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.RemoveFact=function(fact){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(xUnit.js.Model.Fact,fact))throw new Error("xUnit.js.Model.Fixture.RemoveFact: 'fact' must be an instance of 'xUnit.js.Model.Fact'.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(fact.Parent!=this)throw new Error("xUnit.js.Model.Fixture.RemoveFact: 'fact' is not registered to this fixture.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        fact.Parent=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.Remove(_facts,fact);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // IRunnable members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var context=new xUnit.js.Model.EventContext(this,xUnit.js.Model.Result.Unknown);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(context.Cancel){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Array.ForEach(_fixtures,runTarget);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Array.ForEach(_facts,runTarget);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // ISkippable members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Skip=function(reason){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(_fixtures,skipHandler,null,{Reason:reason});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(_facts,skipHandler,null,{Reason:reason});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function nameSorter(a,b){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!a)return -1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(a.Name<b.Name)return -1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(a.Name>b.Name)return 1;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function runTarget(target,arrayContext){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        target.Run();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function skipHandler(skippable,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        skippable.Skip(context.Reason);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.Fixture.Implement(xUnit.js.Model.IRunnable,"xUnit.js.Model.Fixture");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:xUnit.js.Model.Fixture.Implement(xUnit.js.Model.ISkippable,"xUnit.js.Model.Fixture"); 
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.DelayedConstructor=function(scope,constructor,callback,preloadArguments){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(!Object.IsType(Function,constructor))throw new Error("System.Script.DelayedConstructor: 'constructor' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    if(callback!=undefined&&!Object.IsType(Function,callback))throw new Error("System.Script.DelayedConstructor: 'callback' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var args=Array.prototype.slice.call(preloadArguments||[],0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(callback)callback.apply(scope,args);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(args&&args.length){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return Function.GetDelegate.apply(Function,[constructor,scope].concat(args));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.ObjectSerializer=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _safeRegex=/^\(?("(\\.|[^"\\\n\r])*?"|[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t])+?\)?$/;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Deserialize=function(source){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var target=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!_safeRegex.test(source))throw new Error(String.Format("System.Script.ObjectSerializer.Deserialize: 'source' is invalid or unsafe object notation.\nSource: {0}",source));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                target=eval(['(',')'].join(source));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                target.toString=Function.GetDelegate(overrideToString,this,source);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                throw new Error(String.Format("System.Script.ObjectSerializer.Deserialize: unable to deserialize source.\nError: {0}.\nSource: {1}",e,source));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Serialize=function(target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(target==null)return "null";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(target instanceof Array){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var ret=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var i=0;i<target.length;i++)ret.push(this.Serialize(target[i]));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return String.Format("[{0}]",ret.join(','));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Date,target)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return String.Format("\"{0}/{1}/{2}T{3}:{4}:{5}Z\"",target.getUTCFullYear(),pad(1+target.getUTCMonth()),pad(target.getUTCDate()),pad(target.getUTCHours()),pad(target.getUTCMinutes()),pad(target.getUTCSeconds()));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(typeof(target)=="object"){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var ret=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            for(var x in target)ret.push(String.Format("{0}:{1}",this.Serialize(x),this.Serialize(target[x])));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return String.Format("{{0}}",ret.join(','));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(typeof(target)=="string")return String.Format("\"{0}\"",target.replace(/\\/g,"\\\\").replace(/"/g,"\\\"").replace(/\n/g,"\\n").replace(/\r/g,"\\r"));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!(typeof(target)==="function"))return target.toString();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function pad(number){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return String.Pad(number,'0',2);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Strategy");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.Strategy.IStrategySpecification=new function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.IsSatisfiedBy=function(candidate){};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Strategy");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.Strategy.StrategyManager=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _strategies;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _strategy;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _candidate;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function StrategyManager(strategy1,strategy2,strategyN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _strategies=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(Array.prototype.slice.call(arguments,0),addStrategy,strategyPredicate);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    StrategyManager.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Add=function(strategy,index){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!isStrategy(strategy))throw new Error("System.Script.Strategy.StrategyManager.Add: 'strategy' must implement System.Script.Strategy.IStrategySpecification");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        addStrategy(strategy,null,index);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        clearCache();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Clear=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _strategies=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        clearCache();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Get=function(candidate,isVolatile,properties){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(isVolatile||!_strategy||_candidate!=candidate){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var context={
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                Candidate:candidate,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                Strategy:null
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Array.ForEach(_strategies,getStrategy,null,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(context.Strategy){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                _candidate=candidate;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                _strategy=context.Strategy;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!_strategy)throw new Error("System.Script.Strategy.StrategyManager.Get: No viable strategy found.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Object.Copy(_strategy,properties);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return _strategy;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Enumerate=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return _strategies.slice(0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Remove=function(strategy){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!isStrategy(strategy))throw new Error("System.Script.Strategy.StrategyManager.Remove: 'strategy' must implement System.Script.Strategy.IStrategySpecification");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.Remove(_strategies,strategy);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        clearCache();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addStrategy(strategy,context,index){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(index==null)index=_strategies.length;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _strategies.splice(index,null,strategy);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function clearCache(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _strategy=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _candidate=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getStrategy(strategy,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            var instance=new strategy();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(instance.IsSatisfiedBy(context.Candidate)){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                context.Strategy=instance;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                context.Cancel=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            throw new Error(String.Format("System.IO.File.getStrategy: unable to instantiate strategy '{0}'. Check your constructor logic for dependencies. Error: {1}",Function.GetName(_strategies[context.Index]),e));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function isStrategy(strategy){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return Object.Implements(System.Script.Strategy.IStrategySpecification,strategy);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Predicates
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function strategyPredicate(strategy,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!isStrategy(strategy))throw new Error(String.Format("System.Script.Strategy.StrategyManager.ctor: 'strategy' at position [{0}] does not implement IStrategySpecification.",context.Index));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Attributes");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name='';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Target=null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Attributes");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function Attribute(name,target){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Name=name||this.Name||'';
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Target=target||this.Target||getTarget(this);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    Attribute.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getTarget(attribute){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var map={};
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var caller=getTarget;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        while(caller&&!map[caller]){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(caller.caller==System.Script.Attributes.DecoratedFunction){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                return caller.Decoration;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            map[caller]=true;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            caller=caller.caller;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Attributes");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.Attributes.AttributeParser=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _attributeRegEx=/(^|.\n?\s*)(((\[[^\]]*\])((\s*\/\/(.*)\n)|[ \r\t\v]*\n)+\s*)+)((var )?\s*[$_A-Za-z][$_A-Za-z0-9\.]*\s*=)?(\s*function\s*)(\s+([^(\s]+))?\s*\(/g;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js://     var _attributeRegEx=/(^|.\n?\s*)(((\[[^\]]*\])((\s*\/\/(.*)\n)|(\s*\/\*(?!\*\/)\*\/)|[ \r\t\v]*\n)+\s*)+)((var )?\s*[$_A-Za-z][$_A-Za-z0-9\.]*\s*=)?(\s*function\s*)(\s+([^(\s]+))?\s*\(/g;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Parse=function(source){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var parsedScript=parseFunctions(source.toString());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return parsedScript;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function parseFunctions(source){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return source.replace(_attributeRegEx,decorationBuilder);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function decorationBuilder(fullMatch,leadingSpace,attributeClusters,attributeCluster,attribute,commentOrWhitespace,comment,commentText,variableAssignment,variableTag,functionTag,functionSpace,functionName,stringPosition,sourceString){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js://    function decorationBuilder(fullMatch,leadingSpace,attributeClusters,attributeCluster,attribute,commentOrWhitespace,comment,commentText,blockComment,negativeLookAhead,variableAssignment,variableTag,functionTag,functionSpace,functionName,stringPosition,sourceString){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(fullMatch.toString().indexOf('=')==0)return fullMatch;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var format="{0}{1}{2}new System.Script.Attributes.DecoratedFunction({3},\"{4}\",{5});{6}function {3}(";
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var name=functionName||(variableAssignment?variableAssignment.replace(/\bvar |\bthis.|=/g,''):getAnonymousName());
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var safeName=name.split('.').join('_');
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return String.Format(format,    
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            leadingSpace||'',
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            variableAssignment||'var ',
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            !functionName&&variableAssignment?'':name+'=',
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            safeName,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            name,
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            String.TrimEnd(attributeClusters.replace(/\]\s*(,?)\s*(\[|$)/g,'],$2'),','),
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            (leadingSpace||'').replace(/^[^\s]*/g,'')
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function getAnonymousName(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return 'anonymous_'+(new Date().getTime()+Math.round(Math.random()*100000));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:Function.RegisterNamespace("System.Script.Attributes");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:System.Script.Attributes.DecoratedFunction=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private members
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _attributes;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _decoration;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _method;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    var _name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.Name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function DecoratedFunction(method,name,attributes1,attributes2,attributesN){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,method))throw new Error("System.Script.Attributes.DecoratedFunction.ctor: 'method' must be a valid Function pointer.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _attributes=[];
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _decoration=this;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        _name=name||Function.GetName(method);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        this.Name=_name;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(Array.prototype.slice.call(arguments,2),addAttributeArgument,null,{Target:_attributes});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        DecoratedFunction.Decoration=DecorationWrapper;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Decorated ctor
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function DecorationWrapper(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var context=Array.ForEach(_attributes,beforeInvokeAttribute);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(context.Cancel)return null;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            return _method.apply(_decoration,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        }finally{
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            Array.ForEach(_attributes,afterInvokeAttribute,null,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    DecorationWrapper.GetDecoration=function(){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return _decoration;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    this.GetAttributes=function(match){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(match==undefined)return _attributes.slice(0);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,match.toString))throw new Error("System.Script.Attributes.DecoratedFunction.GetAttributes: 'match' must be convertible to String.");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        var context=Array.ForEach(_attributes,addAttribute,attributeMatchPredicate,{Match:match,Target:[]});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        return context.Target;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // ctor invocation
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    DecoratedFunction.apply(this,arguments);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    return DecorationWrapper;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Private methods
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addAttribute(attribute,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        context.Target.push(attribute);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addAttributeArgument(attributeArgument,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(Object.IsType(Array,attributeArgument))addAttributeCluster(attributeArgument,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        else addAttribute(attributeArgument,context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function addAttributeCluster(attributeCluster,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        Array.ForEach(attributeCluster,addAttribute,null,{Target:context.Target});
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function afterInvokeAttribute(attribute,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        invokeAttribute(attribute,context,"AfterInvoke");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function beforeInvokeAttribute(attribute,context){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        invokeAttribute(attribute,context,"BeforeInvoke");
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function invokeAttribute(attribute,context,method){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(!Object.IsType(Function,attribute&&attribute[method]))return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        if(attribute[method]==System.Script.Attributes.Attribute[method])return;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        attribute[method](context);
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:        for(var i=0;i<_attributes.length;i++){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            if(!Object.IsType(Function,_attributes[i]))continue;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                // ECMA Compliance fix (.caller is host-specific)
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                if(!processAttributes.caller)_attributes[i].prototype.Target=DecorationWrapper;
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                _attributes[i]=new _attributes[i]();
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:            }catch(e){
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:                throw new Error(String.Format("System.Script.Attributes.DecoratedFunction.processAttributes: unable to instantiate attribute '{0}' at position [{1}].\nError: {2}",_attributes[i].Name||Function.GetName(_attributes[i]),i,e));
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    // Predicates    
ruau/ruau-util/src/test/tools/xUnit/xUnit.js.Console.js:    function attributeMatchPredicate(attribute,context){
