ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:	handleDataChange : function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		cmp._dataProvided = true;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		var data = evt.getParam('data');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		if (data) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        	helper.initItems(cmp, data.columns, data.orderBy);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        	if (cmp._openAfterDataProvided) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        		cmp._openAfterDataProvided = false;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        		helper.handleOnOpen(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		var dataProvider = cmp.get('v.dataProvider');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		if (dataProvider.length > 0 && (!cmp._dataProvided || cmp._needUpdate)) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			cmp._needUpdate = false;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			cmp._openAfterDataProvided = true;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			helper.triggerDataProvider(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			helper.handleOnOpen(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:	onCancel: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		helper.handleOnCancel(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:	onMenuExpand: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		var action = cmp.get('v.onOpen');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        if (action) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        	action.runDeprecated();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:	onMenuCollapse: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		var action = cmp.get('v.onCancel');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        if (action) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:        	action.runDeprecated();
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		helper.updateSortOrder(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		helper.handleApply(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		var visible = evt.getParam('value');
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			helper.attachEventHandler(cmp);    
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:			helper.removeEventHandler(cmp);
ruau/ruau-components/src/main/components/ui/listSorter/listSorterController.js:		cmp._needUpdate = true;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .scrollable {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	overflow-y: auto;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .open.listSorterContainer {	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	margin: 42px auto;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	box-shadow: 0 1px 5px rgba(0, 0, 0, .75);
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .open.phone.listSorterContainer {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	margin: 0;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .listSorterContainer {	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	background: #fff;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	height: auto;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	display: none;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .open.listSorterContainer {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	display: block;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .open.modal {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: absolute;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: absolute;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    background-color: #ffffff;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    font-family: 'ProximaNovaSoft-Regular';
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    text-align: center;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar .title {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	font-family: 'ProximaNovaSoft-Semibold';
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	text-shadow: none;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar a {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    margin-top: 7px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    padding: 0 14px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar .cancel {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    margin-left: 10px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    text-align: left;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar .apply {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    margin-right: 10px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    text-align: right;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .headerBar a.button {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: absolute;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	margin: 7px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	border: 1px solid transparent;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	border-radius: 5px;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	background: rgba(0,0,0,.07);
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	font-family: 'ProximaNovaSoft-Semibold';
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .listSorterContainer .body {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: relative;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: relative;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	box-shadow: none;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	background-color: #f0f1f2;		
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS div.uiMenuList li a {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	display: block;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS div.uiMenuList li.uiMenuItemSeparator {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	padding: 0;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	position: relative;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	font-family: Arial;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	padding: 12px;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	margin: -12px;	
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .open.listSorterMask {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	display: block;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:.THIS .listSorterMask {
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    position: absolute;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	background: #344a5f;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:	opacity: 0.7;
ruau/ruau-components/src/main/components/ui/listSorter/listSorter.css:    display: none;
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-components/src/main/components/ui/listSorter/listSorterRenderer.js:		var visible = cmp.get('v.visible');
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that an option in a list gets selected.">
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:    <ruau:attribute name="option" type="Ruue.Component[]" description="The option component selected."/>
ruau/ruau-components/src/main/components/ui/selectListOption/selectListOption.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:	testInitializeHidden : {
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:		attributes : { isVisible : false },
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			var spinner = component.find('spinner');
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			$A.test.assertTrue($A.util.hasClass(spinner.getElement(), 'hideEl'));
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:	testShowIndicator : {
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:		attributes : { isVisible : false },
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			var spinner = component.find('spinner');
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			$A.test.assertTrue($A.util.hasClass(spinner.getElement(), 'hideEl'));
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			var evt = component.get("e.toggle");
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			evt.setParams({ isVisible : true });
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			$A.test.assertFalse($A.util.hasClass(spinner.getElement(), 'hideEl'));
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:	testHideIndicator : {
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:		attributes : { isVisible : true },
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			var spinner = component.find('spinner');
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			$A.test.assertFalse($A.util.hasClass(spinner.getElement(), 'hideEl'));
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			var evt = component.get("e.toggle");
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			evt.setParams({ isVisible : false });
ruau/ruau-components/src/main/components/ui/spinner/spinnerTest.js:			$A.test.assertTrue($A.util.hasClass(spinner.getElement(), 'hideEl'));
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/spinner/spinner.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:    text-align: center;
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:    display: block;
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:    display: none;
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:.THIS.spinner .loading .spinner-img {
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:	border-radius: 50%;
ruau/ruau-components/src/main/components/ui/spinner/spinner.css:	opacity: .7;
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:<ruau:component access="GLOBAL" support="BETA" description="A loading spinner to be used while the real component body is being loaded">
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    <ruau:attribute access="GLOBAL" name="isVisible" type="Boolean" default="true" description="Specifies whether or not this spinner should be visible. Defaults to true."/>
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    <ruau:registerEvent access="GLOBAL" name="toggle" type="ui:toggleLoadingIndicator" description="The event fired when the spinner is toggled."/>
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    <ruau:handler name="toggle" action="{!c.toggleSpinner}"/>
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:    <div ruau:id='spinner' role="alert" class="{!v.class + ' spinner ' + (v.isVisible == true ? '': 'hideEl')}">
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:        <div class="loading">
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:        	<ui:image class="spinner-img" src="/ruauFW/resources/ruau/images/spinner.gif" alt="Loading" />
ruau/ruau-components/src/main/components/ui/spinner/spinner.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    limitations under the License.
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:<ruau:documentation>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	<ruau:description>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	        To toggle the spinner, use <code>get("e.toggle")</code>, set the <code>isVisible</code> parameter to <code>true</code> or <code>false</code>, and then fire the event.
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	    <p>This example shows a spinner when a component is expecting a server response and removes the spinner when the component is no longer waiting for a response.</p>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:<pre>&lt;ruau:component>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    &lt;ruau:handler event="ruau:waiting" action="{!c.showSpinner}"/>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    &lt;ruau:handler event="ruau:doneWaiting" action="{!c.hideSpinner}"/>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:   &lt;center>&lt;ui:spinner ruau:id="spinner"/>&lt;/center>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:&lt;/ruau:component></pre>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	<p>This client-side controllers shows and hides the spinner accordingly.</p>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:        var spinner = component.find('spinner');
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:        var evt = spinner.get("e.toggle");
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:        evt.setParams({ isVisible : true });
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:       var spinner = component.find('spinner');
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:       var evt = spinner.get("e.toggle");
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:       evt.setParams({ isVisible : false });
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	</ruau:description>	
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:		<ruau:example name="spinner" ref="ruaudocs:demoSpinner" label="Using ui:spinner">
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:    	<p>This example shows a spinner that can be toggled.</p>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:	   </ruau:example>
ruau/ruau-components/src/main/components/ui/spinner/spinner.ruauCOD:</ruau:documentation>
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js:        var isVisible = event.getParam("isVisible");
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js:            $A.util.removeClass(cmp.find("spinner").getElement(), "hideEl");
ruau/ruau-components/src/main/components/ui/spinner/spinnerController.js:            $A.util.addClass(cmp.find("spinner").getElement(), "hideEl");
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:<ruau:component extends="ui:inputTextArea" extensible="true" support="proto"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    description="This component is used as input text area in a ui:autocomplete component.">
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    <ruau:attribute name="autocompleteButton" type="Ruue.Component[]" description="Optional button to render with this component."/>
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    <textarea ruau:id="textAreaElem"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        class="{!v.class+(v.resizable?'':' noresize')}"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        disabled="{!v.disabled}"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        readonly="{!v.readonly}"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        placeholder="{!v.placeholder}"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        aria-autocomplete="list"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        aria-expanded="false"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        aria-haspopup="true"
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        aria-activedescendant=""
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:        aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:    {!v.autocompleteButton}
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css:.THIS.autocompleteButton {
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css:	background: transparent;
ruau/ruau-components/src/main/components/ui/inputTextAreaForAutocomplete/inputTextAreaForAutocomplete.css:	box-shadow: none;
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:<ruau:component extensible="true" support="GA" description="Displays &#8220;Unsupported&#8221; if the short attribute is set to true.">
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:    <ruau:attribute name="short" type="Boolean" default="false" description="A short message that displays &#8220;Unsupported&#8221; if true, or &#8220;This field isn't currently supported.&#8221; otherwise. "/>
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:        <ruau:if isTrue="{!v.short}">
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:            <ruau:set attribute="else">This field isn't currently supported.</ruau:set>
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:        </ruau:if>
ruau/ruau-components/src/main/components/ui/underConstruction/underConstruction.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:<ruau:event type="COMPONENT" support="BETA" description="Event to trigger relative scroller scrolling">
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:	<ruau:attribute name="deltaX" type="Integer" description="Change in X coordinate of scroller"/>
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:	<ruau:attribute name="deltaY" type="Integer" description="Change in Y coordinate of scroller"/>
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:	<ruau:attribute name="time" type="Integer" default="0" description="Time (in milliseconds) to get to destination"/>
ruau/ruau-components/src/main/components/ui/scrollBy/scrollBy.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    limitations under the License.
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:<ruau:interface>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <ruau:attribute name="name" type="String" access="GLOBAL" description="The name of the component."/>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <ruau:attribute name="label" type="String" access="GLOBAL" description="The text displayed on the component."/>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <!-- The boolean value indicating the status (selected or not) of the option -->
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <ruau:attribute name="value" type="Boolean" default="false" access="GLOBAL" description="Indicates whether the status of the option is selected. Default value is &#8220;false&#8221;."/>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <!-- The markup element's value attribute -->
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:    <ruau:attribute name="text" type="String" access="GLOBAL" description="The input value attribute."/>
ruau/ruau-components/src/main/components/ui/inputBaseOption/inputBaseOption.intf:</ruau:interface>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:<ruau:component extensible="true" support="GA" description="A dialog window used for overlays or modals.">
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <!-- main attributes -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="ariaRole" type="String" default="dialog" description="The value of the dialog's ARIA role attribute. Valid values are 'dialog' and 'alertdialog'. The default is 'dialog'."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="autoFocus" type="Boolean" default="{!true}" description="Automatically focus on the first focusable element when the dialog is displayed. The default is 'true'."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="buttons" type="Ruue.Component[]" description="Buttons that should be displayed at the bottom of the dialog (e.g., 'Cancel', 'OK', etc.). This attribute must be of type ui:dialogButtons."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="clickOutToClose" type="Boolean" default="{!true}" description="Specifies if the dialog should be closed when any element outside the dialog is clicked. The default is 'true'."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="description" type="String" description="Instructional information about the purpose of the dialog. This text will not be visible on-screen, but still readable by assistive technologies. Required for accessibility." required="true"/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="isModal" type="Boolean" default="{!false}" description="Whether or not the dialog is modal. Modal dialogs do not allow any interaction with other page elements until the dialog is dealt with. Non-modal dialogs allow interactivity with other parts of the page, even when the dialog is open. The default is 'false'."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="title" type="String" description="The title displayed in the dialog's header. Required for accessibility." required="true"/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="width" type="String" default="medium" description="The width of the dialog. Valid values are 'small', 'medium', 'large' (which equal 310px, 620px, and 940px, respectively), and 'auto', which sizes based on the contents of the dialog. Note that 'auto' will only work properly when the 'isModal' attribute is set to 'false'. The default is 'medium'."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <!-- css, label, and title hooks -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="closeClass" type="String" description="Additional CSS classes to apply to the dialog close button, located in the upper right corner of the dialog window."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="closeLabel" type="String" default="&times;" description="The label of the dialog close button, located in the upper right corner of the dialog window."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="closeTitle" type="String" default="Close this window" description="The title attribute of the dialog close button, located in the upper right corner of the dialog window."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="dialogClass" type="String" description="Additional CSS classes to apply to the dialog's outermost &lt;div&gt; wrapper."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="theme" type="String" default="default" description="Theme to apply to the dialog."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="maskClass" type="String" description="Additional CSS classes to apply to the window mask located behind a modal dialog."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <!-- private attributes -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:attribute name="_handlerConfig" type="Object" description="PRIVATE ATTRIBUTE - DO NOT SET | Reference to the event handlers necessary for interactivity."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:registerEvent name="close" type="ui:closeDialog" description="Event fired when the dialog window requests to close itself."/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.doInit}"/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <!-- modal background -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <ruau:if isTrue="{!v.isModal}">
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <div ruau:id="mask" class="{!'mask hidden ' + v.maskClass}"></div>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    </ruau:if>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <!-- dialog container -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:    <div ruau:id="outer" class="{!'dialog hidden ' + v.dialogClass + (v.isModal ? ' modal ' : ' ') + v.width +' '+ v.theme}" role="{!v.ariaRole}" aria-live="assertive" aria-atomic="true" aria-labelledby="{!globalId + '-title'}">
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <!-- header -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <h2 ruau:id="title" id="{!globalId + '-title'}" class="title">{!v.title}<span class="assistiveText"> {!v.description}</span></h2>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <div ruau:id="content" class="content">{!v.body}</div>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <ruau:if isTrue="{!v.buttons.length > 0}">
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:            <div ruau:id="buttons" class="buttons">{!v.buttons}</div>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        </ruau:if>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <!-- close ("x") link - this DOM placement is intentional. DO NOT move, hide, or remove this element. see dialogManagerHelper#getFirstFocusableElement for more info -->
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:        <ui:button ruau:id="closeButton" class="{!'close ' + v.closeClass}" label="{!v.closeLabel}" buttonTitle="{!v.closeTitle}" press="{!c.close}" theme="{!v.theme}"/>
ruau/ruau-components/src/main/components/ui/dialog/dialog.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:    testDialogIsModalTrue:{
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:	attributes : {description:'test', title:'this is a great title', isModal:'true'},
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:	        var cls = cmp.find("mask").getElement().className;
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:    		ruau.test.assertTrue(ruau.test.contains(cls,"mask hidden"), "isModal is set to true, but does not have the class associated with it");
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:    testDialogIsModalFalse:{
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:        attributes : {description:'test', title:'this is a great title', isModal:'false'},
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:	        var obj = cmp.find("mask");  
ruau/ruau-components/src/main/components/ui/dialog/dialogTest.js:    		ruau.test.assertTrue($A.util.isUndefinedOrNull(obj), "isModal is set to false, but contains the class as though it was set to true");
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dialog/dialog.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    display:none;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.mask{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:#222;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:rgba(0,0,0,0.9);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -webkit-transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -moz-transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    opacity:0;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.mask.default{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.fadeIn{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    opacity:1;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    position:absolute;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.mask,
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog.default{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:#666;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:-webkit-gradient(linear,0% 0%,0% 100%,from(#888),to(#2A2A2A));
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:-webkit-linear-gradient(#888,#444 1.4em,#444 75%,#111);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:-moz-linear-gradient(#888,#444 1.4em,#444 75%,#111);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background:linear-gradient(#888,#444 1.4em,#444 75%,#111);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    border-radius:4px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    box-shadow:0 0 25px rgba(0,0,0,.8);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog.small{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog.medium{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog.large{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.dialog.auto{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    width:auto;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -webkit-transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -moz-transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    transition:all 0.3s ease-in-out;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -webkit-transform:translate3d(0,2600px,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -moz-transform:translate3d(0,2600px,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    transform:translate3d(0,2600px,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.default{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:	border-radius:0 0 4px 4px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    box-shadow:0 0 25px rgba(255,255,255,.8);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.small{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    margin-left:-155px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.medium{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    margin-left:-310px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.large{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    margin-left:-470px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.auto{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.modal.slideUp{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -webkit-transform:translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    -moz-transform:translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    transform:translate3d(0,0,0);
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.default .title,
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.default .content,
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.default .buttons{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    margin:10px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.default .title{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    text-shadow:0 -1px #000;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:.THIS.default .content{
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    overflow:auto;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    padding:10px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    border-radius:2px;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    background-color:#FFF;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    box-shadow:inset 0 0 6px #000;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    text-align:center;
ruau/ruau-components/src/main/components/ui/dialog/dialog.css:    position:absolute;
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:     * Validates the "ariaRole", "buttons", and "width" attributes. Also
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:     * associates the buttons with their parent dialog.
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        var buttonFacet = cmp.get("v.buttons"),
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            role        = cmp.get("v.ariaRole"),
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        // validate the aria role is one of the allowed values
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        if (role !== "dialog" && role !== "alertdialog") {
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            $A.error("The 'ariaRole' attribute of a ui:dialog component " +
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                     "must be one of the following case-sensitive values: " +
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                     "dialog, alertdialog");
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        // validate the button facet is of type ui:dialogButtons and
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        // set a reference to the dialog on the dialogButton's model
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        if (buttonFacet) {
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            length = buttonFacet.length;
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            for (var i=0; i<length; i++) {
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                if (buttonFacet[i].isInstanceOf("ui:dialogButtons")) {
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                    buttonFacet[i].set("v._parentDialog", cmp);
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                    $A.error("The 'buttons' attribute of a ui:dialog component" +
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                             "must be of type ui:dialogButtons");
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        // validate the width attribute is one of the allowed values
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        if (width !== "small" && width !== "medium" && width !== "large" && width !== "auto") {
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            $A.error("The 'width' attribute of a ui:dialog component must be one of " +
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:                     "the following case-sensitive values: small, medium, large, auto");
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:     * Handles the click of the "x" (close) button, or the default cancel button of
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:     * the dialog. Fires the application-level event ui:closeDialog, setting the
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:     * 'confirmClicked' attribute to false.
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        var closeEvent = $A.get("e.ui:closeDialog");
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:        closeEvent.setParams({
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            dialog : cmp,
ruau/ruau-components/src/main/components/ui/dialog/dialogController.js:            confirmClicked : false
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    limitations under the License.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:<ruau:documentation>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	<ruau:description>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:			To use <code>ui:dialog</code>, include one instance of <code>ui:dialogManager</code> component at the end of your component.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:			Only one instance of <code>ui:dialogManager</code> is required to handle multiple dialogs.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:			To handle the opening and closing of your dialogs, use the <code>ui:openDialog</code> and <code>ui:closeDialog</code> application events.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:			To prevent the dialog from being closed when you click outside of the dialog area, set <code>clickOutToClose="false"</code>.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:		   You can use the default buttons by placing the <code>ui:dialogButtons</code> component in the <code>&lt;ruau:set attribute="buttons"&gt;</code> tag.     
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:		   Setting <code>&lt;ui:dialogButtons defaultButtons="both"&gt;</code> provides default OK and Cancel buttons, but you can provide your own buttons using <code>ui:button</code> components.
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	</ruau:description>	
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:		<ruau:example name="dialog" ref="ruaudocs:demoDialog" label="Creating an Overlay Dialog">
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:    	<p>This example shows an overlay dialog.</p>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	   </ruau:example>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	   <ruau:example name="dialog1" ref="ruaudocs:demoModal" label="Creating a Modal Dialog">
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	   <p>This demo shows a modal dialog, which is set using <code>isModal="true"</code>.</p>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:	   </ruau:example>
ruau/ruau-components/src/main/components/ui/dialog/dialog.ruauCOD:</ruau:documentation>
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:<ruau:component extends="ui:action" support="PROTO" description="A button used in ui:dataGrid that enables row-level click events to bubble up to the grid.">
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    <ruau:attribute name="disabled" type="Boolean"/>
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:    <ui:button label="{!v.label}" press="{!c.handleClick}" disabled="{!v.disabled}"/>
ruau/ruau-components/src/main/components/ui/actionButton/actionButton.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:<ruau:event type="COMPONENT" support="Proto" description="Trigger a matching text on autocompleteList.">
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:    <ruau:attribute name="keyword" type="String" description="The keyword to be matched."/>
ruau/ruau-components/src/main/components/ui/matchText/matchText.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:<ruau:component extensible="true" implements="ui:visible" support="beta" description="A decorated stamp containing text">
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    <ruau:attribute name="severity" type="String" description="The severity with which to decorate this stamp.  Accepted values: success, warning, important, info, inverse"/>
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    <ruau:attribute name="title" type="String" description="The title text for the stamp."/>
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    <ruau:attribute name="onclick" type="Ruue.Action" description="The controller method that runs when the stamp is clicked."/>
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    <a ruau:id="uiStamp" title="{!v.title}" class="{!'stamp-'+v.severity+' '+v.class}" href="javascript:void(0);" onclick="{!v.onclick}">
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:    </a>
ruau/ruau-components/src/main/components/ui/stamp/stamp.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/stamp/stamp.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  padding: 1px 4px 2px;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  vertical-align: middle;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  white-space: nowrap;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #999999;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  border-radius: 3px;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  text-decoration: none;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-important {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #b94a48;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-important:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #953b39;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-warning {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #f89406;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-warning:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #c67605;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-success {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #468847;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-success:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #356635;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-info {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #3a87ad;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-info:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #2d6987;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-inverse {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #333333;
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:.uiStamp.stamp-inverse:hover {
ruau/ruau-components/src/main/components/ui/stamp/stamp.css:  background-color: #1a1a1a;
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that a tab has been clicked.">   
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:    <ruau:attribute name="pageIndex" type="Integer" />
ruau/ruau-components/src/main/components/ui/pagerClicked/pagerClicked.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuList/menuList.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    display:none;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    position:absolute;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    overflow-x:auto;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    border-radius:3px;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    background-color:#FFF;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    box-shadow:0 1px 5px rgba(0, 0, 0, .75);
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    display: block;
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    margin: 0px; 
ruau/ruau-components/src/main/components/ui/menuList/menuList.css:    padding: 0px;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    setEventHandlersOnChildren: function(component) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var children = [];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var body = component.get("v.body");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        for (var i = 0; i < body.length; i++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            var child = body[i];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            if (child.isInstanceOf("ui:menuItem")) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            	child.addHandler("menuSelect", component, "c.onMenuItemSelected");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            } else if (child.isInstanceOf("ruau:iteration")) { // support external iteration
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                var iters = child.get("v.body");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                for (var k = 0; k < iters.length; k++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                    var iter = iters[k];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                    if (iter.isInstanceOf("ui:menuItem")) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                    	iter.addHandler("menuSelect", component, "c.onMenuItemSelected");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var items = component.find("item");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        if (items && $A.util.isArray(items)) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            for (var j = 0; j < items.length; j++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                var item = items[j];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                if (item.isInstanceOf("ui:menuItem")) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                	item.addHandler("menuSelect", component, "c.onMenuItemSelected");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var menuItems = component.get("v.childMenuItems");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    handleVisible : function(component) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var elements = this.getElementCache(component),
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            visible = elements.target.get("v.visible");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            $A.util.addClass(elements.targetElement, "visible");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            elements.target.get("e.menuExpand").fire();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            $A.util.removeClass(elements.targetElement, "visible");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            elements.target.get("e.menuCollapse").fire();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var menuItem = this.getMenuItem(component, index);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            var action = menuItem.get("c.setFocus");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            if (action) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                action.runDeprecated();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var visible = concreteCmp.get("v.visible");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            if (currentlyVisible !== true) { // If menu changes from invisible to visible, let's set the initial focus
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                var index = concreteCmp.get("v.focusItemIndex");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    setKeyboardEventHandlers: function(component) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var el = component.find("datalist").getElement();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	$A.util.on(el, "keydown", this.getKeyboardInteractionHandler(component));
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    removeKeyboardEventHandlers: function(component) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var el = component.find("datalist").getElement();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	$A.util.removeOn(el, "keydown", this.getKeyboardInteractionHandler(component));
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	delete component._keyboardEventHandler;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:     * Handle keyboard interactions
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    getKeyboardInteractionHandler: function(component) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var helper = this;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	if (!component._keyboardEventHandler) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    		component._keyboardEventHandler = function(event) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		        var concreteCmp = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		            if (event.keyCode === 39 || event.keyCode === 40) {  // right or down arrow key
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                event.preventDefault();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		            } else if (event.keyCode === 37 || event.keyCode === 38) {  // left or up arrow key
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                event.preventDefault();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                event.stopPropagation();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                helper.handleEsckeydown(concreteCmp, event);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		            } else if (event.keyCode === 9) {  // tab key: dismiss the menu
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                helper.handleTabkeydown(concreteCmp, event);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		                helper.setFocusToTypingChars(concreteCmp, event);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	return component._keyboardEventHandler;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    handleEsckeydown: function(component, event) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        // put the focus back to menu trigger
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var action =  component.get("v.focusTrigger");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	if (action) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    		action.runDeprecated();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var nextIndex = 0;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var srcComponent = this.getComponentForElement(event.target || event.srcElement);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var menuItems = component.get("v.childMenuItems");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        for (var i = 0; i < menuItems.length; i++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                break;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var nextFocusCmp = menuItems[nextIndex];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var action = nextFocusCmp.get("c.setFocus");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        action.runDeprecated();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var previousIndex = 0;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var srcComponent = this.getComponentForElement(event.target || event.srcElement);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var menuItems = component.get("v.childMenuItems");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        for (var i = 0; i < menuItems.length; i++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                break;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var previousFocusCmp = menuItems[previousIndex];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var action = previousFocusCmp.get("c.setFocus");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        action.runDeprecated();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:     * Dismiss the menu when tab key is pressed.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    handleTabkeydown: function(component, event) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:		var closeOnTab = component.get('v.closeOnTabKey');
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var concreteComponent = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        if (concreteComponent && closeOnTab) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:     * Focus on the item whose starting character(s) are what the end user types.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    setFocusToTypingChars: function(component, event) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        // If we were going to clear what keys were typed, don't yet.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        if (!$A.util.isUndefinedOrNull(component._clearBufferId)) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            clearTimeout(component._clearBufferId);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var letter = String.fromCharCode(event.keyCode);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var matchText = component._keyBuffer.join("").toLowerCase();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        var menuItems = component.get("v.childMenuItems");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        for(var i = 0; i < menuItems.length; i++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            var c = menuItems[i];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            var text = c.get("v.label");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:            if(text.toLowerCase().indexOf(matchText) === 0) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                var action = c.get("c.setFocus");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                action.runDeprecated();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                break;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:        component._clearBufferId = setTimeout(function() {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:          var children = component.get("v.childMenuItems");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:          for (var i = 0; i < children.length; i++) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:              var c = children[i];
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:              //TODO: should use boolean flag such as singleSelect or multiSelect instead of checking for ui:radioMenuItem
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:              if (c.isInstanceOf("ui:radioMenuItem") &&
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                  $A.util.getBooleanValue(c.get("v.selected")) &&
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                  c.getGlobalId() != selectedItem.getGlobalId()) {
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                  c.set("v.selected", false);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:                  break;
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var concrete = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var hideMenu = event.getParam("hideMenu");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var deselectSiblings = event.getParam("deselectSiblings");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var focusTrigger = event.getParam("focusTrigger");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    		concrete.set("v.visible", false);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var e = component.get("e.menuSelect");
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	e.setParams(event.getParams()).fire();
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:     * TODO: Need to walk up the tree to find the menuItem. menuItem could contain other components.
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	var htmlCmp = $A.componentService.getRenderingComponentForElement(element);
ruau/ruau-components/src/main/components/ui/menuList/menuListHelper.js:    	return htmlCmp ? htmlCmp.getComponentValueProvider().getConcreteComponent() : null;
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js:    update: function(component, event, helper) {
ruau/ruau-components/src/main/components/ui/menuList/menuListController.js:        helper.setEventHandlersOnChildren(component);
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:<ruau:component access="GLOBAL" support="GA" extensible="true" implements="ui:visible" extends="ui:popupTarget" description="A menu component that can contain menu items: ui:actionMenuItem, ui:checkboxMenuItem, and ui:radioMenuItem, and a separator component ui:menuItemSeparator. This component can be nested in a ui:menu component and can be used together with a ui:menuTriggerLink component, which triggers the menu items.">
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:attribute access="GLOBAL" name="menuItems" type="List" description="A list of menu items set explicitly using instances of the Java class: ruau.​components.​ui.MenuItem."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:attribute access="GLOBAL" name="visible" type="Boolean" default="{!false}" description="Controls the visibility of the menu. The default is false, which hides the menu."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:attribute name="focusItemIndex" type="Integer" default="0"
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:                    description="The index of the item which should be on focus when the menu displays. 0 means the first item and -1 refers to the last."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:attribute name="focusTrigger" type="Ruue.Action" description="The action is invoked to set focus to the menu trigger." />
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:attribute name="childMenuItems" type="Ruue.Component[]" description="a read-only attribute pointing to child components."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:registerEvent access="GLOBAL" name="menuCollapse" type="ui:collapse" description="The event fired when the menu list collapses."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:registerEvent access="GLOBAL" name="menuExpand" type="ui:expand" description="The event fired when the menu list displays."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:registerEvent access="GLOBAL" name="menuSelect" type="ui:menuSelect" description="The event fired when the user select a menu item."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:registerEvent name="refresh" type="ui:refresh" description="Fire this event to refresh the menuList."/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <ruau:handler name="refresh" action="{!c.update}"/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    <div ruau:id="menu" role="menu">
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:    	 <ul ruau:id="datalist" role="presentation">
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:            <ruau:iteration items="{!v.menuItems}" var="item">
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:                <ui:menuItem ruau:id="item" class="{!item.className}" disabled="{!item.disabled}" label="{!item.label}" selected="{!item.selected}" type="{!item.type}" value="{!item.value}"/>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:            </ruau:iteration>
ruau/ruau-components/src/main/components/ui/menuList/menuList.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:    afterRender: function(component, helper) {
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        helper.setKeyboardEventHandlers(component);
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        helper.setEventHandlersOnChildren(component);
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        var ret = this.superAfterRender();
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        helper.setFocus(component, false);
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        var currentlyVisible = false;
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        var divCmp = component.find("menu");
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:            var elem = divCmp.getElement();
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:                currentlyVisible = $A.util.hasClass(elem, "visible");
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        helper.handleVisible(component);
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:        var ret = this.superRerender();
ruau/ruau-components/src/main/components/ui/menuList/menuListRenderer.js:    	helper.removeKeyboardEventHandlers(component);
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:<ruau:event type="COMPONENT" extends="ui:command" description="Command event instructing a component to refresh itself.">
ruau/ruau-components/src/main/components/ui/refresh/refresh.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:<ruau:event type="APPLICATION" description="Indicates that an async component is loaded.">
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:    <ruau:attribute name="asyncComponent" required="true" type="Ruue.Component"/>
ruau/ruau-components/src/main/components/ui/asyncComponentLoaded/asyncComponentLoaded.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:<ruau:component extends="ui:pager" extensible="true" support="GA" description="A pager implementation that allows the user to change the size of pages in items.">
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    <ruau:attribute name="Labels_All" type="String" default="All"                      description="The text to display in the option to show all items."/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    <ruau:attribute name="Labels_Records" type="String" default="Records per page: "   description="The text to display in the label before the pageSize input."/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:    <div class="{!v.class+' pagerContainer pagerPageSize'+(v.totalItems==0?' empty':'')}">
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:	    <ui:inputSelect label="{!v.Labels_Records}" value="{!v.pageSize}" change="{!c.changePageSize}">
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:		    <ui:inputSelectOption label="10" text="10"/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:		    <ui:inputSelectOption label="25" text="25"/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:		    <ui:inputSelectOption label="50" text="50"/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:	    	<ui:inputSelectOption label="100" text="100"/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:	    	<ui:inputSelectOption label="200" text="200"/>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSize.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js:    changePageSize:function(component,domEvent,helper){
ruau/ruau-components/src/main/components/ui/pagerPageSize/pagerPageSizeController.js:        helper.changePageSize(component, component.get("v.pageSize"), domEvent);
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:<ruau:event type="COMPONENT" support="PROTO" description="This component can be visited in a traversal.">
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    <ruau:attribute name="visitor" required="true" type="Object" 
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:        description="The visitor to accept the visitable component." />
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:    <ruau:attribute name="traverser" required="true" type="Object"
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:        description="The traverser to direct the visitation order of the component." />
ruau/ruau-components/src/main/components/ui/traverseEvent/traverseEvent.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:<ruau:component extensible="true" description="A panel for dialogs. Use ui:panelManager to manage your modal panels.">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="closeOnClickOut" type="Boolean" default="false" description="Add listener to close on click outside"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="closeAction" type="Ruue.Action" default="{!c.hide}" description="Close Ruue Action function"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="class" type="String" default="" description="Additional css classes"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="animation" type="String" default="bottom" description="Animation to apply"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	<ruau:attribute name="title" type="String" description="the title of the window"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="detail" type="String" description="the description of the window"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="icon" type="Ruue.Component[]" description="the icon for the panel"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="isVisible" type="Boolean" default="false" description="Should show on render?"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="autoFocus" type="Boolean" default="true" description="Automatically focus on the first focusable element"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="titleDisplay" type="Boolean" default="true" description="The title of the window can be shown/hidden for accessibility"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="isScrollable" type="Boolean" default="true" description="Flag to create a scroller inside"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="isTransient" type="Boolean" default="true" description="Flag to indicate if dialog is one-time use and should be destroyed when hidden"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="isModal" type="Boolean" default="false" description="Indicates if this dialog is modal"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="referenceElement" type="Object" description="The reference node to which this dialog should be positioned" />
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <!-- supported callbacks: onClose -->
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:attribute name="callbacks" type="Object" description="Option callbacks that can be set when creating a new panel through the panelManager." />
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:registerEvent name="panelDoneRendering" type="ui:panelDoneRendering"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:dependency resource="markup://ui:panelTransitionBegin" type="EVENT" />
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:dependency resource="markup://ui:panelTransitionEnd" type="EVENT" />
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    <ruau:dependency resource="markup://ui:updateSize" type="EVENT" />
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	<div class="{!v.class + (v.isModal ? ' modal' : ' nonmodal')}">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:		<!-- Full screen grey glass behind the modal -->
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:        <ruau:if isTrue="{!v.isModal}">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	        <div ruau:id='modal-glass' class="modal-glass" style="display:none"></div>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:        </ruau:if>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	    <div ruau:id='panel'
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:             tabindex="-1"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	     	 class="{! 'panel panelDialog ' + $Browser.formFactor + ' ' + v.class}"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:         	 role="dialog" 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:             aria-labeled-by="{!'title_' + globalId}"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	         style="display:none">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	        <div role="CODument" class="{! v.body.length || v.detail ? 'headerAndBody' : 'headerOnly' }"> 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:                <span class="assistiveText">{!$Label.Global.startOfDialog}</span>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	       	<ui:header class="titleBar modalWindow">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	        	<ruau:renderIf isTrue="{! v.title != '' &amp;&amp; v.title != null}">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	            	<div class="titles">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	            		<h2 id="{!'title_' + globalId}" class="{!(v.titleDisplay ? 'title' : 'assistiveText')}">{!v.title}</h2>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	            </ruau:renderIf>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	        </ui:header>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	        <div class="{! 'body actions scrollbox ' + ((v.body.length || v.detail) ? '' : 'hidden') }">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:    	    		<ui:scroller ruau:id='scroller' scrollContentClass="panelScrollContent" bindEventsToScroller="true">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	    	        	<ruau:renderIf isTrue="{! v.detail != '' &amp;&amp; v.detail != null}">
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	    					<div class="detail">{!v.detail}</div>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:	    				</ruau:renderIf>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:                <ui:button class="closeBtn" press="{!c.close}"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:                	label="{!$Label.Buttons.closeWindow}"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:                	buttonTitle="{!$Label.Buttons.closeWindow}"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:                	labelDisplay="false"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js:		cmp.getEvent('panelDoneRendering').setParams({
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js:			panelId: cmp.getGlobalId(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogRenderer.js:			panelType: 'ui:panelDialog'
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:		var self = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:		cmp._windowKeyHandler = function(e) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:				if (cmp.isValid() && cmp.get('v.isVisible')) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:					$A.util.squash(e);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        var self       = this,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            panel      = this._findContainedComponent(cmp, "panel").getElement(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            panelBody  = panel.querySelector('.body'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            isModal    = cmp.get("v.isModal"),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            modalGlass = isModal ? this._findContainedComponent(cmp, "modal-glass").getElement(): null,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            removeAnim = event.removeAnim || cmp.get('v.animation') === 'none',
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            //css animations & transitions
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            animName   = 'moveto' + cmp.get('v.animation'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            animEnd    = this.getAnimationEndEventName(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            //endAnimationCallback
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            finishHandler = function (e) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.util.removeClass(panel, 'sliding');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.util.removeClass(panel, animName);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                panel.style.cssText = 'display:none';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                panel.removeEventListener(animEnd, finishHandler);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                if (modalGlass !== null) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    $A.util.removeClass(modalGlass, 'fadeIn');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    modalGlass.style.cssText = 'display:none';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                panelBody.style.cssText = '';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                // hide root element of component also
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                cmp.getElement().style.display = 'none';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.get('e.ui:panelTransitionEnd').setParams({
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	action: 'hide', 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	panelId: cmp.getGlobalId(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	isTransient: cmp.get('v.isTransient')
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        // remove key event listener when modal is hidden
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:		$A.util.removeOn(CODument, "keydown", cmp._windowKeyHandler);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        $A.get('e.ui:panelTransitionBegin').setParams({ panel: cmp, isOpening: false }).fire();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        //trigger animation
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.addEventListener(animEnd, finishHandler, false);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        $A.util.addClass(panel, 'sliding');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.setAttribute("aria-hidden", 'true');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.offsetWidth; //force the browser to apply the styles and send the composite layer (thanks to .sliding) to the GPU before moving it
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        // remove the glass panel and transition opacity while hidding on modals
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        if (modalGlass !== null) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            modalGlass.style.opacity = '0';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.style.opacity = '0';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            finishHandler({});
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            $A.util.addClass(panel, animName);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        var self       = this,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            panel      = this._findContainedComponent(cmp, "panel").getElement(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            panelBody  = panel.querySelector('.body'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            panelTitle = panel.querySelector('.titleBar'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            isModal    = cmp.get("v.isModal"),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            modalGlass = isModal ? this._findContainedComponent(cmp, "modal-glass").getElement(): null,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            removeAnim = cmp.get('v.animation') === 'none',
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            //custom animation
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            animEnd    = this.getAnimationEndEventName(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            animName   = 'movefrom' + cmp.get('v.animation'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            calculateScrollerHeight = function () {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                //move this eventually to somewhere global
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                var margin = 10,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    modalHeightPercentage = 0.7,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    panelScrollContent = panel.querySelector('.panelScrollContent'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    //calculate all needed heights to see if the scroller is taking too much room
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    maxModalHeight  = windowHeight * modalHeightPercentage,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    titleHeight     = panelTitle ? panelTitle.offsetHeight: 0,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    panelHeight     = panelScrollContent.offsetHeight + titleHeight,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    availableHeight = maxModalHeight - titleHeight,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    scrollerHeight  = panelScrollContent.offsetHeight;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                if (scrollerHeight > availableHeight) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    panelBody.style.height = availableHeight - margin + 'px';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    $A.util.removeClass(panelBody, 'scrollbox');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                    self._findContainedComponent(cmp, "scroller").set('v.enabled',  false);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            //endAnimationHandler: cleanup all classes and events
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            finishHandler = function (e) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                panel.style.display = 'block';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.util.removeClass(panel, 'sliding');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.util.removeClass(panel, 'movefrombottom');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                panel.removeEventListener(animEnd, finishHandler);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.get("e.ui:updateSize").fire();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.get('e.ui:panelTransitionEnd').setParams({
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	action: 'show', 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	panelId: cmp.getGlobalId(),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	// panelManager auto destroys transient modals
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                	isTransient: cmp.get('v.isTransient')
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                // This is use by the WebDriver test to detect that the sliding animation is done.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                $A.util.addClass(panel, 'panelReady');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                // add key event listener when modal is shown
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        		$A.util.on(CODument, "keydown", cmp._windowKeyHandler);		
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        //move the dialog to the right position
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        if (!isModal) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        $A.get('e.ui:panelTransitionBegin').setParams({ panel: cmp, isOpening: true }).fire();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.addEventListener(animEnd, finishHandler, false);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        $A.util.addClass(panel, 'sliding');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.style.visibility = 'hidden';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.style.display = 'block';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        //glass
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        if (modalGlass !== null) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            modalGlass.style['display'] = 'block';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            modalGlass.offsetWidth; //force the browser to paint it.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            $A.util.addClass(modalGlass, 'fadeIn');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        calculateScrollerHeight();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.offsetWidth;// make the browser repaint with the new .sliding and inline css style attribrutes
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.style.visibility = 'visible';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        panel.setAttribute("aria-hidden", 'false');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            finishHandler({});
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            $A.util.addClass(panel, animName);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        var referenceElem = cmp.get('v.referenceElement');
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var elem = cmp.getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var panelElem = this._findContainedComponent(cmp, "panel").getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var panelElemRect = panelElem.getBoundingClientRect();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var referenceElemRect = referenceElem.getBoundingClientRect();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var viewPort = $A.util.getWindowSize();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            // Vertical alignment
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            // getBoundingClientRect method does not return height and width in IE7 and Ie8
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var height = typeof panelElemRect.height != 'undefined' ? panelElemRect.height : panelElemRect.bottom - panelElemRect.top;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var scrollY = CODument.documentElement.scrollTop;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            if ((viewPort.height - referenceElemRect.bottom) < height) { // no enough space below
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                if (referenceElemRect.top < height) { // no enough space above either. Put it in the middle then
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:                } else { // put it above
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            // Horizontal alignment
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            // getBoundingClientRect method does not return height and width in IE7 and Ie8
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var width = typeof panelElemRect.width != 'undefined' ? panelElemRect.width : panelElemRect.right - panelElemRect.left;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:            var scrollX = CODument.documentElement.scrollLeft;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:     * Returns the modal glass element to panel manager to stack the zIndex
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    getModalGlassElement: function(cmp) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	var el = null,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    		modalGlass = this._findContainedComponent(cmp, "modal-glass");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	if (modalGlass && modalGlass.isRendered()) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    		el = modalGlass.getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:     * Returns the panel element to panel manager to stack the zIndex
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    getPanelElement: function(cmp) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	var el = null,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:			panel = this._findContainedComponent(cmp, "panel");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:		if (panel) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:			el = panel.getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	 * This indirection is because there are two different ways to close the panel:
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	 * By default the panel can close itself calling directly closeAction
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	 * When invoked by the panelManager, it needs to perform some specific manager logic, before it can be closed.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	 * We need to pass a function instead of a regular Ruue action because otherwise, when destroying the panel, 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	 * Ruue will remove the original Action as well.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	var closeAction = cmp.get('v.closeAction'),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	    callbacks = cmp.get("v.callbacks");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	if (callbacks && $A.util.isFunction(callbacks.onClose)) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	    callbacks.onClose();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    		// A regular function passed my the manager to avoid original action destruction
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    _findContainedComponent: function(cmp, localId) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	var p = cmp;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	var containedCmp = cmp.find(localId);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	while (!containedCmp && p.isInstanceOf("ui:panelDialog")) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    		containedCmp = p.find(localId);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:    	return containedCmp;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	        var styles = window.getComputedStyle(CODument.documentElement, ''),
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	            pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1],
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	        this._prefix = up ? pre.toUpperCase() : pre;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	getAnimationEndEventName: function () {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        var eventName = this.ANIMATION_END_EVENT_NAMES[this.getPrefix()];
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:        return eventName ? eventName : 'animationend';
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	    webkit : 'webkitAnimationEnd',
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	    o : 'oAnimationEnd',
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	    moz : 'animationend',
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogHelper.js:	    ms : 'animationend' // IE 10 or above 
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	* Ruue component to panel.cmp
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		isModal : true
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	// verify modal element
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	verifyModalElements: function(cmp) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		var containerEle = cmp.getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		var ele = cmp.find("panel").getElement();
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		$A.test.assertTruthy(ele.querySelector(".modalWindow"), "Element is not rendered as modal");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		$A.test.assertTruthy(ele.querySelector(".closeBtn"), "Close button is not rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		$A.test.assertTrue($A.util.hasClass(ele, "panel"), "Element is not rendered with panel class");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		$A.test.assertTrue($A.util.hasClass(ele, "panelDialog"), "Element is not rendered with panelDialog class");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		//check for modal vs nonModal overlay
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		if(cmp.get("v.isModal")) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTrue($A.util.hasClass(containerEle, "modal"), "Container Element should have modal class");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTruthy(containerEle.querySelector(".modal-glass"), "modal glass is not rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTrue($A.util.hasClass(containerEle, "nonmodal"), "Container Element is not rendered with nonmodal class");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertFalsy(containerEle.querySelector(".modal-glass"), "modal glass should not be rendered for nonModal panel Dialog");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		// title bar
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		if(cmp.get("v.title") || cmp.get("v.detail")) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTruthy(ele.querySelector(".titleBar"), "titleBar is not rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTruthy(ele.querySelector(".body"), "body is not rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:				$A.test.assertEquals(cmp.get("v.title"), ele.querySelector(".title").textContent, "title is not expected");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:				$A.test.assertFalsy(ele.querySelector(".title")?ele.querySelector(".title").textContent:ele.querySelector(".title"), "title is unexpectedly rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			// detail
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			if(cmp.get("v.detail")) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:				$A.test.assertEquals(cmp.get("v.detail"), ele.querySelector(".detail").textContent, "detail is not expected");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:				$A.test.assertFalsy(ele.querySelector(".detail")?ele.querySelector(".detail").textContent:ele.querySelector(".detail"), "detail is unexpectedly rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertFalsy(ele.querySelector(".titleBar"), "titleBar is unexpectedly rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTruthy(ele.querySelector(".button_row"), "buttons is not rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertFalsy(ele.querySelector(".button_row"), "buttons is unexpectedly rendered");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		// additional class
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		if(cmp.get("v.class")) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			$A.test.assertTrue($A.util.hasClass(ele, cmp.get("v.class")), "Additional class not added as expected");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:    		$A.test.assertTrue($A.util.hasClass(ele, "forceUIPanel"), "Additional class added unexpectedly");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                componentDef: "markup://ui:inputTextArea",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                    values: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                        value: "this is value",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                        label: "input box",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                        actionable: true,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:    getMockButton: function(label) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:            componentDef: "markup://ui:actionButton",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:            attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                values: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:                	action: {"label": label}
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	* Modal is rendered
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalAllAttributes:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			detail: "test detail",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			isScrollable: true
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testNonModalAllAttributes:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			detail: "test detail",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			isScrollable: true,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			isModal: false
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalTitleOnly:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalDetailOnly:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			detail: "test detail"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalTitleAndDetailOnly:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			detail: "test detail"
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalNoScroller:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			isScrollable: false
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	testModalSpecialCharecter:{
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:		attributes: {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			'class': "testClass",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			title: "test title!$#%^!^%$^&@FAGFDGWAERGY$#^%&@%#^%$&amp;",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			detail: "test detail!$#%^!^%$^&@FAGFDGWAERGY$#^%&@%#^%$&amp;",
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:			isScrollable: true
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    	var context = this;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    		function() { return (!cmp.get("v.body").length || cmp.find("panel").getElement().querySelector(".uiButton"));},
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialogTest.js:	    			context.verifyModalElements(cmp);
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	/* Flex & box fallback */
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: -webkit-box;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: -moz-box;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: -ms-flexbox;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: -webkit-flex;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: flex;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-webkit-box-orient: horizontal;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-webkit-box-pack: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-webkit-box-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-moz-box-orient: horizontal;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-moz-box-pack: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-moz-box-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	-ms-flex-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	box-orient: horizontal;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	box-pack: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	box-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:    position: absolute;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.modal {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.nonmodal {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: static;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: absolute;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .modal-glass {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	background-color: #2A4158;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	opacity: 0;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: absolute;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	transition: opacity 300ms;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: none;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .scrollbox .scrollWrapper {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	overflow: auto;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: relative;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: relative;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: block;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin: 0 0 -18px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .scrollbox:after {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: relative;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: block;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin-top: -6px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	transition: transform .3s ease-in;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:    height: auto;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	max-height: 70%;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	max-width: 292px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	background-color: #FFFFFF;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.modal .panelDialog {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:    position: relative;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:    margin: auto;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.nonmodal .panelDialog {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:    position:relative;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:@media only screen and (min-width: 35.625em) {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	.THIS .panelDialog {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:		max-width: 400px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .body {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding-top: 0;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	background-color: inherit;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .body.scrollbox > div.uiScrollerDeprecated > div {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding-bottom: 14px
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .label {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	max-width: 100%;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .body.actions button:last-of-type {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin-bottom: 14px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .actions {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding: 1px 14px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .actions.scrollbox {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding: 0 14px 14px 14px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .actions .uiButton.default {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: block;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin-top: 14px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panel.panelDialog .uiButton.closeBtn {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: absolute;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	font-family: Arial;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding: 12px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin: -12px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	background: transparent;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	box-shadow: none;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.nonmodal .panel.panelDialog .uiButton.closeBtn {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS.modal .panel.panelDialog .uiButton.closeBtn {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .titleBar {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding: 0 14px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	text-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	width: auto;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	height: auto;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	position: static;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-top-left-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-top-right-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	background-color: #FFFFFF;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .headerOnly .titleBar {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-bottom-left-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	border-bottom-right-radius: 5px;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .titleBar .titles {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	text-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin: 14px 0;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .titleBar .titles .title {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	word-break: break-word;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog div.body .detail {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	padding: 14px 0;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	text-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	word-break: break-word;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog .titleBar > .bBody > .forceIcon {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	text-align: center;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	margin: 10px 0;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	display: block;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .modal-glass.fadeIn {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	opacity: 0.8;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog.sliding {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	transition: transform .3s linear, opacity .2s linear;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog.movefrombottom {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	animation: movefrombottom .3s ease both;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:.THIS .panelDialog.movetobottom {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	animation: movetobottom .3s ease both;
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:@keyframes movetobottom {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	to { transform:translate3d(0, 100%, 0);}
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:@keyframes movefrombottom {
ruau/ruau-components/src/main/components/ui/panelDialog/panelDialog.css:	from { transform:translate3d(0, 100%, 0);}
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:<ruau:event type="COMPONENT">
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    <ruau:attribute name="month" type="Integer"/>
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:    <ruau:attribute name="year" type="Integer"/>
ruau/ruau-components/src/main/components/ui/updateCalendarTitle/updateCalendarTitle.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	 one:createSlidePanel and one:destroySlidePanel are deprecated.  
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	 Please use force:createPanelSlider and force:destroyPanel instead
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	 (along with force:showPanelSlider and force:hidePanel if you like).
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	 See onetest:panelSliderWrapperTest.js for examples.
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:<ruau:event type="APPLICATION" support="DEPRECATED">
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	<ruau:attribute name="isVisible" type="Boolean" description="panel is visible or not"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	<ruau:attribute name="isModal" type="Boolean" description="modal glass behind the actual panel"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:	<ruau:attribute name="closeOnModalClick" type="Boolean" description="Whether a click button in the modal area will close the panel"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:  	<ruau:attribute name="body" type="Ruue.Component[]" description="buttons to add to the header of the panel(only when modal is enabled)"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="button" type="Ruue.Component[]" description="Buttons to add to the bottom of the window (only when panel is enabled"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="buttonColor" type="String" description="CSS Background string for the button"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="buttonClass" type="String" description="CSS class string"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="slideFrom" type="String" description="String that identifies the animation values (defaults to right): left|right|top|bottom"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="iconKey" type="String" description="Default icon from the current font to put into the button"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="callback" type="Object" description="Callback that will be called once the panel has been rendered. Can be Ruue.Action | function" />
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="panelOutAltText" type="String" description="Alt text for icon when panel is open/slide out for accessibility"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="panelInAltText" type="String" description="Alt text for icon when panel is closed for accessibility"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="iconAltText" type="String" description="Icon alt text in panel"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:    <ruau:attribute name="iconTransformation" type="String" description="Css transformation on icon e.g flip,rotate or any other custom"/>
ruau/ruau-components/src/main/components/ui/createSlidePanel/createSlidePanel.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the menu expands.">
ruau/ruau-components/src/main/components/ui/popupExpand/popupExpand.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:<ruau:component extends="ui:pager" extensible="true" support="GA" description="A pager implementation that allows the user to navigate sequentially between pages or jump to the first or last page.">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    <ruau:attribute name="Labels_First" type="String" default="First"          description="The text to display in the label of the link used to jump to the first page."/>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    <ruau:attribute name="Labels_Last" type="String" default="Last"            description="The text to display in the label of the link used to jump to the last page."/>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    <ruau:attribute name="Labels_Next" type="String" default="Next"            description="The text to display in the label of the link used to jump to the next page."/>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:    <ruau:attribute name="Labels_Previous" type="String" default="Previous"    description="The text to display in the label of the link used to jump to the previous page."/>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:   <div class="{!v.class+' pagerContainer pagerNextPrevious'+(v.totalItems==0?' empty':'')}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        <a ruau:id="pager:first" class="{!'pagerControl first' + ((v.currentPage le 1)?' off':'')}" onclick="{!c.firstPage}" href="javascript:void('First')" aria-disabled="{!v.currentPage le 1}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<ruau:renderIf isTrue="{!v.currentPage le 1}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<span class="assistiveText">Disabled</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	</ruau:renderIf>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="visualization"></span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="label">{!v.Labels_First}</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        </a>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        <a ruau:id="pager:previous" class="{!'pagerControl previous' + ((v.currentPage le 1)?' off':'')}" onclick="{!c.previousPage}" href="javascript:void('Previous')" aria-disabled="{!v.currentPage le 1}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<ruau:renderIf isTrue="{!v.currentPage le 1}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<span class="assistiveText">Disabled</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	</ruau:renderIf>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="visualization"></span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="label">{!v.Labels_Previous}</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        </a>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        <a ruau:id="pager:next" class="{!'pagerControl next' + ((v.currentPage == v.pageCount)?' off':'')}" onclick="{!c.nextPage}" href="javascript:void('Next')" aria-disabled="{!v.currentPage == v.pageCount}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<ruau:renderIf isTrue="{!v.currentPage == v.pageCount}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<span class="assistiveText">Disabled</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	</ruau:renderIf>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="label">{!v.Labels_Next}</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="visualization"></span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        </a>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        <a ruau:id="pager:last" class="{!'pagerControl last' + ((v.currentPage == v.pageCount)?' off':'')}" onclick="{!c.lastPage}" href="javascript:void('Last')" aria-disabled="{!v.currentPage == v.pageCount}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<ruau:renderIf isTrue="{!v.currentPage == v.pageCount}">
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	<span class="assistiveText">Disabled</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        	</ruau:renderIf>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="label">{!v.Labels_Last}</span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:            <span class="visualization"></span>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:        </a>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:.uiPagerNextPrevious .pagerControl {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:    margin: 0 .25em;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:    text-decoration: none;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:.uiPagerNextPrevious .pagerControl.first {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:	margin-left: 0;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:.uiPagerNextPrevious .pagerControl.last {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:	margin-right: 0;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:.uiPagerNextPrevious .pagerControl.off {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPrevious.css:    cursor: default;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    firstPage:function (component, domEvent, helper) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var currentPage = parseInt(component.get("v.currentPage"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	if (currentPage <= 1) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        var targetPage = 1;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        helper.changePage(component,targetPage,domEvent);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    lastPage:function (component, domEvent, helper) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var currentPage = parseInt(component.get("v.currentPage"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var pageCount = parseInt(component.get("v.pageCount"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	if (currentPage == pageCount) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        var targetPage = pageCount;
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        helper.changePage(component, targetPage, domEvent);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    nextPage:function (component, domEvent, helper) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var currentPage = parseInt(component.get("v.currentPage"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var pageCount = parseInt(component.get("v.pageCount"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	if (currentPage == pageCount) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        var targetPage = Math.min(currentPage+1, pageCount);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        helper.changePage(component, targetPage, domEvent);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    previousPage:function (component, domEvent, helper) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	var currentPage = parseInt(component.get("v.currentPage"), 10);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:    	if (currentPage <= 1) {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        var targetPage = Math.max(currentPage-1, 1);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousController.js:        helper.changePage(component, targetPage, domEvent);
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:	 * Tests to verify links on page 1
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:	testFirstPage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        attributes : {currentPage : 1, pageSize : 10, totalItems: 50},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	first = cmp.find("pager:first").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	previous = cmp.find("pager:previous").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	next = cmp.find("pager:next").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	last = cmp.find("pager:last").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(first,"off"), "first Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(previous,"off"), "previous Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(next,"off"), "next Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(last,"off"), "last Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * Tests to verify links on last page
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testLastPage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        attributes : {currentPage : 5, pageSize : 10, totalItems: 50},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	first = cmp.find("pager:first").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	previous = cmp.find("pager:previous").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	next = cmp.find("pager:next").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	last = cmp.find("pager:last").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(first,"off"), "first Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(previous,"off"), "previous Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(next,"off"), "next Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(last,"off"), "last Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * Tests to verify links on middle page
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testMiddlePage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        attributes : {currentPage : 3, pageSize : 10, totalItems: 50},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	first = cmp.find("pager:first").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	previous = cmp.find("pager:previous").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	next = cmp.find("pager:next").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	last = cmp.find("pager:last").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(first,"off"), "first Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(previous,"off"), "previous Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(next,"off"), "next Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertFalse($A.util.hasClass(last,"off"), "last Link should be enable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * Test to verify default behavior when no attribute values are set
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testWithoutPassingAttributesValues: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	first = cmp.find("pager:first").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	previous = cmp.find("pager:previous").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	next = cmp.find("pager:next").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	last = cmp.find("pager:last").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(first,"off"), "first Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(previous,"off"), "previous Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(next,"off"), "next Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(last,"off"), "last Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testFilterListWithJustOnePage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        attributes : {currentPage : 1, pageSize : 25 ,totalItems: 10},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	first = cmp.find("pager:first").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	previous = cmp.find("pager:previous").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	next = cmp.find("pager:next").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	last = cmp.find("pager:last").getElement();
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(first,"off"), "first Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(previous,"off"), "previous Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(next,"off"), "next Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	$A.test.assertTrue($A.util.hasClass(last,"off"), "last Link should be disable");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * Test exception is thrown when negative values are passed
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testWithNegativeValues: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        attributes : {currentPage : -1, pageSize : -25 ,totalItems: -10},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * Default Page size should be 25
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testDefaultPageSize: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	pageSize = cmp.get('v.pageSize');
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	ruau.test.assertEquals(25, pageSize, "Default Page size should be 25");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:     * verify all calculated fields are correct
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testCalculatedFieldsForFirstPage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    	attributes : {currentPage : 1, pageSize : 10, totalItems: 55},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	startIndex = cmp.get('v.startIndex');
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	ruau.test.assertEquals(1, startIndex + 1, "Index of the first item on the page should be 1");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:            ruau.test.assertEquals(10, endIndex + 1, "Index of the last item on the page should be 10");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:            pageCount = cmp.get('v.pageCount');
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	ruau.test.assertEquals(6, pageCount, "Total Number of pages should be 6");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    testCalculatedFieldsForLastPage: {
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:    	attributes : {currentPage : 6, pageSize : 10, totalItems: 55},
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	startIndex = cmp.get('v.startIndex');
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	ruau.test.assertEquals(51, startIndex + 1, "Index of the first item on the page should be 51");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:            ruau.test.assertEquals(55, endIndex + 1, "Index of the last item on the page should be 55");
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:            pageCount = cmp.get('v.pageCount');
ruau/ruau-components/src/main/components/ui/pagerNextPrevious/pagerNextPreviousTest.js:        	ruau.test.assertEquals(6, pageCount, "Total Number of pages should be 6");
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/paste/paste.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/paste/paste.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/paste/paste.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the user has pasted content from the clipboard."></ruau:event>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		//populate pageId with component's globalId
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		cmp.set('v.priv_pageId', cmp.getGlobalId());
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:	onPageSelected : function (cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		helper.selectPage(cmp, evt);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:	onPageUpdate: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		helper.updatePage(cmp, evt.getParam("pageComponent"));
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:	onPageShow: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		helper.showPage(cmp, evt.getParam('pageIndex'));
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:	onPageHide: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		helper.hidePage(cmp, evt.getParam('pageIndex'));
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:	onUpdateSize: function(cmp, evt, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:		var size = evt.getParam('pageSize');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageController.js:			helper.updateSize(cmp, size.width, size.height);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	updateSize: function(cmp, width, height) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		var w=width || cmp.get('v.priv_width'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	selectPage: function(cmp, evt) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		var selectedPage = evt.getParam('pageIndex'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			curPage = cmp.get('v.pageIndex'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			selectedItemCss = 'carousel-page-selected';
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		if (selectedPage === curPage) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			$A.util.addClass(cmp.getElement(), selectedItemCss);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			this.showPage(cmp, selectedPage);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			cmp.set('v.isSelected', false);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			$A.util.removeClass(cmp.getElement(), selectedItemCss);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	 * Update page content
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	updatePage: function(cmp, pageBody) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		cmp.find('pageContainer').set('v.body', pageBody || []);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	 * Set page is visible or not when displayed
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		var isVisible = cmp.get('v.priv_visible'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			strClass = cmp.get('v.class') || '';
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			cmp.set('v.class', strClass + ' hidden');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			var snap = cmp.get('v.priv_snap');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			if (snap && snap.indexOf('.') != -1) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:				cmp.set('v.priv_snap', snap.substring(snap.indexOf('.') + 1));
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	showPage: function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		var curPage = cmp.get('v.pageIndex'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			isVisible = $A.util.getBooleanValue(cmp.get('v.priv_visible')),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			hiddenClass = 'hidden';
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		if (pageIndex == curPage && !isVisible) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:                $A.util.removeClass(cmp.getElement(), hiddenClass);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:                cmp.getElement().setAttribute('aria-expanded', 'true');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	hidePage: function(cmp, pageIndex) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		var curPage = cmp.get('v.pageIndex'),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			isVisible = $A.util.getBooleanValue(cmp.get('v.priv_visible')),
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			hiddenClass = 'hidden';
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:		if (pageIndex == curPage && isVisible) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			$A.util.addClass(cmp.getElement(), hiddenClass);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			cmp.getElement().setAttribute('aria-expanded', 'false');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			cmp.set('v.priv_visible', false);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:	setDefaultAttributes: function(cmp) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageHelper.js:			cmp.getElement().setAttribute('aria-expanded', 'false');
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:	afterRender: function(cmp, helper) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:		helper.setDefaultAttributes(cmp);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:		helper.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:		// call super rerender only if necessary, to avoid triggering unnecessary rerendering for contained child components
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:			helper.updateSize(cmp);
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPageRenderer.js:		if (cmp.isDirty("v.class") || cmp.isDirty("v.priv_snap")) {
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:<ruau:component extends="ui:interactive"  extensible="true" description="A scrollable page in a ui:carousel component.">
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="title" type="String" description="Title of the page" />    
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="isCacheable" default="true" type="Boolean" description="Indicates whether the page content is cacheable on client or not." />    
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="isDefault" default="false" type="Boolean" description="Determines if this is the default page to display." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="pageModel" type="Object" description="The model that is used to create components dynamically." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="pageIndex" type="Integer" description="The index of this page." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="isSelected" type="Boolean" default="false" description="Indicates whether the page is selected or not." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="parent" type="Ruue.Component[]" description="The page container." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_width" type="Integer" description="PRIVATE - Width of the page in pixels. This value is inherited from the ui:carousel 'width' attribute." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_height" type="Integer" description="PRIVATE - Height of the page in pixels. This value is inherited from the ui:carousel 'height' attribute." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_pageStyle" type="String" description="PRIVATE" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_pageId" type="String" description="PRIVATE" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_visible" type="Boolean" description="Indicates page is visible or not." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_continuousFlow" type="Boolean" description="Indicates carousel can flow continuously or not." />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="priv_snap" type="String" description="PRIVATE - Scroller snap option."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the carousel page is selected."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:registerevent name="update" type="ui:carouselPageEvent" description="The event fired when the carousel page is updated."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:registerevent name="show" type="ui:carouselPageEvent" description="The event fired when the carousel page is displayed."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:registerevent name="hide" type="ui:carouselPageEvent" description="The event fired when the carousel page is hidden."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:registerevent name="updateSize" type="ui:carouselPageEvent" description="The event fired when the carousel page is resized."/>
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="pageSelected" action="{!c.onPageSelected}" /> 
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="update" action="{!c.onPageUpdate}" /> 
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="show" action="{!c.onPageShow}" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="hide" action="{!c.onPageHide}" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="updateSize" action="{!c.onUpdateSize}" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:handler name="init" value="{!this}" action="{!c.onInit}" />
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <ruau:attribute name="showPage" type="Ruue.Action" />    
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <!-- id attribute is linked to the aria-control attribute in page indicator -->
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:    <section class="{!v.class + ' carousel-page ' + v.priv_snap}" id="{!v.priv_pageId}" ruau:id="pageContainer" style="{!v.priv_pageStyle}"  role="tabpanel">						 						 							
ruau/ruau-components/src/main/components/ui/carouselPage/carouselPage.cmp:</ruau:component>    
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css:.THIS.autocompleteButton {
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css:	background: transparent;
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.css:	box-shadow: none;
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:<ruau:component extends="ui:inputText" extensible="true" support="proto"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    description="This component is used as input text in a ui:autocomplete component.">
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    <ruau:attribute name="autocompleteButton" type="Ruue.Component[]" description="Optional button to render with this component."/>
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    <input ruau:id="txt"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           class="{!v.class}"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           value="{!v.value}"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           placeholder="{!v.placeholder}"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           disabled="{!v.disabled}"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           maxlength="{!v.maxlength}"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           aria-autocomplete="list"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           aria-expanded="false"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           aria-haspopup="true"
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           aria-activedescendant=""
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:           aria-describedby="{!v.ariaDescribedBy}"/>
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:    {!v.autocompleteButton}
ruau/ruau-components/src/main/components/ui/inputTextForAutocomplete/inputTextForAutocomplete.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that the menu collapses.">
ruau/ruau-components/src/main/components/ui/popupCollapse/popupCollapse.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:<ruau:event type="COMPONENT" description="Indicates that we should clean up the validation error(s) on a component.">
ruau/ruau-components/src/main/components/ui/clearErrors/clearErrors.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     * TODO::make pagination work with more than one data provider.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    handlePageChange: function(component, event, helper) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        var currentPage = event.getParam("currentPage");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        var pageSize = event.getParam("pageSize");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        component.set("v.currentPage", currentPage, true);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        component.set("v.pageSize", pageSize);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        helper.triggerDataProvider(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    handleDataChange: function(component, event, helper) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	var concrete = component.getConcreteComponent(),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		concrete._refreshing = false;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	concreteHelper.handleDataChange(component, event, concrete._callback);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	concrete._callback = null; // remove reference to avoid a leak
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:        helper.initTriggerDataProviders(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    // TODO: Support refresh-all behavior
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	var concrete = component.getConcreteComponent(),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		params = event.getParam("parameters"),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	if (params) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		index = params.index;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		concrete._callback = params.callback;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	concrete.set("v.currentPage", 1, true);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	helper.triggerDataProvider(component, index);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     * Handles removal of a row(s) from the list.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     * Structure your "parameters" (inherited from ui:command) like so:
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     * parameters : { 
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     *     timeout  : Number 	// number of milliseconds to use as an animation timeout
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     *     animate  : Function  // invoked to apply whatever animation technique is most appropriate
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:     *     callback : Function  // invoked after the timeout and hard removal has occurred
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    addRemove: function (component, event, helper) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	var params = event.getParams(),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		timeout = params.parameters && params.parameters.timeout, 	// no default timeout
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		animate = params.parameters && params.parameters.animate, 	
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		callback = params.parameters && params.parameters.callback,
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	if (params.remove) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		// Default index and count if necessary.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		if (params.last) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    			params.index = items ? items.length - 1 : null; 
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    			params.count = 1;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		if (params.count) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    			helper.remove(component, params.index, params.count, timeout, animate, callback);	
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    			throw new Error("Remove command must be provided with either a 'count' or 'last' parameter.");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		throw new Error('Add command not implemented on ui:abstractList.');
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    triggerDataProvider: function(component, event, helper) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	var params = event.getParam("parameters");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	var index = 0;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	if (params) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    		index = params.index;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListController.js:    	helper.triggerDataProvider(component, index);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * These helper methods are in the renderer due to the many ways
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * that abstractList can be implemented.  Since controller methods
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * can be overridden, and component creation can be dynamic, putting
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * the relevant helper method call in the renderer ensures that the
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js: * emptyListContent is handled no matter how the list is implemented.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js:	afterRender : function(component, helper){
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js:		helper.updateEmptyListContent(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListRenderer.js:			helper.updateEmptyListContent(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:<ruau:component extensible="true" 
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:				abstract="true" 
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:				implements="ui:visible, ui:pagingInterface"  
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:				description="An abstract component that provides a basic layout for the ui:list component.">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="itemTemplate" type="Ruue.ComponentDefRef[]" required="true" description="A ComponentDefRef to use as the template for each generated row in the list."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="items" type="Object[]" description="An array of arbitrary map objects representing the rows of data in the list."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="itemVar" type="String" required="true" description="The name by which to refer to the current data object inside of the template for each row."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="dataProvider" type="Ruue.Component[]" required="true" description="A list of data provider components. Use a ui:dataProvider component to provide list data."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="emptyListContent" type="Ruue.Component[]" description="Content to be shown if the list is empty"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="loadingIndicator" type="Ruue.Component[]" description="Content to be shown while the list is loading"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="header" type="Ruue.Component[]" description="A facet above the rendered list, for use as a list header"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:attribute name="footer" type="Ruue.Component[]" description="A facet below the rendered list, for use as a list footer"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:registerEvent name="triggerDataProvider" type="ui:dataProvide"  description="The event fired when the data provider is triggered."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:handler name="triggerDataProvider" action="{!c.triggerDataProvider}"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:registerEvent name="refresh" type="ui:refresh" description="The event fired when the component is refreshed."/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:handler name="refresh" action="{!c.refresh}"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:	<ruau:registerEvent name="addRemove" type="ui:addRemove" description="Command event to insert or remove items"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:	<ruau:handler name="addRemove" action="{!c.addRemove}"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <ruau:handler name="init" action="{!c.init}" value="{!this}"/>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:    <div class="{!v.class + (v.visible == false ? ' invisible' : '')}" role="{!v.role}">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:        {!v.header}
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:        <div class="listContent">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:			<div class="emptyListContent">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:            <div class="loadingIndicator">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                <ruau:if isTrue="{!v.loadingIndicator.length == 0}">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                    <div class="background"></div>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                    <span class="label">Loading...</span>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                    <ruau:set attribute="else">
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                        {!v.loadingIndicator}
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                    </ruau:set>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:                </ruau:if>
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	 * Behavior when the data from one of its data providers changes
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	 * @param {Component} component Potentially non-concrete (ui:abstractList) component instance.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	 * @param event ui:dataChanged.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	 * @param {Function} callback An optional callback to invoke after 'v.items' has been replaced. 
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	handleDataChange: function(component, event, callback) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		var concrete = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		concrete.set("v.items", event.getParam("data"));
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        this.showLoading(component, false);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        if (callback) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        	callback(); 
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	/** Behavior to prepare the list for new data before a refresh **/
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:	updateEmptyListContent:function (component) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		// make sure we are referencing a concrete component.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		var concrete_component = component.getConcreteComponent();
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		var items = concrete_component.get("v.items");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		var has_items = items != null && items.length > 0;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        $A.util[has_items ? "removeClass" : "addClass"](concrete_component.getElement(), "showEmptyContent");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    /** Behavior for triggering data providers on initialization **/
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    initTriggerDataProviders: function(component) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    	this.triggerDataProvider(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        this.initDataProvider(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        this.initPagers(component);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    initDataProvider: function(component) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        var dataProviders = component.get("v.dataProvider");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        if (dataProviders && dataProviders.length && dataProviders.length > 0) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            for (var i = 0; i < dataProviders.length; i++) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                dataProviders[i].addHandler("onchange", component, "c.handleDataChange");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            component._dataProviders = dataProviders;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    initPagers: function(component) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        var facets = component.getFacets();
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        var pagers = [];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        // walk each facet looking for instances of ui:pager
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        for (var i=0, len=facets.length; i<len; i++) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            var facet = facets[i];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            for (var n = 0; n < facet.len; n++) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                var c = facet[n];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                if (c.getDef().getDescriptor().getQualifiedName() != "markup://ruau:unescapedHtml") {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                    if (c.isInstanceOf("ui:pager")) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                        pagers.push(c);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:                        pagers = pagers.concat(c.find({instancesOf:"ui:pager"}));
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        // wireup handlers and values
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://      var chainedAttrs = ["currentPage", "pageSize", "totalItems"];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        var j = pagers.length;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            var pager = pagers[j];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            pager.addHandler("onPageChange", component, "c.handlePageChange");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://          TODO: want to wire this up so that the valueProvider for these attributes is always the parent list, not the component
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://              in which the paginators were referenced, but not sure we can do that today...
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://          var k = chainedAttrs.length;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://              var exp = "v." + chainedAttrs[k];
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js://              pager.set(exp, component.get(exp));
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        // cache the pagers
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        component._pagers = pagers;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * @param component {Component} ui:abstractList
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * @param param {Number/Boolean} count or boolean for last item
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * @param timeout
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * @param callback
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    remove: function (component, index, count, timeout, animate, callback) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    	var items = component.get('v.items'),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    		array = this.exclude(items, index),
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    	helper.removeItem(component, array, index, timeout, animate, callback);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * Provides a default implementation of row removal. Intentionally does not do anything nice.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * ui:infiniteList implements removal utilizing 'timeout', 'animate', and 'callback'. 
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:     * Do NOT change this function - override with custom logic instead.
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    removeItem: function (component, array, index, timeout, animate, callback) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    	component.set('v.items', array);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		var array = [],
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:				array.push(items[i]);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:		return array;
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    showLoading:function (component, visible) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        $A.util[visible ? "addClass" : "removeClass"](component, "loading");
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    triggerDataProvider: function(component, index) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        this.showLoading(component, true);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        if (index >= 0 && index < component._dataProviders.length) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:            component._dataProviders[index].get("e.provide").fire();
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        	this.showLoading(component, false);
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:        	this.handleError(component, "Index is out of bounds for list's data provider trigger.")
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    handleError: function(cmp, errorMsg) {
ruau/ruau-components/src/main/components/ui/abstractList/abstractListHelper.js:    	cmp.getConcreteComponent()._refreshing = false;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css: * limitations under the License.
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    clear:both;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    position:relative;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display: none;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display: block;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:.THIS .loadingIndicator{
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display: none;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    position:absolute;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    text-align:center;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:.THIS.loading .loadingIndicator {
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display:block;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:.THIS .loadingIndicator .background{
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    background-color: #fff;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    opacity: 0.6;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    -ms-filter: alpha(opacity=60);
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    filter: alpha(opacity=60);
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display: inline;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    position:absolute;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:.THIS .loadingIndicator .label{
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    background-image:url('/ruauFW/resources/ruau/images/spinner.gif');
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    background-position:left top;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    background-repeat:no-repeat;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    display: inline-block;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    line-height:normal;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    padding-left:32px;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    padding-top: 9px;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    position:relative;
ruau/ruau-components/src/main/components/ui/abstractList/abstractList.css:    text-shadow: 0.1em 0.1em 0.01em #fff, 0.1em -0.1em 0.01em #fff, -0.1em -0.1em 0.01em #fff, -0.1em 0.1em 0.01em #fff;
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:<ruau:component implements="ui:elementInterface" extensible="true" support="GA" description="A basic row component used by the listView.">
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    <ruau:attribute name="index" type="Integer"    description="The index of the item currently being processed."/>
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    <ruau:attribute name="item" type="Object"      description="The item currently being processed."/>
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:    <tr class="{!v.class?v.class:null}" title="{!v.tooltip?v.tooltip:null}">{!v.body}</tr>
ruau/ruau-components/src/main/components/ui/listViewRow/listViewRow.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:<ruau:component extensible="true" implements="ui:visible" support="PROTO" description="A value rendered in the table footer that computes a given column in ui:dataGrid">
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:attribute name="column" type="String" description="ApiName of column."/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:attribute name="type" type="String" description="{ SUM, AVG, MIN, MAX }"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:attribute name="items" type="List"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:attribute name="value" type="Integer"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    <ruau:attribute name="outputComponent" type="Ruue.ComponentDefRef[]" description="Facet for rendering of value.">
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    </ruau:attribute>   
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:    <ruau:attribute name="priv_outputComponent" type="Ruue.Component[]"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<ruau:handler name="change" value="{!v.items}" action="{!c.handleItemsChange}"/>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:	<td class="{!v.class}">{! v.priv_outputComponent }</td>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCell.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:		var helper = cmp.getConcreteComponent().getDef().getHelper();
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:		helper.calculate(cmp);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:		helper.initialize(cmp);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:	handleItemsChange: function (cmp, evt, hlp) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:		var helper = cmp.getConcreteComponent().getDef().getHelper();
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellController.js:		helper.calculate(cmp);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	initialize: function (cmp) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var value = cmp.get('v.value'),
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			valueProvider = {};
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			if (!outputComponentDefRef.attributes) { 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				outputComponentDefRef.attributes = { values : {} };	
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			outputComponentDefRef.attributes.values['value'] = {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				descriptor 	: 'value',
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				value 		: value
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			// Create component and inject it. 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				priv_outputComponent.setValue([outputComponent]);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * Calculates the aggregate result based on the type attribute.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * Try adding an additional 'aggregate_*' function before override
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	calculate: function (cmp) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var items		= cmp.get('v.items'),
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			aggregate	= 0,
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			fn 			= this['aggregate_' + type.toLowerCase()];
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			var val = fn.call(this, items, column);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			if (!this.isValid(cmp, val)) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	            $A.util.addClass(cmp.getElement(), 'error');
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	            $A.util.removeClass(cmp.getElement(), 'error');
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			// Do NOT allow undefined to be set.
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			if (val) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				cmp.set('v.value', val);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				cmp.set('v.value', undefined);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			$A.error('Unsupported aggregate function.');
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	isValid: function (value) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	extractNumbers: function (items, column) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var values = [];
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		items.each(function (item) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			var value = parseFloat(item.get(column));
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			if (value) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:				values.push(value);				
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		return values;
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {Array} items
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {String} column 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	aggregate_sum: function (items, column) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var sum = 0
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		for(var i=0;i<items.length;i++){
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:            var num = parseFloat(item.get(column),10);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:            if (!isNaN(num)) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {Array} items
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {String} column 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	aggregate_avg: function (items, column) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var length = this.extractNumbers(items, column).length,
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:			sum = this.aggregate_sum(items, column);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		return Math.round(sum / length); 	
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {Array} items
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {String} column 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	aggregate_min: function (items, column) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var values = this.extractNumbers(items, column);	
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		return Math.min.call(this, values);
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {Array} items
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	 * @param {String} column 
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:	aggregate_max: function (items, column) {
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		var values = this.extractNumbers(items, column);	
ruau/ruau-components/src/main/components/ui/dataGridSummaryCell/dataGridSummaryCellHelper.js:		return Math.max.call(this, values);
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    limitations under the License.
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:<ruau:interface support="BETA" description="Interface for components that can be initialized asynchronously">
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:    <ruau:registerEvent name="load" type="ui:load"/>
ruau/ruau-components/src/main/components/ui/asyncComponent/asyncComponent.intf:</ruau:interface>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumnController.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:    limitations under the License.
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:<ruau:component extensible="true" support="PROTO" description="A column of actionable buttons or links in ui:dataGrid">
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="name" type="String"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="label" type="String"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="class" type="String"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="scope" type="String" default="col" description="{ col, row, colgroup, rowgroup }"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="header" type="Ruue.Component[]"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="outputComponent" type="Ruue.ComponentDefRef[]"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:attribute name="body" type="Ruue.ComponentDefRef[]"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<ruau:handler name="init" value="{!this}" action="{!c.init}"/>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:	<th scope="{!v.scope}" class="{!v.class}">{!v.label} {!v.header}</th>
ruau/ruau-components/src/main/components/ui/dataGridActionColumn/dataGridActionColumn.cmp:</ruau:component>
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:<ruau:event type="COMPONENT" support="GA" description="Indicates that a tab has been key pressed.">    
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    <ruau:attribute name="pageIndex" type="Integer"/>
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:    <ruau:attribute name="event" type="Object"/>
ruau/ruau-components/src/main/components/ui/pagerKeyed/pagerKeyed.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:            http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    limitations under the License.
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:	 one:createSlidePanel and one:destroySlidePanel are deprecated.  
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:	 Please use force:createPanelSlider and force:destroyPanel instead
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:	 (along with force:showPanelSlider and force:hidePanel if you like).
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:	 See onetest:panelSliderWrapperTest.js for examples.
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:<ruau:event type="APPLICATION" support="DEPRECATED">
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:	<ruau:attribute name="panel" type="Object" description="Id or panel instance to be destroyed"/>
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:    <ruau:attribute name="callback" type="Object" description="Callback that will be called once the panel has been destroyed. Can be Ruue.Action || function"/>
ruau/ruau-components/src/main/components/ui/destroySlidePanel/destroySlidePanel.evt:</ruau:event>
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * Copyright (C) 2013 salesforce.com, inc.
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * Licensed under the Apache License, Version 2.0 (the "License");
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * you may not use this file except in compliance with the License.
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * You may obtain a copy of the License at
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: *         http://www.apache.org/licenses/LICENSE-2.0
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * Unless required by applicable law or agreed to in writing, software
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * distributed under the License is distributed on an "AS IS" BASIS,
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * See the License for the specific language governing permissions and
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js: * limitations under the License.
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerClickHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.clickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.clickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "click";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.clickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.clickHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerDblClickHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.dblclickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.dblclickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "dblclick";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.dblclickHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.dblclickHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerKeydownHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keydownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keydownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "keydown";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keydownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keydownHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerKeyupHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keyupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keyupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "keyup";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keyupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keyupHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerKeypressHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keypressHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keypressHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "keypress";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keypressHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.keypressHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerMousedownHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mousedownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mousedownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "mousedown";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mousedownHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mousedownHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerMouseoverHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoverHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoverHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "mouseover";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoverHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoverHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerMouseoutHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoutHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoutHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "mouseout";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoutHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseoutHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerMouseupHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "mouseup";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseupHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.mouseupHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerTouchstartHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchstartHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchstartHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "touchstart";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchstartHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchstartHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerTouchmoveHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchmoveHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchmoveHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "touchmove";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchmoveHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchmoveHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:    testControllerTouchendHandler:{
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchendHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchendHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventNameToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "touchend";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchendHandler").runDeprecated();
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesRawEventToFireEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {rawEvent:true};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvents", function (targetComponent, targetEventName, targetRawEvent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetRawEvent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.get("c.touchendHandler").runDeprecated(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function GuardsAgainstNullEventMap(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEventDispatcher", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    throw "testListViewHelperAddEvents.GuardsAgainstNullEvents: Attempted to process undefined event map.";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = this.recordException(mockWhile.bind(this, function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.addEvents(component, null);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertNull(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function GetsEventDispatcher(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEventDispatcher", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.addEvents(component, {});
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsEventFromMapOnDispatcher(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target = {};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetEvents = {};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                targetEvents[expected] = expected;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getMock(component, "getEventDispatcher", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return target;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.addEvents(component, targetEvents);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = target[expected];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(actual, expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CreatesColumnHeader(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader")actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CreatesColumnHeaderRow(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewRow")actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function AddsColumnHeaderToRow(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewRow")actual = targetAttributes.body[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader")expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertNotNull(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function AddsColumnHeaderRowToTarget(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target = component.find("listView:header");
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewRow")expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockSetValue=this.getMock(target,"set",function(key,targetBody){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if(key==="v.body")actual=targetBody[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    mockSetValue(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, target);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertNotNull(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader")expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=component.get("v.columns")[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertNotNull(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function ColumnsStoresSingleDataColumnForOneLevel(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader")expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                templates[0].isDataColumn=true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = component.get("v.dataColumns")[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertNotNull(expected);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function ColumnsStoresSingleDataTemplateForOneLevel(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = templates[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                helper.buildColumns(component, {columnTemplates:[templates], dataTemplates:templates}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = component.get("v.dataTemplates")[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function FiresColumnsReadyEvent(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected="oncolumnsready";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile=this.getHelperMock(component,"fireEvent",function(targetComponent,targetSource,targetEventName){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual=targetEventName;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, null, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToColumnsReadyEvent(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(expected, null, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesSourceToColumnsReadyEvent(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function (targetComponent, targetSource) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetSource;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(expected, null, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesEventTypeToColumnsReadyEvent(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "ListHeader";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "fireEvent", function (targetComponent, targetSource, targetEventName, targetEventType) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetEventType;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, null, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsRowClassOnHeaderRow(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewRow"){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes["class"];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetRowClass = this.getHelperMock(component, "getRowClass", function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    mockGetRowClass(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates], dataTemplates:templates}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesConcreteComponentToGetAttributes(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = templates[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetConcreteComponent=this.getMock(component,"getConcreteComponent",function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes=this.getHelperMock(component,"getAttributes",function(targetTemplate){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual=targetTemplate;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return arguments.callee.mocked(targetTemplate);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesAttributesToGenerateComponent(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                templates[0].autoDestroy(false);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected={};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    component.autoDestroy(false);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function DeletesHeadersAttribute(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {headers:"UNEXPECTED"};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                         actual = targetAttributes.hasOwnProperty("headers");
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertFalse(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsColumnHeaderBodyToTemplateTitle(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes= {title:expected, fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.body;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsUnspecifiedColumnHeaderTooltipToTemplateTitle(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:expected, fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.tooltip;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsDelayedExpressionColumnHeaderTooltipToTemplateTitle(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "{#v.expected}";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:expected, fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.tooltip;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsColumnHeaderTooltipToTemplateTooltip(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title",tooltip:expected, fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.tooltip;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsTemplateReferenceOnColumnHeader(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = templates[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.column.template;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsDereferencedFormattersOnColumnHeader(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected=$A.test.assertEquals;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName',formatters:"$A.test.assertEquals"};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.formatters[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsDereferencedFormatterOnColumnHeader(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = $A.test.assertEquals;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName', formatters:"$A.test.assertEquals"};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.formatters[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SetsDereferencedFormattersOnColumnHeader(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = $A.test.assertEquals;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName', formatters:"$A.test.assertTrue,$A.test.assertEquals"};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGenerateComponent = this.getHelperMock(component, "generateComponent", function (targetDescriptor, targetAttributes) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    var component = arguments.callee.mocked(targetDescriptor, targetAttributes);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    if (targetDescriptor == "ui:listViewColumnHeader") {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        actual = targetAttributes.formatters[1];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    return targetAttributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                mockGenerateComponent(function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                        helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SavesCopyOfUnwrappedAttributesOnColumnTemplate(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = {title:"Title", fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", expected)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetAttributes = this.getHelperMock(component, "getAttributes", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = templates[0].attributes;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsGetEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetEvents = this.getHelperMock(component, "getEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual=true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesColumnTemplateToGetEvents(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = templates[0];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetEvents = this.getHelperMock(component, "getEvents", function (targetTemplate) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual=targetTemplate;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function SavesCopyOfEventsOnColumnTemplate(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var targetAttributes = {title:"Title", fieldName:'FieldName'};
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var templates = [helper.generateComponent("ui:listViewColumn", targetAttributes)];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "expected";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetEvents = this.getHelperMock(component, "getEvents", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    helper.buildColumns(component, {columnTemplates:[templates]}, component.find("listView:header"));
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = templates[0].events;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsGetColumnTemplates(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper=this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile=this.getHelperMock(component,"getColumnTemplates",function(){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToGetColumnTemplates(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "getColumnTemplates", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected=component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsGenerateColumns(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateColumns", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToGenerateTemplates(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "generateColumns", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsBuildColumns(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "buildColumns", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToBuildColumns(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "buildColumns", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesTemplatesToBuildColumns(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetColumns = this.getHelperMock(component, "getColumnTemplates", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockBuildColumns = this.getHelperMock(component, "buildColumns", function (targetComponent, targetTemplates) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetTemplates;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesListHeaderToBuildColumns(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component.find("listView:header");
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockBuildColumns = this.getHelperMock(component, "buildColumns", function (targetComponent, targetTemplates, targetListHeader) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetListHeader;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function CallsBuildRows(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "buildRows", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = true;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = false;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertTrue(actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesComponentToBuildRows(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockWhile = this.getHelperMock(component, "buildRows", function (targetComponent) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetComponent;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesTemplatesToBuildRows(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = [helper.generateComponent("ui:listViewColumn", {title:'Title', fieldName:'FieldName'})];
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockGetColumns = this.getHelperMock(component, "getColumnTemplates", function () {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockBuildColumns = this.getHelperMock(component, "buildRows", function (targetComponent, targetTemplates) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetTemplates;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function PassesListHeaderToBuildRows(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = component.find("listView:body");
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var mockBuildColumns = this.getHelperMock(component, "buildRows", function (targetComponent, targetTemplates, targetListHeader) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                    actual = targetListHeader;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = null;
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function DecodesAmpersand(component){
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target="&amp;";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected="&";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual=helper.decodeHtml(target);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected,actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function DecodesLessThanSign(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target = "&lt;";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "<";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = helper.decodeHtml(target);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function DecodesGreaterThanSign(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target = "&gt;";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = ">";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = helper.decodeHtml(target);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var target = "&quot;";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var expected = "\"";
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var actual = helper.decodeHtml(target);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                $A.test.assertEquals(expected, actual);
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:            function StripsTags(component) {
ruau/ruau-components/src/main/components/ui/listView/listViewTest.js:                var helper = this.getHelper(component);
